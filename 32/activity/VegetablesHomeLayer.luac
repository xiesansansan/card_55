slot0 = class("VegetablesHomeLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "dugujz_24.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled2",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {
			{
				name = "untitled3",
				cType = "TopResourceNode",
				params = {
					anchor = {
						x = 1,
						y = 1
					},
					moduleIdList = {
						1111,
						1112,
						1114
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {}
			},
			{
				name = "mFertilizerGoodsLabel",
				cType = "Label",
				params = {
					isRichText = true,
					anchor = {
						x = 1,
						y = 0.5
					},
					pos = {
						x = -45.38,
						y = -68.47
					},
					text = TR("当前拥有神匠招募令：0")
				},
				children = {}
			}
		}
	},
	{
		name = "mParent",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "VegetNode",
				cType = "TemplateNode",
				custom = {
					{
						value = "untitled59-image",
						name = "image",
						type = "string"
					},
					{
						value = "untitled83-subKey",
						name = "subKey",
						type = "string"
					}
				},
				params = {
					pos = {
						x = 126.25,
						y = -42.2
					}
				},
				children = {
					{
						name = "untitled59",
						cType = "Sprite",
						params = {
							image = "dugujz_1.png",
							childName = "sprite",
							pos = {
								x = 8.5,
								y = 51.57
							}
						},
						children = {}
					},
					{
						name = "speedUpNode",
						cType = "Node",
						params = {
							hide = true,
							pos = {
								x = 9.07,
								y = 51.61
							}
						},
						children = {
							{
								name = "untitled62",
								cType = "Button",
								params = {
									image = "dugujz_4.png",
									clickAction = "onSpeedUp",
									childName = "button",
									pos = {
										x = 49.38,
										y = 40.31
									}
								},
								children = {}
							},
							{
								name = "untitled76",
								cType = "ProgressBar",
								params = {
									normalImage = "jyt_51.png",
									bgImage = "jyt_50.png",
									childName = "progressBar",
									pos = {
										x = 10.66,
										y = -51.57
									}
								},
								children = {}
							},
							{
								name = "untitled66",
								cType = "Scale9Sprite",
								params = {
									image = "c_93.png",
									pos = {
										x = -0.18,
										y = -72.32
									},
									size = {
										width = 206.96,
										height = 24.47
									}
								},
								children = {}
							},
							{
								name = "untitled67",
								cType = "Label",
								params = {
									fontSize = 20,
									childName = "timeLabel",
									text = "00:00:00",
									pos = {
										x = -0.61,
										y = -72.84
									}
								},
								children = {}
							}
						}
					},
					{
						name = "harvestNode",
						cType = "Node",
						params = {
							hide = true,
							pos = {
								x = 9.07,
								y = 51.61
							}
						},
						children = {
							{
								name = "untitled61",
								cType = "Button",
								params = {
									image = "dgujz_5.png",
									clickAction = "onHarvest",
									childName = "button",
									pos = {
										x = 63.36,
										y = 79.74
									}
								},
								children = {}
							},
							{
								name = "untitled64",
								cType = "Sprite",
								params = {
									image = "dugujz_2.png",
									pos = {
										x = -10.13,
										y = 56.08
									}
								},
								children = {}
							}
						}
					},
					{
						name = "seedNode",
						cType = "Node",
						params = {
							hide = true,
							pos = {
								x = 9.07,
								y = 51.61
							}
						},
						children = {
							{
								name = "untitled60",
								cType = "Button",
								params = {
									image = "dugujz_3.png",
									clickAction = "onSeed",
									childName = "button",
									pos = {
										x = 49.02,
										y = 39.94
									}
								},
								children = {}
							},
							{
								name = "untitled78",
								cType = "Button",
								params = {
									image = "dugujz_6.png",
									clickAction = "onSeed",
									childName = "plusBtn",
									pos = {
										x = 0,
										y = 14
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled75",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							childName = "name",
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 12.53,
								y = 20.63
							},
							text = TR("名字")
						},
						children = {}
					},
					{
						name = "untitled82",
						cType = "Node",
						params = {
							pos = {
								x = -45.14,
								y = 16.39
							},
							size = {
								width = 100,
								height = 61.74
							}
						},
						children = {
							{
								name = "untitled83",
								cType = "RedDot",
								params = {
									subKey = "",
									moduleId = 22314
								},
								children = {}
							}
						}
					}
				}
			}
		}
	},
	{
		name = "untitled4",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 320
			}
		},
		children = {
			{
				name = "friendBtn",
				cType = "Button",
				params = {
					clickAction = "onClickFriendsBtn",
					zOrder = 20,
					image = "dugujz_7.png",
					anchor = {
						x = 1,
						y = 0.5
					},
					pos = {
						x = 6,
						y = 111
					}
				},
				children = {
					{
						name = "untitled6",
						cType = "Label",
						params = {
							fontSize = 26,
							pos = {
								x = 2.28,
								y = 0.13
							},
							size = {
								width = 20,
								height = 0
							},
							text = TR("好 友")
						},
						children = {}
					},
					{
						name = "untitled9",
						cType = "RedDot",
						params = {
							subKey = "CanSendSTA",
							moduleId = 22314,
							offset = {
								x = 0.2,
								y = 0.8
							}
						},
						children = {}
					}
				}
			},
			{
				name = "mFriendLayer",
				cType = "Node",
				params = {
					zOrder = 5,
					pos = {
						x = 0,
						y = 30.89
					}
				},
				children = {
					{
						name = "untitled30",
						cType = "Sprite",
						params = {
							image = "dgjz_8.png",
							childName = "listBg",
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 0,
								y = -41.82
							}
						},
						children = {}
					},
					{
						name = "untitled31",
						cType = "ListView",
						params = {
							childName = "friendListView",
							direction = true,
							pos = {
								x = 13,
								y = -166.23
							},
							size = {
								width = 194,
								height = 318.59
							}
						},
						children = {
							{
								name = "cellItem",
								cType = "Layout",
								custom = {
									{
										value = "untitled41-modelId",
										name = "modelId",
										type = "string"
									},
									{
										value = "untitled42-text",
										name = "name",
										type = "string"
									},
									{
										value = "untitled43-text",
										name = "lv",
										type = "string"
									},
									{
										value = "untitled45-hide",
										name = "CanSendSTA",
										type = "string"
									},
									{
										value = "untitled44-hide",
										name = "CanSendSTA2",
										type = "string"
									},
									{
										value = "untitled44-friendPlayerId",
										name = "playerId",
										type = "string"
									}
								},
								params = {
									pos = {
										z = 0,
										x = 322.95,
										y = 192.76
									},
									size = {
										width = 194,
										height = 99
									}
								},
								children = {
									{
										name = "untitled40",
										cType = "Sprite",
										params = {
											image = "dugujz_9.png",
											pos = {
												x = 97,
												y = 49.5
											}
										},
										children = {}
									},
									{
										name = "untitled41",
										cType = "PlayerHeroNode",
										params = {
											scale = 0.8,
											modelId = 19010000,
											allowClick = false,
											pos = {
												x = 38.39,
												y = 49.6
											}
										},
										children = {}
									},
									{
										name = "untitled42",
										cType = "Label",
										params = {
											fontSize = 18,
											childName = "nameLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 80.86,
												y = 81.38
											},
											text = TR("名字")
										},
										children = {}
									},
									{
										name = "untitled43",
										cType = "Label",
										params = {
											fontSize = 18,
											isRichText = true,
											childName = "LvLable",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 81.88,
												y = 61.02
											},
											text = TR("等级：")
										},
										children = {}
									},
									{
										name = "untitled45",
										cType = "Sprite",
										params = {
											childName = "alreadyLearnLabel",
											image = "dugujz_10.png",
											hide = true,
											pos = {
												x = 135.83,
												y = 25.74
											}
										},
										children = {}
									},
									{
										name = "untitled44",
										cType = "Button",
										custom = {
											{
												value = 1,
												name = "friendPlayerId",
												type = "integer"
											}
										},
										params = {
											clickAction = "onSendFriend",
											hide = true,
											image = "c_27.png",
											childName = "sendFriendBtn",
											pos = {
												x = 134.23,
												y = 25.79
											},
											titleText = TR("帮助招募")
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "untitled32",
						cType = "Scale9Sprite",
						params = {
							image = "fwq_12.png",
							pos = {
								x = 110.73,
								y = -182.43
							},
							size = {
								width = 170,
								height = 2
							}
						},
						children = {}
					},
					{
						name = "untitled38",
						cType = "Button",
						params = {
							childName = "sendBtn",
							image = "c_32.png",
							clickAction = "onOneKeySend",
							pos = {
								x = 109.87,
								y = -213.03
							},
							titleText = TR("一键雇佣")
						},
						children = {}
					},
					{
						name = "untitled39",
						cType = "Label",
						params = {
							hide = true,
							childName = "emptyHint",
							pos = {
								x = 110.95,
								y = -36.03
							},
							text = TR("您还没有好友")
						},
						children = {}
					},
					{
						name = "untitled79",
						cType = "Label",
						params = {
							fontSize = 18,
							isRichText = true,
							childName = "fertilizerLabel",
							pos = {
								x = 110.32,
								y = -255.67
							},
							text = TR("今日可帮忙雇佣次数：0")
						},
						children = {}
					}
				}
			},
			{
				name = "onekeyMenuBtn",
				cType = "Button",
				params = {
					clickAction = "onClickMenuBtn",
					zOrder = 20,
					image = "dugujz_7.png",
					anchor = {
						x = 1,
						y = 0.5
					},
					pos = {
						x = 6,
						y = 0
					}
				},
				children = {
					{
						name = "untitled8",
						cType = "Label",
						params = {
							fontSize = 26,
							pos = {
								x = 2.28,
								y = 0.13
							},
							size = {
								width = 20,
								height = 0
							},
							text = TR("快捷操作")
						},
						children = {}
					}
				}
			},
			{
				name = "mMenuLayer",
				cType = "Node",
				params = {
					zOrder = 5,
					pos = {
						x = 0,
						y = 28.64
					}
				},
				children = {
					{
						name = "untitled50",
						cType = "Sprite",
						params = {
							image = "dgjz_8.png",
							childName = "listBg",
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 0,
								y = -39.77
							}
						},
						children = {}
					},
					{
						name = "untitled51",
						cType = "Button",
						params = {
							image = "c_32.png",
							clickAction = "onOneKeySeed",
							pos = {
								x = 110.3,
								y = 91.99
							},
							titleText = TR("一键修复")
						},
						children = {}
					},
					{
						name = "untitled52",
						cType = "Button",
						params = {
							image = "c_32.png",
							clickAction = "onOneKeyFertilize",
							pos = {
								x = 110.28,
								y = -32.02
							},
							titleText = TR("一键加速")
						},
						children = {}
					},
					{
						name = "untitled55",
						cType = "Button",
						params = {
							image = "c_32.png",
							clickAction = "onOneKeyHarvest",
							pos = {
								x = 110.35,
								y = -151.95
							},
							titleText = TR("一键收取")
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled10",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 0
			}
		},
		children = {
			{
				name = "untitled11",
				cType = "Sprite",
				params = {
					image = "sy_7.png",
					anchor = {
						x = 1,
						y = 0
					},
					pos = {
						x = 122,
						y = 0
					}
				},
				children = {
					{
						name = "untitled12",
						cType = "Label",
						params = {
							fontSize = 24,
							pos = {
								x = 19.63,
								y = 45.56
							},
							size = {
								width = 30,
								height = 80
							},
							text = TR("消息")
						},
						children = {}
					},
					{
						name = "msgListView",
						cType = "ListView",
						params = {
							bounce = true,
							direction = true,
							pos = {
								x = 35.61,
								y = 4.16
							},
							size = {
								width = 275.42,
								height = 80
							}
						},
						children = {
							{
								name = "msgItem",
								cType = "Layout",
								custom = {
									{
										value = "untitled15-text",
										name = "text",
										type = "string"
									}
								},
								params = {
									size = {
										width = 275.42,
										height = 25
									}
								},
								children = {
									{
										name = "untitled15",
										cType = "Label",
										params = {
											fontSize = 18,
											isRichText = true,
											childName = "text",
											pos = {
												x = 136.32,
												y = 5.96
											},
											size = {
												width = 275.42,
												height = 0
											},
											text = TR("我掉尼玛爱啊的说法三神僧！我掉尼玛爱啊的说法三神僧！")
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "untitled27",
						cType = "Button",
						params = {
							image = "c_pure.png",
							clickAction = "onClickLog",
							pos = {
								x = 217.31,
								y = 43.31
							},
							size = {
								width = 367.06,
								height = 85.99
							}
						},
						children = {}
					},
					{
						name = "mEmptyHint",
						cType = "Label",
						params = {
							hide = true,
							pos = {
								x = 174.23,
								y = 40.68
							},
							text = TR("暂无消息")
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled17",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 300.23,
				y = 640
			}
		},
		children = {
			{
				name = "mTimeNode",
				cType = "Scale9Sprite",
				params = {
					image = "xshd_3.png",
					pos = {
						x = 16.88,
						y = -85.03
					},
					size = {
						width = 350,
						height = 40
					}
				},
				children = {
					{
						name = "timeBg",
						cType = "Sprite",
						params = {
							image = "xshd_6.png",
							pos = {
								x = 225.71,
								y = 18.12
							}
						},
						children = {}
					},
					{
						name = "untitled21",
						cType = "Label",
						params = {
							pos = {
								x = 91.41,
								y = 19
							},
							text = TR("活动倒计时：")
						},
						children = {}
					},
					{
						name = "hour",
						cType = "Label",
						params = {
							text = "0",
							fontName = "xshd_7.png",
							isRichText = true,
							pos = {
								x = 163.91,
								y = 18.17
							}
						},
						children = {}
					},
					{
						name = "minute",
						cType = "Label",
						params = {
							text = "0",
							fontName = "xshd_7.png",
							isRichText = true,
							pos = {
								x = 202.91,
								y = 18.17
							}
						},
						children = {}
					},
					{
						name = "second",
						cType = "Label",
						params = {
							text = "0",
							fontName = "xshd_7.png",
							isRichText = true,
							pos = {
								x = 245.91,
								y = 18.17
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled77",
				cType = "Button",
				params = {
					image = "tb_gn_310.png",
					clickAction = "onClickShop",
					pos = {
						x = -87.3,
						y = -164.16
					}
				},
				children = {}
			}
		}
	}
}
slot1 = {
	{
		orderId = 1,
		scale = 0.9,
		pos = cc.p(-328.08, -229.03)
	},
	{
		orderId = 2,
		scale = 0.9,
		pos = cc.p(-92.5, -230.22)
	},
	{
		orderId = 3,
		scale = 0.9,
		pos = cc.p(147.75, -231.74)
	},
	{
		orderId = 4,
		scale = 0.85,
		pos = cc.p(405.16, -188.17)
	},
	{
		orderId = 5,
		scale = 0.8,
		pos = cc.p(-208.84, -112.51)
	},
	{
		orderId = 6,
		scale = 0.8,
		pos = cc.p(24.49, -112.04)
	},
	{
		orderId = 7,
		scale = 0.8,
		pos = cc.p(243.25, -109.31)
	},
	{
		orderId = 8,
		scale = 0.7,
		pos = cc.p(-78.23, -41)
	},
	{
		orderId = 9,
		scale = 0.7,
		pos = cc.p(166.25, -42.2)
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.type = slot1.eType

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	slot0.requestGetInfo(slot0)

	slot0.mFriendLayer.showAction = function (slot0, slot1)
		if slot0.isMoving then
			return false
		end

		slot0.isFriendShow = (slot0 ~= nil and slot0) or not slot0.isFriendShow
		slot4, slot5 = slot0.mFriendLayer:getPosition()
		slot6, slot7 = slot0.friendBtn:getPosition()
		slot0.isMoving = true

		slot0.mFriendLayer:runAction(cc.Sequence:create(cc.MoveTo:create(0.15, cc.p((slot0.isFriendShow and 0 - slot0.mFriendLayer.listBg:getContentSize().width) or 0, slot5)), cc.CallFunc:create(function ()
			slot0.isMoving = false

			if not slot0.isFriendShow then
				slot0.isFriendShow = false
			end

			if slot1 then
				slot1()
			end

			slot0.mMenuLayer:setLocalZOrder(5)
			slot0.mMenuLayer.setLocalZOrder.mFriendLayer:setLocalZOrder(10)

			return 
		end)))
		slot0.friendBtn:runAction(cc.MoveTo:create(0.15, cc.p((slot0.isFriendShow and slot6 - slot0.mFriendLayer.listBg.getContentSize().width) or slot6 + slot0.mFriendLayer.listBg.getContentSize().width, slot7)))

		return true
	end

	ui.addTouchEvent({
		swallowTouch = false,
		node = slot0.mFriendLayer,
		beganEvent = function ()
			return true
		end,
		endedEvent = function (slot0, slot1)
			if not ui.touchInNode(slot0, slot0.mFriendLayer.listBg) and slot0.isFriendShow then
				slot0.mFriendLayer.showAction(false)
			end

			return 
		end
	})

	slot0.mMenuLayer.showAction = function (slot0, slot1)
		if slot0.isMoving then
			return false
		end

		slot0.isMenuShow = (slot0 ~= nil and slot0) or not slot0.isMenuShow
		slot4, slot5 = slot0.mMenuLayer:getPosition()
		slot6, slot7 = slot0.onekeyMenuBtn:getPosition()
		slot0.isMoving = true

		slot0.mMenuLayer:runAction(cc.Sequence:create(cc.MoveTo:create(0.15, cc.p((slot0.isMenuShow and 0 - slot0.mMenuLayer.listBg:getContentSize().width) or 0, slot5)), cc.CallFunc:create(function ()
			slot0.isMoving = false

			if not slot0.isMenuShow then
				slot0.isMenuShow = false
			end

			if slot1 then
				slot1()
			end

			slot0.mMenuLayer:setLocalZOrder(10)
			slot0.mMenuLayer.setLocalZOrder.mFriendLayer:setLocalZOrder(5)

			return 
		end)))
		slot0.onekeyMenuBtn:runAction(cc.MoveTo:create(0.15, cc.p((slot0.isMenuShow and slot6 - slot0.mMenuLayer.listBg.getContentSize().width) or slot6 + slot0.mMenuLayer.listBg.getContentSize().width, slot7)))

		return true
	end

	ui.addTouchEvent({
		swallowTouch = false,
		node = slot0.mMenuLayer,
		beganEvent = function (slot0, slot1)
			return true
		end,
		endedEvent = function (slot0, slot1)
			if not ui.touchInNode(slot0, slot0.mMenuLayer.listBg) and slot0.isMenuShow then
				slot0.mMenuLayer.showAction(false)
			end

			return 
		end
	})
	slot0.requestGetGuildBuildLog(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.refreshListView = function (slot0)
	if #clone(slot0.mMsgData) <= 0 then
		slot0.mEmptyHint:setVisible(true)

		return 
	else
		slot0.mEmptyHint:setVisible(false)
	end

	slot0.msgListView:removeAllChildren()

	for slot5 = #slot1, math.max(1, #slot1 - 2), -1 do
		slot8 = string.format("%s", MqTime.toDownFormat(Player:getCurrentTime() - slot1[slot5].Crdate))
		slot9 = ""

		if slot1[slot5].OperateType == 2 or slot6.OperateType == 3 then
			if slot6.OperateType == 2 then
				slot9 = TR("#FF974A%s#ffffff悄悄的给#ffffff%s#ffffff%s", slot6.OperatorName, TR("您"), TR("雇佣了铁匠"))
			elseif slot6.OperateType == 3 then
				slot11 = ""

				for slot15, slot16 in pairs(slot10) do
					slot17 = Utility.analysisStrResList(slot16)
					slot19, slot24 = Utility.getColorValue(slot18)
					slot11 = slot11 .. string.format("%s%s%s*%s ", slot20, Resource.getName(slot17[1].resourceId), "#ffffff", slot17[1].num)
				end

				slot9 = TR("#FF974A%s#ffffff收取了%s", slot6.OperatorName, slot11)
			end

			slot10 = slot0.createLayoutTemplateNode(slot0, "msgItem", {
				text = string.format("%s   %s", slot8, slot9)
			})

			slot10.setContentSize(slot10, cc.size(340, slot10.text:getContentSize().height))
			slot10.text:setPositionY(slot10.text.getContentSize().height/2)
			slot0.msgListView:pushBackCustomItem(slot10)
		end
	end

	return 
end
slot0.creatVegetabelsLand = function (slot0)
	if slot0.mVegetLandNode and next(slot0.mVegetLandNode) then
		for slot4, slot5 in pairs(slot0.mVegetLandNode) do
			if slot5 and not tolua.isnull(slot5) then
				slot5.removeFromParent(slot5)
			end
		end
	end

	slot0.mVegetLandNode = {}

	for slot4, slot5 in ipairs(slot0) do
		slot0.createOneVeget(slot0, slot5.orderId)
	end

	return 
end
slot0.onClickLog = function (slot0)
	if not next(slot0.mMsgData) then
		ui.showFlashView(TR("没有消息"))
	else
		LayerManager.addLayer({
			cleanUp = false,
			name = "activity.VegetablesLogLayer",
			data = {
				msgData = slot0.mMsgData
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	end

	return 
end
slot0.onClickShop = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "activity.VegetableShopLayer",
		data = {
			eType = slot0.type
		}
	})

	return 
end
slot0.onClickFriendsBtn = function (slot0)
	if slot0.isMenuShow then
		slot0.mMenuLayer.showAction(false, function ()
			slot0:popFriendLayer()

			return 
		end)
	else
		slot0.popFriendLayer(slot0)
	end

	return 
end
slot0.onClickMenuBtn = function (slot0)
	if slot0.isFriendShow then
		slot0.mFriendLayer.showAction(false, function ()
			slot0:popMenuLayer()

			return 
		end)
	else
		slot0.popMenuLayer(slot0)
	end

	return 
end
slot0.onOneKeySend = function (slot0)
	slot0.requestBatchSendFriend(slot0)

	return 
end
slot0.onSendFriend = function (slot0, slot1)
	slot0.requestSendFriend(slot0, slot1.friendPlayerId)

	return 
end
slot0.onOneKeySeed = function (slot0)
	slot0.requestOneKeySeed(slot0)

	return 
end
slot0.onOneKeyFertilize = function (slot0)
	slot0.requestOneKeyFertilize(slot0)

	return 
end
slot0.onOneKeyHarvest = function (slot0)
	slot0.requestOneKeyHarvest(slot0)

	return 
end
slot0.popFriendLayer = function (slot0)
	if slot0.mFriendLayer and not tolua.isnull(slot0.mFriendLayer) then
		slot0.requestFriendList(slot0, function (slot0)
			slot0:refreshFriendList(slot0.Info)

			return 
		end)
		slot0.mFriendLayer.showAction()
	end

	return 
end
slot0.refreshFriendList = function (slot0, slot1)
	slot2 = false

	slot0.mFriendLayer.friendListView:removeAllChildren()
	slot0.mFriendLayer.emptyHint:setVisible(false)

	if slot1 and next(slot1) then
		slot3 = pairs
		slot4 = slot1 or {}

		for slot6, slot7 in slot3(slot4) do
			slot0.mFriendLayer.friendListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "cellItem", {
				modelId = slot7.HeadImageId,
				name = slot7.Name,
				lv = TR("等级: %s%d", "#20781b", slot7.Lv),
				CanSendSTA = slot7.CanSendSTA,
				CanSendSTA2 = not slot7.CanSendSTA,
				playerId = slot7.PlayerId
			}))

			if slot7.CanSendSTA then
				slot2 = true
			end
		end
	else
		slot0.mFriendLayer.emptyHint:setVisible(true)
	end

	slot0.mFriendLayer.sendBtn:setEnabled(slot2)
	slot0.mFriendLayer.sendBtn:setTitleText((slot2 and TR("一键雇佣")) or TR("已雇佣"))

	return 
end
slot0.popMenuLayer = function (slot0)
	if slot0.mMenuLayer and not tolua.isnull(slot0.mMenuLayer) then
		slot0.mMenuLayer.showAction()
	end

	return 
end
slot0.getOneVegetPic = function (slot0, slot1, slot2)
	return ({
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		},
		{
			"dugujz_1.png",
			"dugujz_1.png",
			"dugujz_1.png"
		}
	})[slot1][slot2]
end
slot0.createOneVeget = function (slot0, slot1)
	slot2 = slot0.getCurrentVegetInfo(slot0, slot1)

	if not tolua.isnull(slot0.mVegetLandNode[slot1]) then
		slot0.mVegetLandNode[slot1]:removeFromParent()

		slot0.mVegetLandNode[slot1] = nil
	end

	slot3 = slot0.createLayoutTemplateNode(slot0, "VegetNode", {
		image = "dugujz_1.png",
		subKey = tostring(slot1)
	})

	slot3.setLocalZOrder(slot3, slot1 - 10)
	slot3.setScale(slot3, slot0[slot1].scale)
	slot3.setPosition(slot3, slot0[slot1].pos)
	slot0.mParent:addChild(slot3)

	slot0.mVegetLandNode[slot1] = slot3

	if slot2.SeedID == 0 then
		slot3.seedNode:setVisible(true)

		slot3.seedNode.button.id = slot2.Id
		slot3.seedNode.plusBtn.id = slot2.Id

		return 
	end

	slot0.showOnePlantInfo(slot0, slot1, slot2.EndTime, slot2.SeedID)

	if Player:getCurrentTime() < slot2.EndTime then
		slot3.speedUpNode:setVisible(true)

		slot3.speedUpNode.button.id = slot2.Id

		return 
	end

	slot3.harvestNode:setVisible(true)

	slot3.harvestNode.button.id = slot2.Id

	return 
end
slot0.showOnePlantInfo = function (slot0, slot1, slot2, slot3)
	slot5 = slot0.mVegetLandNode[slot1].getContentSize(slot4)
	slot10, slot16 = Utility.getColorValue(slot8)

	slot0.mVegetLandNode[slot1].name:setString(string.format("%s%s", slot11, Resource.getName(slot7)))
	slot0.mVegetLandNode[slot1].speedUpNode.progressBar:setMaxValue(VegetablesConfig.items[1].matureNeedTime)
	slot0.mVegetLandNode[slot1].speedUpNode.progressBar:setCurrValue(Player:getCurrentTime() - slot2 - VegetablesConfig.items[1].matureNeedTime)

	if slot2 - Player:getCurrentTime() <= 0 then
		return 
	end

	Utility.schedule(slot4.speedUpNode.timeLabel, function ()
		if 0 < slot0 - Player:getCurrentTime() then
			slot1.speedUpNode.timeLabel:setString(string.format("%s", MqTime.formatAsDay(slot0)))
		else
			slot2:requestGetInfo()
		end

		return 
	end, 1)

	return 
end
slot0.onSeed = function (slot0, slot1)
	LayerManager.addLayer({
		cleanUp = false,
		name = "activity.VegetablesSeedSelLayer",
		data = {
			landId = slot1.id,
			eType = slot0.type,
			callback = function (slot0)
				slot0:modifyVegetInfo(slot0.VegetablesLandInfo or {})

				return 
			end
		}
	})

	return 
end
slot0.onSpeedUp = function (slot0, slot1)
	slot0.applyFertilizerSelectLayer(slot0, slot1.id)

	return 
end
slot0.applyFertilizerSelectLayer = function (slot0, slot1)
	if slot0.mSelfData.HighLvFertilizerInfo == "" then
		ui.showFlashView(TR("道具数量不足"))
		LayerManager.addLayer({
			cleanUp = false,
			name = "commonlayer.DlgBuyTimesLayer",
			data = {
				boughtNum = slot0.mSelfData.BuyCount,
				maxNum = slot0.mSelfData.HighLvFertilizerBuyLimit,
				price = slot0.mSelfData.Price,
				callback = function (slot0)
					slot0:requestBuyCount(slot0)

					return 
				end
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	else
		slot2 = Utility.analysisStrResList(slot0.mSelfData.HighLvFertilizerInfo)

		if 0 < slot0.getCurrentVegetInfoByEntityId(slot0, slot1).EndTime - Player:getCurrentTime() then
			LayerManager.addLayer({
				cleanUp = false,
				name = "bag.UseNormalGoodsLayer",
				data = {
					info = {
						ModelId = slot2[1].resourceId,
						Num = math.min(math.ceil(slot4/VegetablesConfig.items[1].highLvFertilizerShortenTime), slot2[1].num)
					},
					callBack = function (slot0)
						slot0:requestApplyFertilizer(slot0.requestApplyFertilizer, false, slot0)

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	end

	return 
end
slot0.onHarvest = function (slot0, slot1)
	slot0.requestHarvest(slot0, slot1.id)

	return 
end
slot0.refreshMyInfo = function (slot0)
	if slot0.mSchelTime then
		slot0.stopAction(slot0, slot0.mSchelTime)

		slot0.mSchelTime = nil
	end

	slot0.updateTime(slot0)

	slot0.mSchelTime = Utility.schedule(slot0, slot0.updateTime, 1)

	slot0.mFriendLayer.fertilizerLabel:setString(TR("今日可帮忙雇佣次数：%s%s", "#8BA857", slot0.mSelfData.SendableNum))

	slot1 = 0

	if slot0.mSelfData.HighLvFertilizerInfo ~= "" then
		slot1 = Utility.analysisStrResList(slot0.mSelfData.HighLvFertilizerInfo)[1].num
	end

	slot0.mFertilizerGoodsLabel:setString(TR("当前拥有神匠招募令：%s%s", "#8BA857", slot1))

	return 
end
slot0.updateTime = function (slot0)
	if 0 < slot0.mEndTime - Player:getCurrentTime() then
		slot2, slot3, slot4 = MqTime.toHour(slot1, true)

		if 86400 <= slot1 then
			slot0.timeBg:setTexture("xshd_43.png")
			slot0.hour:setString(math.floor(slot2/24))
			slot0.minute:setString(slot2 - math.floor(slot2/24)*24)
			slot0.second:setString(slot3)
		else
			slot0.timeBg:setTexture("xshd_6.png")
			slot0.hour:setString(slot2)
			slot0.minute:setString(slot3)
			slot0.second:setString(slot4)
		end
	else
		slot0.hour:setString("0")
		slot0.minute:setString("0")
		slot0.second:setString("0")

		if slot0.mSchelTime then
			slot0.stopAction(slot0, slot0.mSchelTime)

			slot0.mSchelTime = nil
		end
	end

	return 
end
slot0.getCurrentVegetInfo = function (slot0, slot1)
	slot2 = {}

	for slot6, slot7 in pairs(slot0.mVegetabelsLandList) do
		if slot7.OrderId == slot1 then
			slot2 = clone(slot7)

			break
		end
	end

	return slot2
end
slot0.getCurrentVegetInfoByEntityId = function (slot0, slot1)
	slot2 = {}

	for slot6, slot7 in pairs(slot0.mVegetabelsLandList) do
		if slot7.Id == slot1 then
			slot2 = clone(slot7)

			break
		end
	end

	return slot2
end
slot0.getVegetImageByTimeAndID = function (slot0, slot1, slot2)
	slot5 = slot0.getOneVegetPic(slot0, slot2, 2)

	if slot1 - Player:getCurrentTime() <= VegetablesConfig.items[1].matureNeedTime/4 then
		slot5 = slot0.getOneVegetPic(slot0, slot2, 3)
	elseif slot4 < slot3 and slot3 <= slot4*2 then
		slot5 = slot0.getOneVegetPic(slot0, slot2, 2)
	elseif slot4*2 < slot3 and slot3 <= slot4*3 then
		slot5 = slot0.getOneVegetPic(slot0, slot2, 2)
	elseif slot4*3 < slot3 and slot3 <= slot4*4 then
		slot5 = slot0.getOneVegetPic(slot0, slot2, 2)
	end

	return slot5
end
slot0.modifyVegetInfo = function (slot0, slot1)
	if next(slot1) == nil or slot1.OrderId <= 0 then
		return 
	end

	slot0.mVegetabelsLandList[slot1.OrderId] = {}
	slot0.mVegetabelsLandList[slot1.OrderId] = slot1

	slot0.createOneVeget(slot0, slot1.OrderId)

	return 
end
slot0.getModuleName = function (slot0)
	slot1 = nil

	if slot0.type == 1 then
		slot1 = "MergedVegetablesInfo"
	elseif slot0.type == 2 then
		slot1 = "NormalCrossVegetablesInfo"
	end

	return slot1
end
slot0.requestGetInfo = function (slot0)
	slot0.mVegetabelsLandList = {}

	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			PlayerAttrObj:getPlayerAttrByName("PlayerId")
		},
		successCallback = function (slot0)
			slot1 = pairs
			slot2 = slot0.VegetablesLandList or {}

			for slot4, slot5 in slot1(slot2) do
				slot0.mVegetabelsLandList[slot5.OrderId] = {}
				slot0.mVegetabelsLandList[slot5.OrderId] = clone(slot5)
			end

			slot0.mEndTime = slot0.EndTime

			slot0:creatVegetabelsLand()

			slot0.mSelfData = slot0.SelfData or {}

			slot0:refreshMyInfo()

			return 
		end
	})

	return 
end
slot0.requestBatchSendFriend = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "BatchSendFriend",
		moduleName = slot0.getModuleName(slot0),
		methodData = {},
		successCallback = function (slot0)
			slot0.mCanGetCount = slot0.Count

			if slot0.mFriendLayer and not tolua.isnull(slot0.mFriendLayer) then
				slot0:refreshFriendList(slot0.Info)
			end

			return 
		end
	})

	return 
end
slot0.requestFriendList = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetFriendList",
		moduleName = slot0.getModuleName(slot0),
		methodData = {},
		successCallback = function (slot0)
			slot0.mCanGetCount = slot0.Count

			if slot0 then
				slot1(slot0)
			end

			return 
		end
	})

	return 
end
slot0.requestSendFriend = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "SendFriend",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			slot0.mCanGetCount = slot0.Count

			ui.showFlashView(TR("帮助雇用成功"))

			if slot0.mFriendLayer and not tolua.isnull(slot0.mFriendLayer) then
				slot0:refreshFriendList(slot0.Info)
			end

			return 
		end
	})

	return 
end
slot0.requestOneKeySeed = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "SeedOneKey",
		moduleName = slot0.getModuleName(slot0),
		methodData = {},
		successCallback = function (slot0)
			slot1 = pairs
			slot2 = slot0.VegetablesLandList or {}

			for slot4, slot5 in slot1(slot2) do
				slot0.mVegetabelsLandList[slot5.OrderId] = {}
				slot0.mVegetabelsLandList[slot5.OrderId] = clone(slot5)
			end

			slot0:creatVegetabelsLand()

			return 
		end
	})

	return 
end
slot0.requestOneKeyFertilize = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "FertilizeOneKey",
		moduleName = slot0.getModuleName(slot0),
		methodData = {},
		successCallback = function (slot0)
			slot1 = pairs
			slot2 = slot0.VegetablesLandList or {}

			for slot4, slot5 in slot1(slot2) do
				slot0.mVegetabelsLandList[slot5.OrderId] = {}
				slot0.mVegetabelsLandList[slot5.OrderId] = clone(slot5)
			end

			slot0:creatVegetabelsLand()

			slot0.mSelfData = slot0.SelfData or {}

			slot0:refreshMyInfo()

			return 
		end
	})

	return 
end
slot0.requestOneKeyHarvest = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "HarvestOneKey",
		moduleName = slot0.getModuleName(slot0),
		methodData = {},
		successCallback = function (slot0)
			ui.showFlashReward(slot0)

			slot1 = pairs
			slot2 = slot0.VegetablesLandList or {}

			for slot4, slot5 in slot1(slot2) do
				slot0.mVegetabelsLandList[slot5.OrderId] = {}
				slot0.mVegetabelsLandList[slot5.OrderId] = clone(slot5)
			end

			slot0:creatVegetabelsLand()
			slot0:requestGetGuildBuildLog()

			return 
		end
	})

	return 
end
slot0.requestGetGuildBuildLog = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetRecentRecord",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			PlayerAttrObj:getPlayerAttrByName("PlayerId")
		},
		successCallback = function (slot0)
			slot0.mMsgData = slot0.RecordList or {}

			slot0:refreshListView()

			return 
		end
	})

	return 
end
slot0.requestApplyFertilizer = function (slot0, slot1, slot2, slot3)
	slot0.socketRequest(slot0, {
		methodName = "ApplyFertilizer",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			slot1,
			slot2,
			slot3
		},
		successCallback = function (slot0)
			ui.showFlashView(TR("雇佣成功"))
			slot0:modifyVegetInfo(slot0.VegetablesLandInfo)

			slot0.mSelfData = slot0.SelfData or {}

			slot0:refreshMyInfo()

			return 
		end
	})

	return 
end
slot0.requestBuyCount = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "BuyFertilizableNum",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			ui.showFlashReward(slot0)

			slot0.mSelfData = slot0.SelfData or {}

			slot0:refreshMyInfo()

			return 
		end
	})

	return 
end
slot0.requestHarvest = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "Harvest",
		moduleName = slot0.getModuleName(slot0),
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			ui.showFlashReward(slot0)
			slot0:modifyVegetInfo(slot0.VegetablesLandInfo)
			slot0:requestGetGuildBuildLog()

			return 
		end
	})

	return 
end

return slot0
