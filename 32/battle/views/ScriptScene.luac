slot0 = require("battle.common.Const")
slot1 = require("battle.common.ResDefine")
slot2 = require("battle.common.UIHelper")
slot3 = require("common.SpineManager")
slot4 = require("battle.managers.BattleManager")
slot5 = require("battle.managers.TeamManager")
slot6 = require("battle.common.BuffHelper")
slot7 = require("battle.views.SkillButton")
slot8 = require("battle.views.HeroNode")
slot9 = require("battle.views.PetBar")
slot10 = require("battle.views.PreLoadLayer")
slot12 = class("ScriptScene", slot11)
slot13 = {
	skillHintCount = -1,
	turn = -1,
	cacheName = {}
}
slot12.ctor = function (slot0, slot1)
	if (slot1.script or "test") == "" then
		slot2 = "test"
	end

	({
		attacker = {},
		defender = {},
		pet = {},
		zhenfa = {},
		params = {
			fightStatus = 99999,
			isPvp = false,
			seed = 1000
		}
	})["attacker"][1] = {}
	({
		attacker = {},
		defender = {},
		pet = {},
		zhenfa = {},
		params = {
			fightStatus = 99999,
			isPvp = false,
			seed = 1000
		}
	})["defender"][1] = {}

	if require("guide.talk." .. slot2).initData.bg then
		slot4.params.bg = slot3.initData.bg
	end

	if slot3.initData.script1 then
		slot4.params.script1 = slot3.initData.script1
	end

	if slot3.initData.script2 then
		slot4.params.script2 = slot3.initData.script2
	end

	slot0.canSkip = slot3.initData.skip or false
	slot0.hasSkip = false
	slot0.hitPoint = slot3.initData.hitPoint or 0
	slot4.cb = slot1.cb
	slot0.steps = clone(slot3.steps)

	slot0.super.ctor(slot0, slot4)
	LayerManager.closeGuideLayer()

	return 
end
slot12.onCreate = function (slot0)
	slot0.super.onCreate(slot0)

	if slot0.uiNode.skipBtn and slot0.canSkip == false then
		slot0.uiNode.skipBtn:setVisible(false)
	end

	slot0.uiNode.autoBtn:setVisible(false)
	slot0.uiNode.chatBtn:setVisible(false)

	slot0.manualLogic = true
	slot1 = slot0.readBuff(1100023)
	slot2 = clone(slot1)
	slot2.modelId = 9999999000000.0
	slot2.initialRatio = 1
	slot2.round = 100
	slot1.cache[9999999000000.0] = slot2
	slot4 = clone(slot3)
	slot4.modelId = 9999999000001.0
	slot4.initialRatio = 1
	slot4.round = 100
	slot1.cache[9999999000001.0] = slot4
	slot0.speed = 1

	return 
end
slot12.nextStep = function (slot0)
	if slot0.hasSkip == true then
		return 
	end

	if not slot0.steps[1] then
		print("剧情结束...")

		return 
	end

	if slot0["cmd_" .. slot1.cmd] == nil then
		error("不支持的命令:" .. slot2)
	end

	slot0[slot2](slot0, slot1.params)
	table.remove(slot0.steps, 1)

	return 
end
slot12.delayNextStep = function (slot0, slot1, slot2)
	slot0.runAction(slot0, cc.Sequence:create(cc.DelayTime:create(slot1), cc.CallFunc:create(function ()
		if slot0 then
			slot0()
		end

		slot1:nextStep()

		return 
	end)))

	return 
end
slot12.setPetState = function (slot0, slot1, slot2)
	slot0.super.setPetState(slot0, slot1, slot2)

	if slot2 == slot0.UnitState.IDLE and slot0.pets[slot1].script_skill == true then
		slot3.script_skill = false

		slot0.nextStep(slot0)
	end

	return 
end
slot12.setUnitState = function (slot0, slot1, slot2)
	slot0.super.setUnitState(slot0, slot1, slot2)

	if slot2 == slot0.UnitState.IDLE then
		if slot0.heroNodes[slot1].script_skill == true then
			slot3.script_skill = false

			slot0.nextStep(slot0)
		end

		if slot3.hint_skill == true then
			slot3.hint_skill = false

			if 0 < slot1.skillHintCount then
				slot1.skillHintCount = slot1.skillHintCount - 1
			end

			if slot1.skillHintCount == 0 then
				slot1.skillHintCount = -1

				slot0.nextStep(slot0)
			end
		end
	end

	return 
end
slot12.updateRound = function (slot0, slot1, slot2)
	slot0.super.updateRound(slot0, slot1, slot2)

	if 0 <= slot0.turn then
		slot0.turn = slot0.turn - 1
	end

	if slot0.turn == 0 then
		slot1.manualLogic = true

		slot0.nextStep(slot0)
	end

	return 
end
slot12.initSkillBtn = function (slot0)
	slot2 = slot0.uiNode:getChildByName("roleNode")
	slot3 = 280
	slot4 = 0

	if slot0.pets[slot1.UnitGroup.ATTACKER] and slot5.hasPowerSkill(slot5) and slot0.petBar == nil then
		slot0.petBar = require("battle.views.PetBar2"):create(slot5, slot0)

		slot0.petBar:setPosition((display.xSafeScale*458)/display.minSafeScale, (display.ySafeScale*-230)/display.minSafeScale)
		slot2.addChild(slot2, slot0.petBar, 1)

		slot3 = 130
	end

	if slot0.data.isPvp == true then
		return 
	end

	if table.nums(slot0.units) == 0 then
		return 
	end

	if slot0.skillbg == nil then
		slot6 = cc.Sprite:create("zd_6.png")

		slot6.setAnchorPoint(slot6, cc.p(1, 0.5))
		slot6.setPosition(slot6, cc.p((display.xSafeScale*568)/display.minSafeScale, -260))

		slot0.skillbg = slot6

		slot2.addChild(slot2, slot6)
	end

	slot6 = {}

	for slot10, slot11 in pairs(slot0.units) do
		if slot11.group == slot1.UnitGroup.ATTACKER then
			table.insert(slot6, slot11)
		end
	end

	table.sort(slot6, function (slot0, slot1)
		return slot0.order < slot1.order
	end)

	for slot10, slot11 in pairs(slot0.skillBtns) do
		slot12 = false

		for slot16, slot17 in pairs(slot6) do
			if slot17.order == slot10 and slot17.uid == slot11.uid then
				slot12 = true
			end
		end

		if slot12 == false then
			slot11.removeFromParent(slot11)

			slot0.skillBtns[slot10] = nil
		end
	end

	slot7 = 0

	if slot0.skillBtns == nil then
		slot0.skillBtns = {}
	end

	for slot11, slot12 in ipairs(slot6) do
		slot7 = slot7 + 1

		if slot0.skillBtns[slot12.order] == nil then
			slot13 = slot2.new(slot12.uid, slot0.atkCnt, slot7, slot12.step, slot12.order, slot0.data.isPvp, cc.p(slot3, slot4))

			slot2.addChild(slot2, slot13)

			slot13.uid = slot12.uid
			slot0.skillBtns[slot12.order] = slot13
		else
			slot0.skillBtns[slot12.order]:setPosition(slot1(#slot6, slot7, cc.p(slot3, slot4)))
		end
	end

	return 
end
slot12.parseScriptResList = function (slot0)
	slot1 = {}

	for slot5, slot6 in ipairs(slot0.steps) do
		if slot6.cmd == "addUnit" then
			if slot6.params.attacker then
				for slot10, slot11 in ipairs(slot6.params.attacker) do
					table.insert(slot1, {
						isPet = false,
						modelId = slot11.modelId
					})
				end
			end

			if slot6.params.defender then
				for slot10, slot11 in ipairs(slot6.params.defender) do
					table.insert(slot1, {
						isPet = false,
						modelId = slot11.modelId
					})
				end
			end

			if slot6.params.pet then
				for slot10, slot11 in ipairs(slot6.params.pet) do
					table.insert(slot1, {
						isPet = true,
						modelId = slot11.modelId
					})
				end
			end
		end
	end

	return slot1
end
slot12.onEnter = function (slot0)
	slot1 = require("battle.views.PreLoadLayer").new({
		cb = function ()
			slot0.isPreloading = false

			if slot0.skipBattle == true then
				return 
			end

			if slot0.beforeScript then
				slot0:addChild(require("guide.view.TalkLayer"):create({
					canSkip = true,
					map = slot0.beforeScript,
					closedCB = function (slot0)
						slot0:removeFromParent()
						slot0.removeFromParent:startGame()

						return 
					end
				}))

				return 
			end

			slot0:startGame()
		end
	})

	display.getRunningScene().addChild(slot2, slot1, Enums.ZOrderType.ePopLayer)
	slot1.addRes(slot1, slot0.parseScriptResList(slot0))
	slot1.startLoad(slot1)

	return 
end
slot12.startGame = function (slot0)
	slot0.super.startGame(slot0)
	slot0.delayNextStep(slot0, 0)

	return 
end
slot12.showHeros = function (slot0, slot1, slot2, slot3, slot4)
	slot3 = slot3 or function ()
		return 
	end
	slot5 = 3

	if slot4 then
		slot5 = 0
	end

	function slot6(slot0, slot1, slot2)
		if slot0 then
			slot0.setOpacity(slot0, 0)
			slot1:addAction(cc.Sequence:create(cc.CallFunc:create(function ()
				slot0:setPosition3D(slot0)
				slot0.setPosition3D:setVisible(true)

				return 
			end), cc.FadeTo:create(0.1, 255)), slot0)
		else
			slot0.anim:playAnimation(slot2.ActionName.RUN)
			slot1:addAction(cc.Sequence:create(cc.DelayTime:create(slot1), cc.CallFunc:create(function ()
				slot0:setVisible(true)

				return 
			end), cc.MoveTo:create(slot3, slot2), cc.CallFunc:create(function ()
				slot0.anim:playAnimation(slot1.ActionName.IDLE)
				MqAudio.playEffect("hero_entry_audio.mp3")

				return 
			end)), slot0)
		end

		return 
	end

	for slot10, slot11 in ipairs(slot1) do
		slot12 = 0

		for slot16, slot17 in ipairs(slot11) do
			slot18 = slot0.heroNodes[slot17]
			slot20 = math.random(300, 800)/1000

			if slot1.getUnitByUid(slot17).order < 3 then
				slot20 = slot20 - math.random(100, 400)/1000
			end

			slot6(slot18, slot20, clone(slot0.BattlePos[((slot19.group == slot0.UnitGroup.ATTACKER and "left") or "right") .. "_" .. slot19.order]))
		end
	end

	for slot10, slot11 in ipairs(slot2) do
		if slot1.pets[slot11] then
			slot6(slot0.pets[slot12.uid], 0.9, clone(slot0.BattlePos[((slot11 == slot0.UnitGroup.ATTACKER and "left") or "right") .. "_pet"]))
		end
	end

	slot0.addAction(slot0, cc.Sequence:create(cc.DelayTime:create(slot5 + 1), cc.CallFunc:create(function ()
		slot0()

		return 
	end)), slot0)

	return 
end
slot12.addUnit = function (slot0, slot1)
	slot0.super.addUnit(slot0, slot1)

	if slot1.isReborn == true and slot0.cacheName[slot1.group .. "_" .. slot1.group .. "_" .. slot1.heroId] then
		slot0.heroNodes[slot1.uid].hpNode.nameLabel:setString(slot0.cacheName[slot2])
	end

	return 
end
slot12.onBattleComplete = function (slot0, slot1, slot2)
	slot0.super.onBattleComplete(slot0, slot1, slot2)

	if 0 < slot0.hitPoint then
		Guide.manager:hitPoint(slot0.hitPoint)
	end

	slot0.hasSkip = true

	return 
end
slot12.cmd_speed = function (slot0, slot1)
	slot0.speed = slot1.value or 1

	slot0.delayNextStep(slot0, 0.5)

	return 
end
slot12.cmd_addUnit = function (slot0, slot1)
	slot2 = {
		[slot0.UnitGroup.ATTACKER] = {},
		[slot0.UnitGroup.DEFENDER] = {}
	}
	slot3 = {}
	slot4 = false
	slot5 = slot1.isLocal
	slot6 = slot1.delay or 0

	if slot1.attacker then
		for slot10, slot11 in ipairs(slot1.attacker) do
			slot14 = slot1.createUnit(slot1.getDataFromConfig({
				slot11.modelId
			}, slot11.star, slot11.level, slot11.step, slot11.skillLv, 1, slot11.normalSkill or false, slot11.energy)[1])
			slot14.order = slot11.order
			slot14.group = slot0.UnitGroup.ATTACKER
			slot14.name = slot11.name

			slot2.addUnit(slot14)
			table.insert(slot2[slot0.UnitGroup.ATTACKER], slot14.uid)

			slot15 = slot11.cacheName or false

			if slot15 then
				slot3.cacheName[slot14.group .. "_" .. slot14.group .. "_" .. slot14.heroId] = slot11.name
			end
		end
	end

	if slot1.defender then
		for slot10, slot11 in ipairs(slot1.defender) do
			slot14 = slot1.createUnit(slot1.getDataFromConfig({
				slot11.modelId
			}, slot11.star, slot11.level, slot11.step, slot11.skillLv, 1, slot11.normalSkill or false, slot11.energy)[1])
			slot14.order = slot11.order
			slot14.group = slot0.UnitGroup.DEFENDER
			slot14.name = slot11.name

			slot2.addUnit(slot14)
			table.insert(slot2[slot0.UnitGroup.DEFENDER], slot14.uid)

			slot15 = slot11.cacheName or false

			if slot15 then
				slot3.cacheName[slot14.group .. "_" .. slot14.group .. "_" .. slot14.heroId] = slot11.name
			end
		end
	end

	if slot1.pet then
		for slot10, slot11 in ipairs(slot1.pet) do
			slot12 = slot11.group

			if slot11.name == "@main" then
				slot11.name = PlayerAttrObj:getPlayerAttrByName("PlayerName")

				if slot11.name == nil then
					slot11.name = "主角名字"
				end
			end

			slot14 = slot1.createPet(slot13)
			slot14.group = slot12
			slot2.pets[slot12] = slot14
			slot15 = slot4.new(slot14.spine, 1, slot14.group, slot14.uid, slot0)

			slot15.setVisible(slot15, false)
			slot15.anim:playAnimation(slot0.ActionName.IDLE)

			if slot14.group == slot0.UnitGroup.DEFENDER then
				slot15.anim:setRotationSkewY(180)
			end

			slot16 = nil
			slot17 = 0

			if slot12 == slot0.UnitGroup.ATTACKER then
				slot16 = clone(slot0.BattlePos.left_pet)
				slot17 = -800
			else
				slot16 = clone(slot0.BattlePos.right_pet)
				slot17 = 800
			end

			slot15.setStartPosition(slot15, slot16)
			slot15.setPosition3D(slot15, cc.vec3(slot16.x + slot17, slot16.y, slot16.z))
			slot0.heroNode:addChild(slot15, slot18)

			slot0.pets[slot14.uid] = slot15
			slot19 = slot5:create(slot14)

			slot19.setPosition(slot19, cc.p(0, 210))
			slot15.addChild(slot15, slot19, 1000)

			slot15.hpNode = slot19

			slot15.showModleLvEffect(slot15, slot14.modelLv, group)
			slot15.setScale(slot15, slot20)
			table.insert(slot3, slot12)
		end

		slot4 = true
	end

	Utility.performWithDelay(slot0, function ()
		if fc == nil then
			slot0.shakeFx:setCameraMask(slot1.CameraFlag)
		end

		slot2.sortNextAttackUnit()
		slot2.sortNextAttackUnit:updateSequenceNode()
		slot2.sortNextAttackUnit.updateSequenceNode:showHeros(slot3, slot4, function ()
			slot0:initSkillBtn()
			slot0.initSkillBtn:delayNextStep(slot0.initSkillBtn)

			return 
		end, slot6)

		return 
	end, 0.1)

	return 
end
slot12.cmd_replaceUnit = function (slot0, slot1)
	slot11 = slot0.createUnit(slot0.getDataFromConfig({
		slot1.modelId
	}, slot6, slot5, slot7, slot1.skillLv, 1)[1])
	slot11.order = slot1.order
	slot11.group = slot1.group
	slot11.name = slot1.name

	slot1.addUnit(slot11)

	if slot1.getUnitByGroupOrder(slot1.group, slot1.order) then
		slot13 = slot0.heroNodes[slot12.uid]

		Utility.performWithDelay(slot0, function ()
			slot0.unitRemoved(slot1)

			slot0.unitRemoved.units[slot1.uid] = nil

			slot2.heroNodes[slot1.uid.uid].removeFromParent(slot0)

			slot2.heroNodes[slot1.uid] = nil
			slot2 = clone(slot4.BattlePos[((slot3.group == slot4.UnitGroup.ATTACKER and "left") or "right") .. "_" .. slot3.order])

			slot2.heroNodes[slot3.uid].setPosition3D(slot3, slot2)
			slot2.heroNodes[slot3.uid].setCameraMask(slot3, slot4.CameraFlag)
			slot2:nextStep()

			return 
		end, 0.01)

		slot1.nextAtkUnits[slot12.uid] = nil
	end

	return 
end
slot12.cmd_addEffect = function (slot0, slot1)
	slot2 = slot1.group
	slot3 = slot1.order
	slot4 = slot1.effect
	slot5 = slot1.animation
	slot6 = slot1.offset or cc.p(0, 0)
	slot7 = slot1.zorder or 0

	if slot0.getUnitByGroupOrder(slot2, slot3) then
		slot10 = slot1.createAnimation(slot4, 1, true)

		slot10.playAnimation(slot10, slot5)
		slot10.setPosition(slot10, slot6)
		slot10.setLocalZOrder(slot10, slot7)
		slot10.setCameraMask(slot10, slot2.CameraFlag)
		slot0.heroNodes[slot8.uid].addChild(slot9, slot10)

		slot0.effects[#slot0.effects + 1] = slot10
	end

	slot0.delayNextStep(slot0, 0)

	return 
end
slot12.cmd_changeOrder = function (slot0, slot1)
	slot4 = slot1.newOrder

	if slot0.getUnitByGroupOrder(slot1.group, slot1.order) then
		slot5.order = slot4
	end

	slot0.delayNextStep(slot0, 0)

	return 
end
slot12.cmd_moveto = function (slot0, slot1)
	slot2 = slot1.group
	slot3 = slot1.order
	slot4 = slot1.pos
	slot5 = slot1.time or 0.2

	if slot0.getUnitByGroupOrder(slot2, slot3) then
		slot0.heroNodes[slot6.uid].runAction(slot7, cc.Sequence:create({
			cc.MoveTo:create(slot5, cc.vec3(slot4.x, slot4.y, -(((slot4.y + 365)*300)/655))),
			cc.CallFunc:create(function ()
				slot0:nextStep()

				return 
			end)
		}))
		slot0.heroNodes[slot6.uid]:setStartPosition(cc.vec3(slot4.x, slot4.y, -(((slot4.y + 365)*300)/655)))
	end

	return 
end
slot12.cmd_removeUnit = function (slot0, slot1)
	slot2 = slot1.group
	slot3 = slot1.orders
	slot4 = slot1.outType
	slot5 = slot1.sync or false
	slot6 = {}

	for slot10, slot11 in pairs(slot0.units) do
		for slot15, slot16 in pairs(slot3) do
			if slot11.group == slot2 and slot11.order == slot16 and slot11.isAlive(slot11) then
				table.insert(slot6, slot11)
			end
		end
	end

	if #slot6 == 0 then
		slot0.delayNextStep(slot0, 0)

		return 
	end

	if slot5 == true then
		slot0.delayNextStep(slot0, 0)
	end

	slot7 = #slot6

	function slot8()
		if slot0 - 1 == 0 then
			for slot3, slot4 in pairs(slot1) do
				for slot8, slot9 in pairs(slot2.units) do
					if slot9.group == slot4.group and slot9.order == slot4.order and slot9.isAlive(slot9) then
						Utility.performWithDelay(slot3, function ()
							slot0.unitRemoved(slot1)

							slot0.unitRemoved.units[slot2] = nil

							slot3.heroNodes[nil].removeFromParent(slot0)

							slot3.heroNodes[slot0] = nil

							return 
						end, 0.01)
					end
				end

				for slot8, slot9 in pairs(slot2.nextAtkUnits) do
					if slot4.uid == slot9.uid then
						slot2.nextAtkUnits[slot8] = nil
					end
				end
			end

			slot3:initSkillBtn()

			if slot4 ~= true then
				slot3:delayNextStep(0.1)
			end
		end

		return 
	end

	if slot4 == "local" then
		for slot12, slot13 in pairs(slot6) do
			slot8()
		end
	else
		function slot9(slot0, slot1, slot2)
			slot0:addAction(cc.Sequence:create(cc.DelayTime:create(slot1), cc.JumpTo:create(0.2, slot2, 220, 1), cc.CallFunc:create(function ()
				slot0.anim:playAnimation(slot1.ActionName.IDLE)
				MqAudio.playEffect("hero_entry_audio.mp3")
				slot1.ActionName.IDLE()

				return 
			end)), slot0)

			return 
		end

		for slot13, slot14 in pairs(slot6) do
			slot15 = math.random(0, 800)/1000
			slot17 = slot0.heroNodes[slot14.uid] or slot0.pets[slot14.uid]:getPosition3D()
			slot18 = 400
			slot19 = nil

			if slot14.group == slot1.UnitGroup.DEFENDER then
				slot16.anim:setRotationSkewY(0)

				slot19 = cc.vec3(slot17.x + slot18, slot17.y, slot17.z)
			else
				slot16.anim:setRotationSkewY(180)

				slot19 = cc.vec3(slot17.x - slot18, slot17.y, slot17.z)
			end

			slot9(slot16, slot15, slot19)
		end
	end

	return 
end
slot12.cmd_skill = function (slot0, slot1)
	slot4 = slot1.skillid
	slot5 = slot1.damage
	slot6 = slot1.targets
	slot7 = slot1.stun
	slot8 = slot1.blood
	slot9 = slot0.getUnitByGroupOrder(slot1.group, slot1.order)

	if slot1.order == 6 then
		if slot0.pets[slot1.UnitGroup.ATTACKER]:usePowerSkill() then
			slot0.pets[slot9.uid].script_skill = true
		else
			slot0.delayNextStep(slot0, 0.1)
		end

		return 
	end

	if not slot9 then
		return 
	end

	if slot4 == "normal" then
		slot4 = slot9.skills[slot1.SkillType.NORMAL][1].conf.modelId
	elseif slot4 == "skill" then
		slot4 = slot9.skills[slot1.SkillType.SKILL][1].conf.modelId
	end

	slot10 = nil

	if slot6 then
		slot11 = nil
		slot11 = (slot2 == 1 and 2) or 1
		slot10 = {}

		for slot15, slot16 in pairs(slot0.units) do
			if slot16.group == slot11 then
				for slot20, slot21 in ipairs(slot6) do
					if slot21 == slot16.order then
						table.insert(slot10, slot16.uid)
					end
				end
			end
		end

		if #slot10 == 0 then
			slot10 = nil
		end
	end

	slot2.newUnitSkill(slot9, slot4, 1).isExtra = false

	if slot9.setState(slot9, slot1.UnitState.ATTACK) then
		slot9.curSkill = slot11

		slot11.start(slot11, slot10)

		if slot5 then
			for slot15, slot16 in pairs(slot11.dmgInfos) do
				slot16.damage = slot5
			end
		end

		if slot7 then
			if slot11.conf.buffIds == nil then
				slot11.conf.buffIds = {}
			end

			table.insert(slot11.conf.buffIds, 9999999000000.0)
		end

		if slot8 then
			if slot11.conf.buffIds == nil then
				slot11.conf.buffIds = {}
			end

			table.insert(slot11.conf.buffIds, 9999999000001.0)
		end

		slot0.heroNodes[slot9.uid].script_skill = true
	end

	return 
end
slot12.cameraFocusToVersion2 = function (slot0, slot1, slot2)
	slot3 = slot2

	slot0.addAction(slot0, cc.Sequence:create({
		cc.CallFunc:create(function ()
			slot0:cameraAction(slot0, )

			return 
		end)
	}), slot0.heroNode)

	return 
end
slot12.cmd_camera = function (slot0, slot1)
	slot2 = 0
	slot3 = slot1.diffz or 350
	slot4 = slot1.sync or false

	if slot1.action == "focus" then
		if slot0.getUnitByGroupOrder(slot1.group, slot1.order) then
			slot10 = clone(slot0.cameraPos)
			slot10.x = slot10.x + slot0.heroNodes[slot5.uid] or slot0.pets[slot5.uid]:getPosition3D().x
			slot10.y = slot10.y + slot0.heroNodes[slot5.uid] or slot0.pets[slot5.uid].getPosition3D().y
			slot10.z = slot10.z - slot3*display.minScale

			slot0.cameraFocusToVersion2(slot0, slot10, 0.2)

			slot2 = 0.2
		end
	elseif slot1.action == "restore" then
		slot0.restoreCamera(slot0, 0.2)

		slot2 = 0.2
	end

	if slot4 == true then
		slot2 = 0
	end

	slot0.delayNextStep(slot0, slot2)

	return 
end
slot12.cmd_delay = function (slot0, slot1)
	slot0.delayNextStep(slot0, slot1.delayTime or 0.1)

	return 
end
slot12.cmd_shake = function (slot0, slot1)
	slot3 = slot1.shakeTime or 1

	slot0.shakeFx:registerLuaHandler("complete", function (slot0)
		if slot0 - 1 == 0 then
			slot1.shakeFx:clearTracks()

			if slot1.shakeFx ~= true then
				slot1:nextStep()
			end
		end

		return 
	end)
	slot0.shakeFx:playAnimation(slot1.shakeAnim or "shake01_dipinzhendong")

	if slot1.sync == true then
		slot0.delayNextStep(slot0, 0)
	end

	return 
end
slot12.cmd_dialog = function (slot0, slot1)
	slot3 = nil

	slot0.addChild(slot0, require("guide.view.TalkLayer"):create({
		canSkip = false,
		map = slot1.script,
		bgColor = cc.c4b(0, 0, 0, 0),
		closedCB = function (slot0)
			slot0:removeFromParent()
			slot0.removeFromParent:nextStep()

			return 
		end
	}))

	return 
end
slot12.cmd_speak = function (slot0, slot1)
	slot2 = slot1.group
	slot3 = slot1.order
	slot4 = slot1.sound
	slot5 = slot1.content
	slot6 = slot1.time or 3

	if slot4 then
		if not string.find(slot4, ".mp3") then
			slot4 = slot4 .. ".mp3"
		end

		slot6 = require("guide.talk.AudioLength")[slot4] or slot6

		function slot7()
			slot0:nextStep()

			return 
		end

		slot8 = "zd_100.png"
		slot9 = slot0.getUnitByGroupOrder(slot2, slot3)
	end

	if slot3 == 6 then
		slot9 = slot0.pets[slot2]
	end

	if slot9 == nil then
		error("没有找到对话英雄.")
	end

	cc.Node:create():runAction(cc.Sequence:create({
		cc.DelayTime:create(slot6),
		cc.CallFunc:create(function (...)
			slot0:removeFromParent()

			slot0 = slot0 and slot0

			slot2()

			return 
		end)
	}))

	if slot0.heroNodes[slot9.uid] or slot0.pets[slot9.uid] then
		slot11.setLocalZOrder(slot11, slot1.FightZOrder.highlight)
		slot10.addChild(slot10, slot11)
	end

	if slot4 then
		slot11.soundId = MqAudio.playEffect(slot4)
	end

	ui.addTouchEvent({
		swallowTouch = true,
		node = slot11,
		beganEvent = function (slot0, slot1)
			if slot0.soundId then
				MqAudio.stopEffect(slot0.soundId)

				slot0.soundId = nil
			end

			slot0:removeFromParent()

			slot0 = nil

			slot1 and slot2()

			return 
		end
	})

	slot11.bg = cc.Sprite:create(slot8)

	slot11.addChild(slot11, slot12)
	slot11.addChild(slot11, slot2.newLabel({
		fontSize = 19,
		text = slot5,
		pos = cc.p(5, 5),
		align = cc.TEXT_ALIGNMENT_LEFT,
		valign = cc.VERTICAL_TEXT_ALIGNMENT_CENTER,
		color = cc.c3b(0, 0, 0),
		size = cc.size(220, 0)
	}))

	if slot2 == slot1.UnitGroup.ATTACKER then
		slot11.setPosition(slot11, cc.p(130, 250))
		slot11.bg:setRotationSkewY(180)
	else
		slot11.setPosition(slot11, cc.p(-130, 250))
	end

	return 
end
slot12.cmd_auto = function (slot0, slot1)
	slot0.manualLogic = false
	slot1.turn = slot1.turn or -1

	return 
end
slot12.cmd_audio = function (slot0, slot1)
	MqAudio.playEffect(slot1.file, slot1.loop or false)
	slot0.delayNextStep(slot0, 0)

	return 
end
slot12.cmd_music = function (slot0, slot1)
	MqAudio.playMusic(slot1.file, slot1.loop or false)
	slot0.delayNextStep(slot0, 0)

	return 
end
slot12.cmd_display_pic = function (slot0, slot1)
	slot2 = slot1.time or 0
	slot3 = slot1.images or {}

	slot0.uiNode:addChild(slot4)

	for slot8, slot9 in ipairs(slot3) do
		slot14 = cc.Sprite:create(slot10)

		slot14.setPosition(slot14, cc.p(slot9[2], slot9[3]))
		slot14.setScale(slot14, slot13)
		slot4.addChild(slot4, slot14)
	end

	if 0 < slot2 then
		slot0.delayNextStep(slot0, slot2, function ()
			slot0:removeFromParent()

			return 
		end)
	else
		slot5 = cc.Sprite:create("c_60.png")

		slot5.setPosition(slot5, 0, -270)
		slot4.addChild(slot4, slot5)
		slot5.runAction(slot5, cc.RepeatForever:create(cc.Sequence:create({
			cc.FadeTo:create(2, 0),
			cc.FadeTo:create(2, 255)
		})))
		ui.addTouchEvent({
			swallowTouch = true,
			node = slot4,
			beganEvent = function (slot0, slot1)
				slot0:removeFromParent()
				slot1:delayNextStep(0)

				return 
			end
		})
	end

	return 
end
slot12.cmd_job_hit = function (slot0)
	slot1 = slot0.uiNode:getChildByName("JobRelation")

	slot1.setVisible(slot1, false)

	slot2 = cc.Node:create()

	slot0.uiNode:addChild(slot2)

	slot3 = slot0.newButton({
		image = "tb_gn_11.png",
		clickAction = function (slot0)
			slot0:removeFromParent()
			slot0.removeFromParent:setVisible(true)
			slot0.removeFromParent:showJobRelations()
			slot0.removeFromParent:delayNextStep(0)

			return 
		end
	})
	slot4 = slot1.createAnimation("effect_ui_yingdaodianji", 1)

	slot4.playAnimation(slot4, "xunhuan")
	slot3.addChild(slot3, slot4)
	slot3.setPosition(slot3, slot1.getPosition(slot1))
	slot2.addChild(slot2, slot3)

	return 
end
slot12.cmd_skill_hit = function (slot0, slot1)
	slot2 = slot0.uiNode:getChildByName("roleNode")
	slot3 = 0
	slot4 = {}
	slot5 = nil

	function slot6(slot0)
		for slot4, slot5 in pairs(slot0) do
			if slot5 == slot0 then
				table.remove(slot0, slot4)
			end
		end

		return 
	end

	function slot7()
		if 0 < #slot0 then
			slot1 = cc.Node:create()

			slot0[1].addChild(slot0, slot1)

			slot2 = slot1.createAnimation("effect_ui_yingdaodianji", 1)

			slot2.playAnimation(slot2, "xunhuan")
			slot1.addChild(slot1, slot2)

			return slot1
		end

		return 
	end

	for slot11, slot12 in pairs(slot0.skillBtns) do
		if 100 <= slot1.getUnitByGroupOrder(slot2.UnitGroup.ATTACKER, slot11).attr.mp then
			slot14 = slot0.heroNodes[slot13.uid]
			slot16 = nil

			slot3.newButton({
				image = "zd_60.png",
				clickAction = function (slot0)
					slot0(slot0)
					slot2()
					slot2:removeFromParent()
					slot3:attack()

					slot4.hint_skill = true

					return 
				end
			}).setOpacity(slot16, 0)

			slot3.newButton({
				image = "zd_60.png",
				clickAction = function (slot0)
					slot0(slot0)
					slot2()
					slot2.removeFromParent()
					slot3.attack()

					slot4.hint_skill = true

					return 
				end
			}).order = slot11

			slot2.addChild(slot2, slot16)
			slot3.newButton({
				image = "zd_60.png",
				clickAction = function (slot0)
					slot0(slot0)
					slot2()
					slot2.removeFromParent()
					slot3.attack()

					slot4.hint_skill = true

					return 
				end
			}).setPosition3D(slot16, slot15)

			slot3 = slot3 + 1

			table.insert(slot4, slot3.newButton({
				image = "zd_60.png",
				clickAction = function (slot0)
					slot0(slot0)
					slot2()
					slot2.removeFromParent()
					slot3.attack()

					slot4.hint_skill = true

					return 
				end
			}))
		end
	end

	table.sort(slot4, function (slot0, slot1)
		return slot0.order < slot1.order
	end)
	slot7()

	if #slot4 == 0 then
		slot0.delayNextStep(slot0, 0)
	else
		slot4.skillHintCount = slot3
	end

	return 
end
slot12.cmd_setPetEnergy = function (slot0, slot1)
	slot3 = slot1.value or 100
	unit = slot0.pets[slot1.group]

	if unit == nil then
		error("没有找到目标")
	end

	unit:updateMp(slot3)
	slot0.delayNextStep(slot0, 0.01)

	return 
end
slot12.cmd_setEnergy = function (slot0, slot1)
	slot4 = slot1.value or 100
	unit = slot0.getUnitByGroupOrder(slot1.group, slot1.order)

	if unit == nil then
		error("没有找到目标")
	end

	unit:updateEnergy(slot4)
	slot0.delayNextStep(slot0, 0.01)

	return 
end
slot12.cmd_nextRound = function (slot0, slot1)
	slot0.updateRound()
	slot0.delayNextStep(slot0, 0.5)

	return 
end
slot12.cmd_endGame = function (slot0)
	if slot0.cb then
		slot0.cb()

		slot0.cb = nil

		print("提前结束剧情战斗..")
	end

	return 
end

return slot12
