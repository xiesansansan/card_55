slot0 = class("ChasingMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled18",
		cType = "ScrollView",
		params = {
			posApt = 1,
			direction = 2,
			sizeApt = 1,
			isFullScale = true,
			conSize = {
				width = 1704,
				height = 640
			},
			pos = {
				x = 0,
				y = 0
			},
			size = {
				width = 1136,
				height = 640
			}
		},
		children = {
			{
				name = "untitled25",
				cType = "Node",
				params = {
					isFullScale = true,
					scaleApt = 2,
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "mBgSprite",
						cType = "Effect",
						params = {
							dataFile = "effect_yuye_jianglingdu",
							pos = {
								x = 850.63,
								y = 321.93
							}
						},
						children = {
							{
								name = "pointTempNode",
								cType = "TemplateNode",
								custom = {
									{
										value = "untitled22-heroModelId",
										name = "heroModelId",
										type = "string"
									}
								},
								params = {
									pos = {
										x = 0,
										y = 0
									}
								},
								children = {
									{
										name = "untitled21",
										cType = "Sprite",
										params = {
											image = "zjzty_9.png",
											pos = {
												x = -14.79,
												y = -133.73
											}
										},
										children = {}
									},
									{
										name = "untitled22",
										cType = "FigureHero",
										params = {
											heroModelId = 12011103,
											flipX = true,
											pos = {
												x = 0,
												y = -130
											}
										},
										children = {}
									},
									{
										name = "passSprite",
										cType = "Sprite",
										params = {
											image = "zjzty_8.png",
											pos = {
												x = 44.71,
												y = 3.5
											}
										},
										children = {}
									},
									{
										name = "untitled24",
										cType = "Sprite",
										params = {
											image = "zjzty_10.png",
											pos = {
												x = 76.8,
												y = 46.64
											}
										},
										children = {
											{
												name = "nameLabel",
												cType = "Label",
												params = {
													pos = {
														x = 29.07,
														y = 50.74
													},
													size = {
														width = 30,
														height = 100
													},
													text = TR("关卡名字")
												},
												children = {}
											}
										}
									},
									{
										name = "challengeBtn",
										cType = "Button",
										params = {
											clickAction = "onChallenge",
											image = "c_pure.png",
											swallowTouch = false,
											pos = {
												x = 16.29,
												y = -34.81
											},
											size = {
												width = 150,
												height = 240
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "mTopEffect",
						cType = "Effect",
						params = {
							dataFile = "effect_yuye_jianglingdu",
							animation = "top",
							pos = {
								x = 850.63,
								y = 321.93
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled2",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled3",
				cType = "Button",
				params = {
					clickAction = "onExitLayer",
					image = "c_1.png",
					titleisRichText = "false",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled4",
						cType = "Sprite",
						params = {
							image = "zjzty_1.png",
							anchor = {
								x = 0,
								y = 1
							},
							pos = {
								x = -35,
								y = 30
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled5",
				cType = "Button",
				params = {
					clickAction = "onRule",
					image = "c_3.png",
					titleisRichText = "false",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 310.96,
						y = -5
					}
				},
				children = {}
			},
			{
				name = "mTimeLabel",
				cType = "Label",
				params = {
					fontSize = 20,
					isRichText = "false",
					text = "Label",
					outlineColor = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 155.04,
						y = -82.04
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled7",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1070,
				y = 640
			}
		},
		children = {}
	},
	{
		name = "untitled8",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled10",
				cType = "Scale9Sprite",
				params = {
					opacity = 180,
					scale = 0.65,
					hide = true,
					image = "jcgn_8.png",
					pos = {
						x = 0,
						y = 200
					}
				},
				children = {}
			},
			{
				name = "mTitleSprite",
				cType = "Sprite",
				params = {
					image = "zjzty_7.png",
					hide = true,
					pos = {
						x = 0,
						y = 200
					}
				},
				children = {}
			}
		}
	}
}
slot1 = {
	effect_yuye_menggucaoyuan = {
		cc.p(-705.41, -26.85),
		cc.p(-408.72, -49.05),
		cc.p(-88.78, -5.39),
		cc.p(256.65, 75.04),
		cc.p(570.56, 149.67)
	},
	effect_yuye_jianglingdu = {
		cc.p(-713.67, 107.73),
		cc.p(-393.14, 111.03),
		cc.p(2.1, 43.25),
		cc.p(354.62, 39.65),
		cc.p(664.62, 119.65)
	},
	effect_yuye_jueqinggu = {
		cc.p(-726.75, -95.21),
		cc.p(-395.13, -51.09),
		cc.p(-78.98, -49.54),
		cc.p(305.33, 15.69),
		cc.p(675.33, 155.69)
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mChapterId = slot1.chapterId
	slot0.mIsClose = slot1.isClose

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	if not slot1.isClose then
		slot0.requestInfo(slot0)
	end

	if slot1.isClose then
		Utility.performWithDelay(slot0, function ()
			slot0:onExitLayer()

			return 
		end, 0)
	end

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "mBgSprite" then
			slot1.dataFile = slot0.chapterNamePic
		elseif slot0.name == "mTopEffect" then
			slot1.dataFile = slot0.chapterNamePic
		end

		return 
	end)
	slot0.mTitleSprite:setTexture(ChasingChapterModel.items[slot0.mChapterId].wordPic .. ".png")

	slot0.picKey = ChasingChapterModel.items[slot0.mChapterId].chapterNamePic

	return 
end
slot0.getRestoreData = function (slot0)
	return {
		chapterId = slot0.mChapterId
	}
end
slot0.createNode = function (slot0)
	table.sort(slot1, function (slot0, slot1)
		return slot0.modelId < slot1.modelId
	end)
	slot0.mBgSprite:removeAllChildren()

	for slot5, slot6 in ipairs(slot1) do
		slot7 = slot0.createLayoutTemplateNode(slot0, "pointTempNode", {
			heroModelId = slot6.npcModelId
		})

		slot7.setPosition(slot7, slot0[slot0.picKey][slot5])
		slot0.mBgSprite:addChild(slot7)
		slot7.nameLabel:setString(slot6.name)

		slot7.challengeBtn.nodeId = slot6.modelId

		slot7.passSprite:setVisible(slot6.modelId < slot0.mChasingData.CurNodeId)
	end

	return 
end
slot0.refreshUI = function (slot0)
	slot0.createNode(slot0)
	slot0.createTimeUpdate(slot0)

	return 
end
slot0.createTimeUpdate = function (slot0)
	if slot0.mTimeLabel.timeUpdate then
		slot0.mTimeLabel:stopAction(slot0.mTimeLabel.timeUpdate)

		slot0.mTimeLabel.timeUpdate = nil
	end

	slot0.mTimeLabel.timeUpdate = Utility.schedule(slot0.mTimeLabel, function ()
		if 0 < slot0.mChasingData.EndTime - Player:getCurrentTime() then
			slot0.mTimeLabel:setString(TR("活动倒计时：#8ba857%s", MqTime.completeFormat(slot0)))
		else
			slot0.mTimeLabel:setString(TR("活动已结束"))
			slot0.mTimeLabel:stopAction(slot0.mTimeLabel.timeUpdate)

			slot0.mTimeLabel.timeUpdate = nil

			LayerManager.removeLayer(slot0)
		end

		return 
	end, 1)

	return 
end
slot0.onExitLayer = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onRule = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、一共设有五个挑战节点，每个节点挑战，会设置5名侠客给予随机奖励；"),
			TR("2、随机选择的给予奖励的侠客，不能参与战斗，但是通关后可以获得对应奖励；"),
			TR("3、如若对随机选择的侠客不满意，可通过刷新重新随机5名侠客；"),
			TR("4、满意的侠客以及奖励可进行锁定，锁定后不会被刷新。")
		}
	})

	return 
end
slot0.onChallenge = function (slot0, slot1)
	if slot1.nodeId < slot0.mChasingData.CurNodeId then
		ui.showFlashView(TR("已通过该关卡"))

		return 
	elseif slot0.mChasingData.CurNodeId ~= slot1.nodeId then
		ui.showFlashView(TR("请先通过上一关"))

		return 
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "chasing.ChasingChallengeLayer",
		data = {
			chasingData = slot0.mChasingData,
			callback = function (slot0)
				slot0.mChasingData = slot0

				return 
			end
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.requestInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "ChasingInfo",
		methodData = {
			slot0.mChapterId
		},
		successCallback = function (slot0)
			slot0.mChasingData = slot0

			slot0:refreshUI()

			return 
		end
	})

	return 
end

return slot0
