slot0 = class("CityWarHelperSetLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 128)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			posApt = 1,
			image = "tc_1.png",
			pos = {
				x = 568,
				y = 320
			},
			titleText = TR("高级设置")
		},
		children = {
			{
				name = "middleNode",
				cType = "Scale9Sprite",
				params = {
					image = "c_92.png",
					pos = {
						x = 423.71,
						y = 289.59
					},
					size = {
						width = 790,
						height = 400
					}
				},
				children = {
					{
						name = "untitled13",
						cType = "Scale9Sprite",
						params = {
							image = "jh_32.png",
							pos = {
								x = 398.31,
								y = 187.24
							},
							size = {
								width = 756,
								height = 95
							}
						},
						children = {
							{
								name = "untitled14",
								cType = "Button",
								custom = {
									{
										value = 2,
										name = "cityType",
										type = "integer"
									}
								},
								params = {
									image = "jh_16.png",
									clickAction = "onCitySortBySelectedCb",
									pos = {
										x = 53.46,
										y = 45.41
									}
								},
								children = {}
							},
							{
								name = "allMcityBtn",
								cType = "Checkbox",
								params = {
									isSelect = false,
									selectImage = "c_44.png",
									callback = "onCitySelectAllMcityCallback",
									normalImage = "c_43.png",
									pos = {
										x = 78.17,
										y = 77.7
									}
								},
								children = {}
							},
							{
								name = "mCityList",
								cType = "ListView",
								custom = {
									{
										name = "list",
										type = "table",
										value = {}
									}
								},
								params = {
									direction = false,
									bounce = true,
									anchor = {
										x = 0,
										y = 0
									},
									pos = {
										x = 89,
										y = 0
									},
									size = {
										width = 665,
										height = 95
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled4",
						cType = "Scale9Sprite",
						params = {
							image = "jh_32.png",
							pos = {
								x = 398,
								y = 290.4
							},
							size = {
								width = 756,
								height = 95
							}
						},
						children = {
							{
								name = "untitled5",
								cType = "Button",
								custom = {
									{
										value = 1,
										name = "cityType",
										type = "integer"
									}
								},
								params = {
									image = "jh_15.png",
									clickAction = "onCitySortBySelectedCb",
									pos = {
										x = 50.26,
										y = 46.91
									}
								},
								children = {}
							},
							{
								name = "allScityBtn",
								cType = "Checkbox",
								params = {
									isSelect = false,
									selectImage = "c_44.png",
									callback = "onCitySelectAllScityCallback",
									normalImage = "c_43.png",
									pos = {
										x = 77.46,
										y = 80.74
									}
								},
								children = {}
							},
							{
								name = "sCityList",
								cType = "ListView",
								custom = {
									{
										name = "list",
										type = "table",
										value = {}
									}
								},
								params = {
									direction = false,
									bounce = true,
									anchor = {
										x = 0,
										y = 0
									},
									pos = {
										x = 89,
										y = 0
									},
									size = {
										width = 665,
										height = 95
									}
								},
								children = {
									{
										name = "cityItem",
										cType = "Layout",
										custom = {
											{
												value = "untitled11-text",
												name = "cityName",
												type = "string"
											},
											{
												value = "checkBtn-cityId",
												name = "cityId",
												type = "string"
											},
											{
												value = "untitled9-image",
												name = "cityImg",
												type = "string"
											},
											{
												value = "untitled11-color",
												name = "color",
												type = "string"
											}
										},
										params = {
											pos = {
												z = 0,
												x = -1.25,
												y = -4.37
											},
											size = {
												width = 130,
												height = 95
											}
										},
										children = {
											{
												name = "untitled9",
												cType = "Button",
												params = {
													image = "jh_15.png",
													clickAction = "onCitySelectBCb",
													scale = 0.8,
													pos = {
														x = 65.25,
														y = 49.89
													}
												},
												children = {}
											},
											{
												name = "untitled10",
												cType = "Sprite",
												params = {
													scaleX = 0.5,
													image = "c_2.png",
													scaleY = 0.8,
													pos = {
														x = 67.41,
														y = 17.49
													}
												},
												children = {}
											},
											{
												name = "untitled11",
												cType = "Label",
												params = {
													fontSize = 18,
													color = {
														g = 255,
														r = 255,
														b = 255
													},
													pos = {
														x = 58.41,
														y = 17.49
													},
													text = TR("成都")
												},
												children = {}
											},
											{
												name = "checkBtn",
												cType = "Checkbox",
												custom = {
													{
														value = 1,
														name = "cityId",
														type = "integer"
													},
													{
														value = 1,
														name = "cityType",
														type = "integer"
													}
												},
												params = {
													isSelect = false,
													selectImage = "c_44.png",
													callback = "onCitySelectCallback",
													normalImage = "c_43.png",
													pos = {
														x = 115.57,
														y = 80.03
													}
												},
												children = {}
											}
										}
									}
								}
							}
						}
					},
					{
						name = "conFBtn",
						cType = "Checkbox",
						custom = {
							{
								value = 1,
								name = "orderId",
								type = "integer"
							},
							{
								value = 1,
								name = "val",
								type = "integer"
							}
						},
						params = {
							isSelect = false,
							selectImage = "c_44.png",
							callback = "onFightConditionCallback",
							normalImage = "c_43.png",
							pos = {
								x = 183,
								y = 54
							}
						},
						children = {}
					},
					{
						name = "conSBtn",
						cType = "Checkbox",
						custom = {
							{
								value = 2,
								name = "orderId",
								type = "integer"
							},
							{
								value = 2,
								name = "val",
								type = "integer"
							}
						},
						params = {
							isSelect = false,
							selectImage = "c_44.png",
							callback = "onFightConditionCallback",
							normalImage = "c_43.png",
							pos = {
								x = 503.44,
								y = 55.58
							}
						},
						children = {}
					},
					{
						name = "conTBtn",
						cType = "Checkbox",
						custom = {
							{
								value = 3,
								name = "orderId",
								type = "integer"
							},
							{
								value = 4,
								name = "val",
								type = "integer"
							}
						},
						params = {
							isSelect = false,
							selectImage = "c_44.png",
							callback = "onFightConditionCallback",
							normalImage = "c_43.png",
							pos = {
								x = 183.25,
								y = 13.81
							}
						},
						children = {}
					},
					{
						name = "untitled20",
						cType = "Label",
						params = {
							fontSize = 18,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 533.83,
								y = 55.58
							},
							text = TR("不攻击有玩家防守的门派")
						},
						children = {}
					},
					{
						name = "untitled21",
						cType = "Label",
						params = {
							fontSize = 18,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 213,
								y = 54
							},
							text = TR("优先攻击集火门派（含大型门派）")
						},
						children = {}
					},
					{
						name = "untitled22",
						cType = "Label",
						params = {
							fontSize = 18,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 215.25,
								y = 9.81
							},
							text = TR("优先玩家人数最少门派")
						},
						children = {}
					},
					{
						name = "selectedGuildList",
						cType = "ListView",
						params = {
							direction = false,
							anchor = {
								x = 1,
								y = 0
							},
							pos = {
								x = 783.02,
								y = 79.98
							},
							size = {
								width = 520,
								height = 50
							}
						},
						children = {
							{
								name = "guildInfoItem",
								cType = "Layout",
								custom = {
									{
										value = "untitled29-text",
										name = "name",
										type = "string"
									},
									{
										value = "untitled30-guildId",
										name = "guildId",
										type = "string"
									},
									{
										value = "untitled30-orderId",
										name = "orderId",
										type = "string"
									},
									{
										value = "untitled31-flagLogo",
										name = "logo",
										type = "string"
									},
									{
										value = "untitled31-flagInfo",
										name = "flagInfo",
										type = "string"
									}
								},
								params = {
									pos = {
										z = 0,
										x = 51.08,
										y = 36.18
									},
									size = {
										width = 188,
										height = 50
									}
								},
								children = {
									{
										name = "untitled28",
										cType = "Sprite",
										params = {
											image = "c_2.png",
											pos = {
												x = 99.38,
												y = 24.84
											}
										},
										children = {}
									},
									{
										name = "untitled29",
										cType = "Label",
										params = {
											fontSize = 18,
											outlineSize = 1,
											anchor = {
												x = 0.5,
												y = 0.5
											},
											color = {
												g = 167,
												r = 92,
												b = 187
											},
											outlineColor = {
												g = 42,
												r = 51,
												b = 24
											},
											pos = {
												x = 82,
												y = 25
											},
											text = TR("帮派帮派帮派")
										},
										children = {}
									},
									{
										name = "untitled30",
										cType = "Button",
										custom = {
											{
												value = 1,
												name = "orderId",
												type = "integer"
											},
											{
												value = 1,
												name = "guildId",
												type = "integer"
											}
										},
										params = {
											image = "c_130.png",
											clickAction = "onRemoveGuildCb",
											childName = "removeBtn",
											pos = {
												x = 156,
												y = 25
											}
										},
										children = {}
									},
									{
										name = "untitled31",
										cType = "GuildFlag",
										params = {
											flagInfo = "",
											scale = 0.3,
											flagLogo = "",
											pos = {
												x = 25.32,
												y = 21.66
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "untitled32",
						cType = "Sprite",
						params = {
							image = "c_43.png",
							pos = {
								x = 56.12,
								y = 364.25
							}
						},
						children = {
							{
								name = "untitled33",
								cType = "Label",
								params = {
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 51.32,
										y = 13.74
									},
									text = TR("全部")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled34",
						cType = "Sprite",
						params = {
							image = "c_43.png",
							pos = {
								x = 187.12,
								y = 364.25
							}
						},
						children = {
							{
								name = "untitled35",
								cType = "Label",
								params = {
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 52.32,
										y = 13.74
									},
									text = TR("接壤")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled36",
						cType = "Sprite",
						params = {
							image = "c_43.png",
							pos = {
								x = 309.12,
								y = 364.25
							}
						},
						children = {
							{
								name = "untitled37",
								cType = "Label",
								params = {
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 57.32,
										y = 13.74
									},
									text = TR("未接壤")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled38",
						cType = "Button",
						custom = {
							{
								value = 1,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "c_44.png",
							clickAction = "onClickChoseCityBtn",
							pos = {
								x = 56.88,
								y = 365.96
							},
							size = {
								width = 47,
								height = 35
							}
						},
						children = {}
					},
					{
						name = "untitled39",
						cType = "Button",
						custom = {
							{
								value = 2,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "c_pure.png",
							clickAction = "onClickChoseCityBtn",
							pos = {
								x = 188.88,
								y = 365.96
							},
							size = {
								width = 47,
								height = 35
							}
						},
						children = {}
					},
					{
						name = "untitled40",
						cType = "Button",
						custom = {
							{
								value = 3,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "c_pure.png",
							clickAction = "onClickChoseCityBtn",
							pos = {
								x = 311.88,
								y = 364.96
							},
							size = {
								width = 47,
								height = 35
							}
						},
						children = {}
					},
					{
						name = "untitled41",
						cType = "Button",
						params = {
							image = "c_27.png",
							clickAction = "onSelectGuildsCb",
							pos = {
								x = 207.8,
								y = 103.96
							},
							titleText = TR("添加")
						},
						children = {}
					},
					{
						name = "untitled45",
						cType = "Label",
						params = {
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 84.25,
								y = 99.67
							},
							text = TR("选择讨伐帮派：")
						},
						children = {}
					},
					{
						name = "untitled44",
						cType = "Label",
						params = {
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 84.25,
								y = 52.67
							},
							text = TR("辅助筛选功能：")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled46",
				cType = "Button",
				params = {
					image = "c_19.png",
					clickAction = "onSureClick",
					pos = {
						x = 422.31,
						y = 52.11
					},
					titleText = TR("确  定")
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.militaryMansion = slot1.militaryMansion
	slot0.citiesId = slot1.citiesId
	slot0.ownCityList = slot1.ownCityList
	slot0.guildInfoForPopbox = slot1.guildInfoForPopbox
	slot0.allGuildsInfo = slot1.allGuildsInfo
	slot0.midBtnTag = 1
	slot0.mCallBack = slot1.callBack

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	slot0.choseBtnList = slot0.getCustomChildren(slot0, slot0.middleNode, "tag")

	for slot4, slot5 in ipairs(slot0.choseBtnList) do
		slot5.setVisible(slot5, 28 <= PlayerAttrObj:getPlayerAttrByName("Lv"))
	end

	dump(slot1)

	for slot6 = #slot0.getCustomChildren(slot0, slot0.middleNode, "orderId"), 1, -1 do
		slot8 = false

		if slot2[slot6].val <= slot1 then
			slot1 = slot1 - slot7.val
			slot8 = true
		end

		slot7.setSelected(slot7, slot8)
	end

	slot0.operaCityList(slot0, true, true)
	slot0.refreshBeAttackedGuilds(slot0)

	return 
end
slot0.onCitySortBySelectedCb = function (slot0, slot1)
	slot0.operaCityList(slot0, slot1.cityType == 1, slot1.cityType == 2)

	return 
end
slot0.onClickChoseCityBtn = function (slot0, slot1)
	if slot1.tag == slot0.midBtnTag then
		return 
	end

	if not next(slot0.ownCityList) then
		ui.showFlashView(TR("还未占领任何门派，无接壤门派"))

		return 
	end

	for slot5, slot6 in ipairs(slot0.choseBtnList) do
		if slot5 == slot1.tag then
			slot6.loadTextures(slot6, "c_44.png", "c_44.png")
			slot6.loadTextureDisabled(slot6, "c_44.png")
		else
			slot6.loadTextures(slot6, "c_pure.png", "c_pure.png")
			slot6.setEnabled(slot6, true)
		end
	end

	slot0.midBtnTag = slot1.tag

	slot0.operaCityList(slot0, true, true)

	return 
end
slot0.onCitySelectAllCallback = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		slot1.setSelected(slot1, not slot1.isSelected(slot1))
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot2 = slot1.isSelected(slot1)

	for slot6, slot7 in ipairs(slot0.sCityList:getItems()) do
		slot7.checkBtn:setSelected(slot2)
	end

	for slot6, slot7 in ipairs(slot0.mCityList:getItems()) do
		slot7.checkBtn:setSelected(slot2)
	end

	slot0.calcSelectedCities(slot0)

	return 
end
slot0.onCitySelectAllScityCallback = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		slot1.setSelected(slot1, not slot1.isSelected(slot1))
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot2 = slot1.isSelected(slot1)

	for slot6, slot7 in ipairs(slot0.sCityList:getItems()) do
		slot7.checkBtn:setSelected(slot2)
	end

	slot0.calcSelectedCities(slot0)

	return 
end
slot0.onCitySelectAllMcityCallback = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		slot1.setSelected(slot1, not slot1.isSelected(slot1))
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot2 = slot1.isSelected(slot1)

	for slot6, slot7 in ipairs(slot0.mCityList:getItems()) do
		slot7.checkBtn:setSelected(slot2)
	end

	slot0.calcSelectedCities(slot0)

	return 
end
slot0.onCitySelectBCb = function (slot0, slot1)
	slot1.getParent(slot1).checkBtn.setSelected(slot2, not slot1.getParent(slot1).checkBtn:isSelected())
	slot0.onCitySelectCallback(slot0, slot1.getParent(slot1).checkBtn)

	return 
end
slot0.onCitySelectCallback = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		slot1.setSelected(slot1, not slot1.isSelected(slot1))
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot0.calcSelectedCities(slot0)

	return 
end
slot0.onRemoveGuildCb = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	table.removebyvalue(slot0.militaryMansion.SelectedGuilds, slot1.guildId)
	slot0.selectedGuildList:removeItem(slot1.orderId - 1)

	for slot5, slot6 in ipairs(slot0.selectedGuildList:getItems()) do
		slot6.removeBtn.orderId = slot5
	end

	slot0.operaCityList(slot0, true, true)

	return 
end
slot0.refreshBeAttackedGuilds = function (slot0)
	slot0.selectedGuildList:removeAllItems()

	for slot4, slot5 in ipairs(slot0.militaryMansion.SelectedGuilds) do
		slot0.selectedGuildList:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "guildInfoItem", {
			logo = slot0.allGuildsInfo[slot5].Logo,
			flagInfo = slot0.allGuildsInfo[slot5].Flag,
			name = slot0.allGuildsInfo[slot5].GuildName,
			guildId = slot5,
			orderId = slot4
		}))
	end

	return 
end
slot0.refreshBeAttackedGuilds = function (slot0)
	slot0.selectedGuildList:removeAllItems()

	for slot4, slot5 in ipairs(slot0.militaryMansion.SelectedGuilds) do
		slot0.selectedGuildList:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "guildInfoItem", {
			logo = slot0.allGuildsInfo[slot5].Logo,
			flagInfo = slot0.allGuildsInfo[slot5].Flag,
			name = slot0.allGuildsInfo[slot5].GuildName,
			guildId = slot5,
			orderId = slot4
		}))
	end

	return 
end
slot0.initChooseGuildList = function (slot0)
	slot1 = PlayerAttrObj:getPlayerAttrByName("GuildInfo").GuildId
	slot3 = {}

	for slot7, slot8 in ipairs(slot2) do
		if slot7 ~= slot1 then
			slot0.selectedGuildList:pushBackCustomItem(slot9)
			slot9.selectedFlag:setVisible((table.indexof(slot0.militaryMansion.SelectedGuilds, slot7) and true) or false)
		end
	end

	return 
end
slot0.operaCityList = function (slot0, slot1, slot2)
	function slot3(slot0)
		table.sort(slot0, function (slot0, slot1)
			return ((table.indexof(slot0.militaryMansion.SelectedCities, slot1) and ) or -1) < ((table.indexof(slot0.militaryMansion.SelectedCities, slot0) and slot2) or -1)
		end)

		return slot0
	end

	slot4, slot5 = slot0.calcCityList(slot0)

	for slot9 = #slot0.militaryMansion.SelectedCities, 1, -1 do
		if not table.indexof(slot4, slot0.militaryMansion.SelectedCities[slot9]) and not table.indexof(slot5, slot10) then
			table.remove(slot0.militaryMansion.SelectedCities, slot9)
		end
	end

	if slot1 then
		slot0.sCityList:removeAllItems()

		for slot9, slot10 in ipairs(slot4) do
			slot11 = slot0.createLayoutTemplateNode(slot0, "cityItem", {
				cityImg = "jh_21.png",
				cityName = CitywarCityConfig.items[slot10].name,
				cityId = slot10,
				color = cc.c3b(255, 255, 255)
			})

			slot11.checkBtn:setScale(0.8)
			slot0.sCityList:pushBackCustomItem(slot11)
			slot11.checkBtn:setSelected((table.indexof(slot0.militaryMansion.SelectedCities, slot10) and true) or false)
		end
	end

	if slot2 then
		slot0.mCityList:removeAllItems()

		for slot9, slot10 in ipairs(slot5) do
			slot11 = slot0.createLayoutTemplateNode(slot0, "cityItem", {
				cityImg = "jh_22.png",
				cityName = CitywarCityConfig.items[slot10].name,
				cityId = slot10,
				color = cc.c3b(96, 216, 255)
			})

			slot11.checkBtn:setScale(0.8)
			slot0.mCityList:pushBackCustomItem(slot11)
			slot11.checkBtn:setSelected((table.indexof(slot0.militaryMansion.SelectedCities, slot10) and true) or false)
		end
	end

	slot0.calcSelectedCities(slot0)

	return 
end
slot0.calcSelectedCities = function (slot0)
	slot1 = true
	slot0.militaryMansion.SelectedCities = {}
	slot2 = true

	for slot7, slot8 in ipairs(slot3) do
		if slot8.checkBtn:isSelected() then
			table.insert(slot0.militaryMansion.SelectedCities, slot8.checkBtn.cityId)
		else
			slot1 = false
			slot2 = false
		end
	end

	slot0.allScityBtn:setSelected(slot2)

	slot4 = true

	for slot9, slot10 in ipairs(slot5) do
		if slot10.checkBtn:isSelected() then
			table.insert(slot0.militaryMansion.SelectedCities, slot10.checkBtn.cityId)
		else
			slot1 = false
			slot4 = false
		end
	end

	slot0.allMcityBtn:setSelected(slot4)

	if #slot3 + #slot5 == 0 then
		slot1 = false
	end

	return 
end
slot0.calcCityList = function (slot0)
	slot1 = 1
	slot2 = 2
	slot3 = {}
	slot4 = {}

	table.sort(slot5, function (slot0, slot1)
		if CitywarCityConfig.items[slot0].openNeedPlayerLv == CitywarCityConfig.items[slot1].openNeedPlayerLv then
			return slot0 < slot1
		else
			return slot2 < slot3
		end

		return 
	end)

	for slot9, slot10 in ipairs(slot5) do
		if PlayerAttrObj:getPlayerAttrByName("Lv") < CitywarCityConfig.items[slot10].openNeedPlayerLv then
			break
		end

		slot12 = slot11.cityType

		if not table.indexof(slot0.citiesId, slot10) and (slot0.midBtnTag == 1 or (slot0.midBtnTag == 2 and Utility.isCityNearOwned(slot0.ownCityList, slot10)) or (slot0.midBtnTag == 3 and not Utility.isCityNearOwned(slot0.ownCityList, slot10))) then
			if slot12 == slot1 then
				table.insert(slot3, slot10)
			elseif slot12 == slot2 then
				table.insert(slot4, slot10)
			end
		end
	end

	slot6 = {}
	slot7 = {}

	for slot11, slot12 in ipairs(slot0.militaryMansion.SelectedGuilds) do
		slot13 = slot0.allGuildsInfo[slot12].CityInfo or {}

		for slot17, slot18 in ipairs(slot13) do
			if CitywarCityConfig.items[slot18].cityType == slot1 then
				if table.indexof(slot3, slot18) then
					table.insert(slot6, slot18)
				end
			elseif slot19 == slot2 and table.indexof(slot4, slot18) then
				table.insert(slot7, slot18)
			end
		end
	end

	if 0 < #slot0.militaryMansion.SelectedGuilds then
		slot4 = slot7
		slot3 = slot6
	end

	return slot3, slot4
end
slot0.onSelectGuildsCb = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "citywar.CityWarGuildsChooseLayer",
		data = {
			selectedGuilds = clone(slot0.militaryMansion.SelectedGuilds),
			allGuildsInfo = slot0.guildInfoForPopbox,
			updateParFunc = function (slot0)
				if slot0 ~= slot0.militaryMansion.SelectedGuilds then
					slot0.militaryMansion.SelectedGuilds = slot0

					slot0:refreshBeAttackedGuilds()
					slot0:operaCityList(true, true)
				end

				return 
			end
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onFightConditionCallback = function (slot0, slot1)
	if slot0.militaryMansion.OnHook then
		slot1.setSelected(slot1, not slot1.isSelected(slot1))
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot0.militaryMansion.AuxiliaryFunctions = slot0.calcAuxiliaryVal(slot0)

	return 
end
slot0.calcAuxiliaryVal = function (slot0)
	slot1 = 0

	for slot5, slot6 in ipairs(slot0.getCustomChildren(slot0, slot0.middleNode, "orderId")) do
		if slot6.isSelected(slot6) then
			slot1 = slot1 + slot6.val
		end
	end

	return slot1
end
slot0.onSureClick = function (slot0)
	if slot0.mCallBack then
		slot0.mCallBack(slot0.militaryMansion.SelectedGuilds, slot0.militaryMansion.SelectedCities, slot0.militaryMansion.AuxiliaryFunctions)
	end

	LayerManager.removeLayer(slot0)

	return 
end

return slot0
