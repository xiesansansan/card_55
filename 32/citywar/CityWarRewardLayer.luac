slot0 = class("CityWarRewardLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "msgBox",
		cType = "MsgBoxBg",
		params = {
			actionCallback = "onActionCallback",
			closeAction = "onCloseLayerCallback",
			posApt = 1,
			image = "tc_1.png",
			pos = {
				x = 568,
				y = 320
			},
			titleText = TR("帮战奖励")
		},
		children = {
			{
				name = "untitled143",
				cType = "Scale9Sprite",
				params = {
					image = "c_24.png",
					pos = {
						x = 423.28,
						y = 260.67
					},
					size = {
						width = 800,
						height = 460
					}
				},
				children = {}
			},
			{
				name = "untitled114",
				cType = "Label",
				params = {
					fontSize = 23,
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 434,
						y = 242.5
					},
					text = TR("帮战奖励")
				},
				children = {
					{
						name = "untitled124",
						cType = "Scale9Sprite",
						params = {
							image = "c_36.png",
							pos = {
								x = -86.59,
								y = 9
							}
						},
						children = {}
					},
					{
						name = "untitled123",
						cType = "Scale9Sprite",
						params = {
							reverse = 1,
							image = "c_36.png",
							pos = {
								x = 178,
								y = 9
							}
						},
						children = {}
					}
				}
			},
			{
				name = "teamList",
				cType = "ListView",
				params = {
					margin = 5,
					direction = false,
					pos = {
						x = 35.84,
						y = 254.89
					},
					size = {
						width = 775,
						height = 220
					}
				},
				children = {
					{
						name = "teamItem",
						cType = "Layout",
						custom = {
							{
								value = "teamIdLabel-text",
								name = "teamIndex",
								type = "string"
							},
							{
								value = "inHookBtn-isSelect",
								name = "isSelected",
								type = "string"
							}
						},
						params = {
							pos = {
								z = 0,
								x = 49.06,
								y = 7.02
							},
							size = {
								width = 150,
								height = 220
							}
						},
						children = {
							{
								name = "editBtn",
								cType = "Button",
								params = {
									fontSize = 28,
									scale = 0.9,
									titleImage = "jh_55.png",
									pressedAction = false,
									image = "jh_56.png",
									titleText = "",
									pos = {
										x = 75,
										y = 110
									},
									titleColor = {
										g = 37,
										r = 37,
										b = 37
									}
								},
								children = {
									{
										name = "contentPane",
										cType = "Scale9Sprite",
										params = {
											image = "c_pure.png",
											pos = {
												x = -0.39,
												y = -0.39
											},
											size = {
												width = 178,
												height = 248
											}
										},
										children = {
											{
												name = "teamIdLabel",
												cType = "Label",
												params = {
													anchor = {
														x = 0,
														y = 0.5
													},
													pos = {
														x = 64.93,
														y = 211.56
													},
													text = TR("队伍1")
												},
												children = {}
											},
											{
												name = "untitled108",
												cType = "CardNode",
												custom = {
													{
														value = 1,
														name = "index",
														type = "integer"
													}
												},
												params = {
													scale = 0.5,
													allowClick = false,
													pos = {
														x = 116.65,
														y = 136.15
													}
												},
												children = {}
											},
											{
												name = "untitled107",
												cType = "CardNode",
												custom = {
													{
														value = 2,
														name = "index",
														type = "integer"
													}
												},
												params = {
													scale = 0.5,
													allowClick = false,
													pos = {
														x = 63.8,
														y = 135.76
													}
												},
												children = {}
											},
											{
												name = "untitled111",
												cType = "CardNode",
												custom = {
													{
														value = 3,
														name = "index",
														type = "integer"
													}
												},
												params = {
													scale = 0.5,
													allowClick = false,
													pos = {
														x = 136.65,
														y = 88.15
													}
												},
												children = {}
											},
											{
												name = "untitled110",
												cType = "CardNode",
												custom = {
													{
														value = 4,
														name = "index",
														type = "integer"
													}
												},
												params = {
													scale = 0.5,
													allowClick = false,
													pos = {
														x = 89.65,
														y = 88.15
													}
												},
												children = {}
											},
											{
												name = "untitled109",
												cType = "CardNode",
												custom = {
													{
														value = 5,
														name = "index",
														type = "integer"
													}
												},
												params = {
													scale = 0.5,
													allowClick = false,
													pos = {
														x = 42.65,
														y = 88.15
													}
												},
												children = {}
											},
											{
												name = "countLabel",
												cType = "Label",
												params = {
													fontSize = 18,
													text = "",
													anchor = {
														x = 0.5,
														y = 0.5
													},
													color = {
														g = 37,
														r = 37,
														b = 37
													},
													pos = {
														x = 85.11,
														y = 34.44
													}
												},
												children = {}
											}
										}
									},
									{
										name = "lvLabel",
										cType = "Label",
										params = {
											fontSize = 22,
											text = "",
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = -0.09,
												y = -83.58
											}
										},
										children = {}
									}
								}
							},
							{
								name = "teamState",
								cType = "BadgeText",
								params = {
									fontRotation = -45,
									image = "c_88.png",
									anchor = {
										x = 1,
										y = 1
									},
									fontPos = {
										x = 20,
										y = 35
									},
									pos = {
										x = 60.79,
										y = 207.76
									},
									text = TR("推荐")
								},
								children = {}
							},
							{
								name = "untitled154",
								cType = "Button",
								params = {
									image = "wulin_14.png",
									childName = "reportBtn",
									pos = {
										x = 126.83,
										y = 162.1
									}
								},
								children = {}
							},
							{
								name = "lockSprite",
								cType = "Sprite",
								params = {
									opacity = 200,
									scale = 0.9,
									hide = true,
									image = "jh_56.png",
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 75.26,
										y = 110.93
									}
								},
								children = {
									{
										name = "untitled159",
										cType = "Sprite",
										params = {
											image = "c_21.png",
											pos = {
												x = 90.11,
												y = 111.9
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			},
			{
				name = "untitled142",
				cType = "Button",
				params = {
					image = "c_3.png",
					clickAction = "onRuleClick",
					pos = {
						x = 34.97,
						y = 491.95
					}
				},
				children = {}
			},
			{
				name = "mRewardList",
				cType = "ListView",
				params = {
					direction = false,
					anchor = {
						x = 0.5,
						y = 0.5
					},
					pos = {
						x = 424.85,
						y = 177.66
					},
					size = {
						width = 520,
						height = 90
					}
				},
				children = {
					{
						name = "rewardLayout",
						cType = "Layout",
						params = {
							size = {
								width = 90,
								height = 90
							}
						},
						children = {
							{
								name = "untitled150",
								cType = "CardNode",
								params = {
									childName = "cardNode",
									allowClick = true,
									pos = {
										x = 45,
										y = 45
									}
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "drawBtn",
				cType = "Button",
				params = {
					image = "c_32.png",
					clickAction = "onRequestGetReward",
					scale = 1.1,
					pos = {
						x = 300,
						y = 85
					},
					titleText = TR("领 取")
				},
				children = {}
			},
			{
				name = "untitled152",
				cType = "Button",
				params = {
					image = "c_27.png",
					clickAction = "onGotoGuajiLayer",
					scale = 1.1,
					pos = {
						x = 548,
						y = 85
					},
					titleText = TR("帮战挂机")
				},
				children = {}
			},
			{
				name = "untitled153",
				cType = "Label",
				params = {
					fontSize = 18,
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 548,
						y = 49.41
					},
					text = TR("开启挂机轻松获取帮战奖励")
				},
				children = {}
			},
			{
				name = "noRewardLabel",
				cType = "Label",
				params = {
					hide = true,
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 424.03,
						y = 166.95
					},
					text = TR("暂时没有帮战奖励可领取")
				},
				children = {}
			}
		}
	}
}
slot1 = {
	defense = 2,
	wait = 3,
	idle = 4,
	attack = 1,
	dead = 5
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0, {
		swallow = true
	})
	slot0.initUI(slot0, slot1.cityInfo)

	return 
end
slot0.initUI = function (slot0, slot1)
	slot0.createUITree(slot0)

	slot0.actionRefresh = Utility.getCounterFunc(handler(slot0, slot0.initAllUIByData), 3)

	slot0.requestGetCityInfo(slot0)
	slot0.getInfo(slot0)

	return 
end
slot0.onRuleClick = function (slot0)
	ui.showRuleMsg({
		image = "tc_1.png",
		textList = {
			TR("1、大侠可使用帮战挂机功能帮助玩家进行帮战。"),
			TR("2、帮战可选择挂机的队伍需要是空闲的队伍。"),
			TR("3、最多可使用五支队伍进行帮战挂机。"),
			TR("4、帮战挂机会随机帮玩家进行攻打门派。"),
			TR("5、攻打门派可获得铜钱、主角经验以及各种其他道具。")
		}
	})

	return 
end
slot0.calcVitCostAndFapByFormationStr = function (slot0, slot1)
	slot3 = clone(HeroObj:getList())
	slot4 = 0
	slot5 = 0

	if string.split(slot1, ",") ~= "" then
		for slot9, slot10 in ipairs(slot2) do
			if slot10 ~= "0" then
				slot5 = slot5 + slot3[tonumber(slot10)].Fap
				slot4 = slot4 + Utility.getNeedVitByFap(slot3[tonumber(slot10)].Fap)
			end
		end
	end

	if 0 < slot5 then
		slot5 = slot5 + Player:getGameData("Push_SkillTotalFap")
	end

	return slot4, slot5
end
slot0.initAllUIByData = function (slot0)
	for slot4 = #slot0.militaryMansion.SelectedGuilds, 1, -1 do
		if not slot0.allGuildsInfo[slot0.militaryMansion.SelectedGuilds[slot4]] then
			table.remove(slot0.militaryMansion.SelectedGuilds, slot4)
		end
	end

	slot0.initTeams(slot0)

	if slot0.militaryMansion.AttackNum == 0 and slot0.militaryMansion.OnHook == false then
		slot0.militaryMansion.AttackNum = 1
	end

	slot0.effectList = slot0.getCustomChildren(slot0, slot0.msgBox, "effectTag")

	return 
end
slot0.createOneTeam = function (slot0, slot1, slot2)
	slot0.createLayoutTemplateNode(slot0, "teamItem", {
		isSelected = false,
		teamIndex = TR("队伍%d", slot2)
	}).reportBtn:setClickAction()

	if slot1 then
		slot4 = slot2

		slot3.reportBtn:setClickAction(function (slot0)
			LayerManager.addLayer({
				cleanUp = false,
				name = "citywar.CityWarRewardReportLayer",
				data = {
					teamIndex = slot0
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})

			return 
		end)
	end

	slot3.editBtn.teamId = slot2
	slot6 = (((slot1 and true) or false) and slot1.HeroInfo and string.split(((slot1 and true) or false) and slot1.HeroInfo, ",")) or {}

	slot3.editBtn.titleSprite:setVisible(not ((slot1 and true) or false))

	if slot4 then
		slot3.editBtn:setClickAction(function ()
			return 
		end)
	else
		slot8 = PlayerAttrObj:getPlayerAttrByName("Lv")

		if next(CitywarQueueConfig.items[slot2] or {}) ~= nil and slot7.needPlayerLv <= slot8 then
			slot3.editBtn:setClickAction(function ()
				slot0:onSetTeamsCallback(slot1.editBtn)

				return 
			end)
		else
			slot3.editBtn:setClickAction(function ()
				return 
			end)
			slot3.editBtn.titleSprite:setVisible(false)
			slot3.lvLabel:setString(TR("%s级开启", slot7.needPlayerLv))
		end
	end

	if slot1 then
		if slot1.Type == 3 then
			slot3.teamState:setText(TR("大营"))
		elseif slot1.State == slot0.idle then
			slot3.teamState:setText(TR("空闲"))
		else
			slot3.teamState:setText(TR("交战"))
		end
	else
		slot3.teamState:setVisible(false)
		slot3.reportBtn:setVisible(false)
	end

	slot7 = 0
	slot8 = 0

	if slot4 then
		slot7, slot8 = slot0.calcVitCostAndFapByFormationStr(slot0, slot5)
	end

	for slot12, slot13 in ipairs(slot0.getCustomChildren(slot0, slot3.contentPane, "index")) do
		slot13.setVisible(slot13, slot4)

		if tonumber(slot6[slot12] or 0) ~= 0 then
			slot13.setCardData(slot13, nil, {
				Enums.CardShowAttr.eBorder
			}, HeroObj:getItem(slot14))
		end
	end

	if slot1 and slot0.militaryMansion.OnHook and slot1.IfGuaji then
		slot3.countLabel:setString(TR("剩余次数:%d", slot0.mAttackNum - slot1.KillTimeCurDaily))
	end

	return slot3
end
slot0.initTeams = function (slot0)
	slot0.teamList:removeAllItems()

	slot1 = #CitywarQueueConfig.items
	slot2 = 1
	slot3 = slot0.militaryMansion.TeamInfo or {}

	Utility.schedule(slot0.teamList, function ()
		if slot0[slot1] then
			slot2.teamList:pushBackCustomItem(slot2:createOneTeam(slot0[slot1], slot2))

			if slot2.createOneTeam(slot0[slot1], slot2) ==  then
				slot2.teamList:stopAllActions()
			end

			slot1 = slot1 + 1
		else
			slot2.teamList:pushBackCustomItem(slot2:createOneTeam(nil, slot2))

			if slot2.createOneTeam(nil, slot2) ==  then
				slot2.teamList:stopAllActions()
			end

			slot1 = slot1 + 1
		end

		return 
	end, 0.05, false)
	slot0.refreshReward(slot0)

	return 
end
slot0.refreshReward = function (slot0)
	slot0.mRewardList:removeAllItems()

	slot2 = {}

	for slot6, slot7 in ipairs(slot1) do
		if slot2[slot7.resourceId] == nil then
			slot2[slot7.resourceId] = slot7
		else
			slot2[slot7.resourceId].num = slot2[slot7.resourceId].num + slot7.num
		end
	end

	slot0.mRewardList:setContentSize(cc.size(math.min(520, table.nums(slot2)*90), 90))

	for slot6, slot7 in pairs(slot2) do
		slot0.createLayoutTemplateNode(slot0, "rewardLayout").cardNode:setCardData(slot7, {
			Enums.CardShowAttr.eNum
		})
		slot0.mRewardList:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "rewardLayout"))
	end

	slot0.noRewardLabel:setVisible(slot2 == nil or next(slot2) == nil)
	slot0.drawBtn:setEnabled(slot0.FightRewardStr ~= "")

	return 
end
slot0.onSetTeamsCallback = function (slot0, slot1)
	if not (#slot0.militaryMansion.TeamInfo < slot1.teamId) then
		return 
	end

	if slot0.militaryMansion.OnHook then
		ui.showFlashView("队伍出征中，无法执行操作")

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "GetTeamStateInfo",
		moduleName = "Citywar",
		successCallback = function (slot0)
			LayerManager.addLayer({
				cleanUp = false,
				name = "citywar.CitywarCampReadyLayer",
				data = {
					minCount = 5,
					callModelSub = ModuleSub.eCityWar,
					titleText = TR("编队布阵"),
					cityWarTeamData = slot0.Value or {},
					vitCostR = PlayerAttrObj:getPlayerAttrByName("TitleCityWarVitCostR") or 0,
					callback = function (slot0, slot1)
						slot0:socketRequest({
							methodName = "BuildTeam",
							moduleName = "Citywar",
							methodData = {
								slot0,
								slot1,
								false
							},
							successCallback = function (slot0)
								ui.showFlashView("编队成功！")
								slot0:getInfo(true)

								return 
							end
						})

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})

			return 
		end
	})

	return 
end
slot0.onGotoGuajiLayer = function (slot0)
	if Utility.moduleIsOpen(ModuleSub.eMilitaryMansion, true) then
		LayerManager.addLayer({
			cleanUp = false,
			name = "citywar.CityWarHelperLayer",
			data = {
				cityInfo = slot0.allCityInfo.CityInfo,
				ownCityInfo = slot0.allCityInfo.OwnCity
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
		LayerManager.removeLayer(slot0)
	end

	return 
end
slot0.onCloseLayerCallback = function (slot0, slot1)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onActionCallback = function (slot0)
	slot0.actionRefresh()

	return 
end
slot0.getInfo = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "MilitaryMansion",
		successCallback = function (slot0)
			slot0.militaryMansion = slot0.MilitaryMansion
			slot0.mAttackNum = slot0.militaryMansion.AttackNum
			slot1 = {}
			slot2 = ipairs
			slot3 = slot0.MilitaryMansion.TeamInfo or {}

			for slot5, slot6 in slot2(slot3) do
				table.insert(slot1, slot6)
			end

			slot0.militaryMansion.TeamInfo = slot1
			slot0.citiesId = slot0.CitiesId

			slot0.actionRefresh()

			if slot1 then
				slot0:initAllUIByData()
			end

			return 
		end
	})

	return 
end
slot0.requestGetCityInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetCityInfo",
		moduleName = "Citywar",
		needWait = false,
		methodData = {
			0
		},
		successCallback = function (slot0)
			slot0.allCityInfo = slot0
			slot0.FightRewardStr = slot0.CitywarInfo.FightRewardStr

			slot0.actionRefresh()

			return 
		end
	})

	return 
end
slot0.onRequestGetReward = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "DrawFightReward",
		moduleName = "Citywar",
		methodData = {},
		successCallback = function (slot0)
			slot0.FightRewardStr = slot0.CitywarInfo.FightRewardStr

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			slot0:refreshReward()
			PlayerAttrObj:checkLvUp()

			return 
		end
	})

	return 
end

return slot0
