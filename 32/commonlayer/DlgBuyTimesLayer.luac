slot0 = class("DlgBuyTimesLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 151)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			posApt = 1,
			image = "tc_2.png",
			pos = {
				x = 568,
				y = 320
			},
			titleText = TR("提示")
		},
		children = {
			{
				name = "untitled2",
				cType = "Scale9Sprite",
				params = {
					image = "c_24.png",
					pos = {
						x = 258.06,
						y = 211.37
					},
					size = {
						width = 451.47,
						height = 170
					}
				},
				children = {}
			},
			{
				name = "priceLabel",
				cType = "Label",
				params = {
					fontSize = 20,
					isRichText = true,
					color = {
						g = 42,
						r = 51,
						b = 24
					},
					pos = {
						x = 244.05,
						y = 107.89
					},
					text = TR("价格")
				},
				children = {}
			},
			{
				name = "selectCountView",
				cType = "SelectCountView",
				params = {
					changeCallback = "onSelectChanged",
					currSelCount = 1,
					btnSize = {
						width = 65,
						height = 32.4
					},
					pos = {
						x = 258.84,
						y = 187.14
					},
					size = {
						width = 450,
						height = 50
					}
				},
				children = {}
			},
			{
				name = "untitled5",
				cType = "Button",
				params = {
					image = "c_19.png",
					clickAction = "onSureBtnAction",
					pos = {
						x = 245.23,
						y = 66.7
					},
					titleText = TR("购 买")
				},
				children = {}
			},
			{
				name = "untitled7",
				cType = "Label",
				params = {
					isRichText = "false",
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 251.25,
						y = 267.9
					},
					text = TR("剩余购买次数：")
				},
				children = {}
			},
			{
				name = "canBuyNum",
				cType = "Label",
				params = {
					fontSize = 20,
					text = "0",
					isRichText = false,
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 324.73,
						y = 268.84
					}
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mCallback = slot1 or {}.callback
	slot0.mPrice = slot1 or {}.price
	slot0.mBoughtNum = slot1 or {}.boughtNum
	slot0.mMaxNum = slot1 or {}.maxNum
	slot0.price_key = slot1 or {}.price_key
	slot0.mRemainCount = slot0.mMaxNum - slot0.mBoughtNum
	slot0.mResId = ResourceTypeSub.eDiamond
	slot0.mResNum = 0
	slot0.mSelectNum = 1

	slot0.super.ctor(slot0, {
		swallow = true
	})
	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.selectCountView:setMaxCount(slot0.mRemainCount)
	slot0.canBuyNum:setString(slot0.mRemainCount)
	slot0.canBuyNum:setColor((0 < slot0.mRemainCount and cc.c3b(98, 127, 34)) or cc.c3b(192, 65, 65))

	if slot0.mRemainCount <= 0 then
		slot0.selectCountView:setCount(0)
		slot0.priceLabel:setVisible(false)
	end

	return 
end
slot0.getPrice = function (slot0, slot1)
	slot2 = 0

	if type(slot0.mPrice) == "number" then
		slot2 = slot1*slot0.mPrice
	elseif type(slot0.mPrice) == "string" then
		slot2 = Utility.analysisStrResList(slot0.mPrice)[1].num*slot1
		slot0.mResId = Utility.analysisStrResList(slot0.mPrice)[1].resourceId
	elseif type(slot0.mPrice) == "table" then
		for slot7 = slot0.mBoughtNum + 1, slot0.mBoughtNum + slot1, 1 do
			if type(slot0.mPrice.items[slot7] or slot0.mPrice.items[#slot0.mPrice.items][slot0.price_key]) == "number" then
				slot2 = slot2 + slot9
			elseif type(slot9) == "string" then
				slot2 = slot2 + Utility.analysisStrResList(slot9)[1].num
				slot0.mResId = Utility.analysisStrResList(slot9)[1].resourceId
			end
		end
	end

	return slot2
end
slot0.onSelectChanged = function (slot0, slot1)
	slot0.mSelectNum = slot1
	slot2 = 0

	if 0 < slot0.mRemainCount then
		slot0.priceLabel:setString(TR("价格{%s}%s", Resource.getDaibiImg(slot0.mResId), slot0.getPrice(slot0, slot1)))

		slot0.mResNum = slot0.getPrice(slot0, slot1)
	end

	return 
end
slot0.onSureBtnAction = function (slot0, slot1)
	if slot0.mRemainCount <= 0 then
		if type(slot0.mPrice) == "table" and slot0.mMaxNum < #slot0.mPrice.items then
			ui.showFlashView(TR("已达到购买次数上限!提升VIP等级可增加购买次数"))
		else
			ui.showFlashView(TR("已达到购买次数上限!"))
		end

		return 
	elseif not Resource.isEnough(slot0.mResId, slot0.mResNum, true, true) then
		return 
	elseif slot0.mCallback then
		slot0.mCallback(slot0.mSelectNum)
	end

	LayerManager.removeLayer(slot0)

	return 
end

return slot0
