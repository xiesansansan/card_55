slot0 = class("CrownsDlgYXCampLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			image = "tc_2.png",
			posApt = 1,
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 970,
				height = 500
			},
			titleText = TR("预选赛布阵")
		},
		children = {
			{
				name = "untitled13",
				cType = "Scale9Sprite",
				params = {
					image = "c_94.png",
					anchor = {
						x = 0.5,
						y = 1
					},
					pos = {
						x = 323.1,
						y = 448.23
					},
					size = {
						width = 569.85,
						height = 407.55
					}
				},
				children = {
					{
						name = "mListView",
						cType = "ListView",
						params = {
							direction = true,
							swallowTouch = false,
							pos = {
								x = 5.19,
								y = 5.48
							},
							size = {
								width = 560,
								height = 395.05
							}
						},
						children = {
							{
								name = "templateCampCell",
								cType = "Layout",
								custom = {
									{
										value = "untitled6-text",
										name = "strTitle",
										type = "string"
									}
								},
								params = {
									pos = {
										z = 0,
										x = 0.37,
										y = 235.96
									},
									size = {
										width = 560,
										height = 160
									}
								},
								children = {
									{
										name = "untitled15",
										cType = "Scale9Sprite",
										params = {
											image = "c_95.png",
											childName = "bgSprite",
											capInsets = {
												x = 100,
												height = 1,
												width = 1,
												y = 60
											},
											pos = {
												x = 280,
												y = 75
											},
											size = {
												width = 560,
												height = 158
											}
										},
										children = {}
									},
									{
										name = "untitled6",
										cType = "Label",
										params = {
											fontSize = 20,
											childName = "nameLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 231,
												r = 255,
												b = 72
											},
											outlineColor = {
												g = 42,
												r = 51,
												b = 24
											},
											pos = {
												x = 30,
												y = 132
											},
											text = TR("预阵容一")
										},
										children = {}
									},
									{
										name = "fapBg",
										cType = "Scale9Sprite",
										params = {
											scale = 0.6,
											image = "c_82.png",
											pos = {
												x = 237.55,
												y = 135.02
											}
										},
										children = {}
									},
									{
										name = "fapLabel",
										cType = "Label",
										params = {
											charCount = 12,
											scale = 0.6,
											fontName = "c_81.png",
											anchor = {
												x = 0,
												y = 0.5
											},
											pos = {
												x = 219.16,
												y = 134.64
											},
											text = TR("1234万")
										},
										children = {}
									},
									{
										name = "untitled16",
										cType = "Sprite",
										params = {
											image = "c_80.png",
											scale = 0.6,
											anchor = {
												x = 0,
												y = 0.5
											},
											pos = {
												x = 172,
												y = 133.65
											}
										},
										children = {}
									},
									{
										name = "untitled8",
										cType = "CardNode",
										custom = {
											{
												value = 1,
												name = "headerTag",
												type = "integer"
											}
										},
										params = {
											allowClick = true,
											pos = {
												x = 68,
												y = 56
											}
										},
										children = {}
									},
									{
										name = "untitled9",
										cType = "CardNode",
										custom = {
											{
												value = 2,
												name = "headerTag",
												type = "integer"
											}
										},
										params = {
											allowClick = true,
											pos = {
												x = 174,
												y = 56
											}
										},
										children = {}
									},
									{
										name = "untitled10",
										cType = "CardNode",
										custom = {
											{
												value = 3,
												name = "headerTag",
												type = "integer"
											}
										},
										params = {
											allowClick = true,
											pos = {
												x = 280,
												y = 56
											}
										},
										children = {}
									},
									{
										name = "untitled11",
										cType = "CardNode",
										custom = {
											{
												value = 4,
												name = "headerTag",
												type = "integer"
											}
										},
										params = {
											allowClick = true,
											pos = {
												x = 386,
												y = 56
											}
										},
										children = {}
									},
									{
										name = "untitled12",
										cType = "CardNode",
										custom = {
											{
												value = 5,
												name = "headerTag",
												type = "integer"
											}
										},
										params = {
											allowClick = true,
											pos = {
												x = 492,
												y = 56
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			},
			{
				name = "untitled20",
				cType = "Label",
				params = {
					outlineColor = {
						g = 42,
						r = 51,
						b = 24
					},
					pos = {
						x = 778.83,
						y = 445.48
					},
					text = TR("布阵规则")
				},
				children = {}
			},
			{
				name = "ruleListView",
				cType = "ListView",
				params = {
					direction = true,
					anchor = {
						x = 0.5,
						y = 1
					},
					pos = {
						x = 778.83,
						y = 423.48
					},
					size = {
						width = 337.55,
						height = 371.82
					}
				},
				children = {
					{
						name = "templateRuleCell",
						cType = "Layout",
						custom = {
							{
								value = "untitled24-text",
								name = "ruleText",
								type = "string"
							}
						},
						params = {
							pos = {
								z = 0,
								x = -10.64,
								y = 338.85
							},
							size = {
								width = 337.55,
								height = 31.97
							}
						},
						children = {
							{
								name = "untitled24",
								cType = "Label",
								params = {
									fontSize = 20,
									text = "Label",
									childName = "infoLabel",
									valign = 0,
									anchor = {
										x = 0,
										y = 1
									},
									color = {
										g = 34,
										r = 69,
										b = 13
									},
									pos = {
										x = -1.98,
										y = 26.29
									},
									size = {
										width = 337.55,
										height = 0
									}
								},
								children = {}
							}
						}
					}
				}
			}
		}
	}
}
slot1 = {
	{
		tag = 1,
		dataName = "PreFormationInfo1",
		strategyName = "PreStrategyId1",
		title = TR("预选赛阵容一")
	},
	{
		tag = 2,
		dataName = "PreFormationInfo2",
		strategyName = "PreStrategyId2",
		title = TR("预选赛阵容二")
	},
	{
		tag = 3,
		dataName = "PreFormationInfo3",
		strategyName = "PreStrategyId3",
		title = TR("预选赛阵容三")
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.callback = slot1.callback or nil
	slot0.oldFormation = {}

	slot0.initUI(slot0)
	slot0.getInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	for slot4, slot5 in ipairs(slot0) do
		slot6 = slot0.createLayoutTemplateNode(slot0, "templateCampCell", {
			strTitle = TR("%s", slot5.title)
		})
		slot6.headerList = slot0.getCustomChildren(slot0, slot6, "headerTag")
		slot6.dataName = slot5.dataName
		slot6.refreshCell = function (slot0, slot1)
			slot2 = true
			slot3 = {}

			if slot1 ~= "" then
				slot3 = cjson.decode(slot1)
			end

			slot4 = 0

			for slot8 = 1, 5, 1 do
				slot4 = slot4 + (HeroObj:getItem((slot3[slot8] and slot3[slot8].ModelId) or 0) or {}.Fap or 0)

				slot0.headerList[slot8]:setCardData(nil, {
					Enums.CardShowAttr.eLevel,
					Enums.CardShowAttr.eStar,
					Enums.CardShowAttr.eTrainLv
				}, HeroObj.getItem((slot3[slot8] and slot3[slot8].ModelId) or 0) or {})

				if slot9 == 0 and slot2 == true then
					slot11.setAddMark(slot11, false)
				end

				if slot2 then
					slot11.setClickAction(slot11, function ()
						slot0:setFormation(slot0)

						return 
					end)
				else
					slot11.setGray(slot11, false)
				end
			end

			slot0.fapLabel:setString(Utility.numberWithUnit(slot4))

			return 
		end

		slot0.mListView:pushBackCustomItem(slot6)
	end

	for slot5, slot6 in ipairs(slot1) do
		slot7 = slot0.createLayoutTemplateNode(slot0, "templateRuleCell", {
			ruleText = slot6
		})

		slot7.setContentSize(slot7, cc.size(500, slot7.infoLabel:getContentSize().height + 10))
		slot7.infoLabel:setPositionY((slot7.infoLabel.getContentSize().height + 10) - 5)
		slot0.ruleListView:pushBackCustomItem(slot7)
	end

	return 
end
slot0.refreshUI = function (slot0)
	for slot4, slot5 in ipairs(slot0.mListView:getItems()) do
		slot5.refreshCell(slot5, slot0.oldFormation[slot5.dataName] or "")
	end

	return 
end
slot0.setFormation = function (slot0, slot1)
	slot2 = {}
	slot3 = {}
	slot4 = {}

	for slot8, slot9 in ipairs(slot0) do
		slot10 = {}

		if slot0.oldFormation[slot9.dataName] ~= "" then
			slot10 = cjson.decode(slot0.oldFormation[slot9.dataName])
		end

		slot11 = 0

		if slot0.oldFormation[slot9.strategyName] then
			slot11 = tonumber(slot0.oldFormation[slot9.strategyName])
		end

		if slot1 ~= slot8 then
			for slot15, slot16 in ipairs(slot10) do
				table.insert(slot2, tonumber(slot16.ModelId))
			end
		else
			for slot15, slot16 in ipairs(slot10) do
				table.insert(slot3, slot16.ModelId)
			end

			table.insert(slot3, slot11)
		end

		table.insert(slot4, slot11)
	end

	ui.showCampReady({
		noNeedVit = true,
		minCount = 5,
		isPvp = true,
		callModelSub = ModuleSub.eUniverseNumOne,
		titleText = TR("%s", slot0[slot1].title),
		currSlotString = table.concat(slot3, ","),
		alreadyGotoWorkStrategy = slot4,
		alreadyGotoWork = slot2,
		callback = function (slot0)
			slot0:requestSetFormation(slot0.requestSetFormation, table.concat(slot0, ","))

			return 
		end
	})

	return 
end
slot0.getInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetPlayerFormationInfo",
		moduleName = "Universenumone",
		methodData = {
			PlayerAttrObj:getPlayerAttrByName("PlayerId")
		},
		successCallback = function (slot0)
			slot0.oldFormation = slot0 or {}

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestSetFormation = function (slot0, slot1, slot2)
	slot0.socketRequest(slot0, {
		methodName = "UpdatePreFightInfo",
		moduleName = "Universenumone",
		methodData = {
			slot1,
			slot2
		},
		successCallback = function (slot0)
			slot0.oldFormation = slot0.Data or {}

			dump(slot0.oldFormation, "ValueValue")
			slot0:refreshUI()
			ui.showFlashView(TR("布置成功"))

			if slot0.callback then
				slot0.callback(slot0.Data)
			end

			return 
		end
	})

	return 
end

return slot0
