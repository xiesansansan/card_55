slot0 = class("CacheWuxue", {})
slot0.ctor = function (slot0)
	slot0.reset(slot0)

	return 
end
slot0.reset = function (slot0)
	slot0.mWuxueList = {}

	return 
end
slot0.setWuxueList = function (slot0, slot1)
	slot0.mWuxueList = slot1

	return 
end
slot0.getWuxueList = function (slot0)
	return slot0.mWuxueList
end
slot0.getUnbattaleWuxueList = function (slot0)
	slot1 = {}

	for slot5, slot6 in pairs(slot0.mWuxueList) do
		if not slot6.IsCombat then
			table.insert(slot1, slot6)
		end
	end

	return slot1
end
slot0.getbattaleWuxueList = function (slot0)
	slot1 = {}

	for slot5, slot6 in pairs(slot0.mWuxueList) do
		if slot6.IsCombat then
			table.insert(slot1, slot6)
		end
	end

	return slot1
end
slot0.modifyWuxue = function (slot0, slot1)
	slot2 = slot1.EntityId

	if not slot1 or not Utility.isEntityId(slot2) then
		return 
	end

	slot3 = false

	for slot7, slot8 in ipairs(slot0.mWuxueList) do
		if slot8.EntityId == slot1.EntityId then
			slot3 = true
			slot0.mWuxueList[slot7] = slot1

			break
		end
	end

	if not slot3 then
		table.insert(slot0.mWuxueList, slot1)
	end

	return 
end
slot0.modifyWuxueList = function (slot0, slot1)
	for slot5, slot6 in pairs(slot1) do
		slot0.modifyWuxue(slot0, slot6)
	end

	return 
end
slot0.deleteItemById = function (slot0, slot1)
	slot2 = nil

	for slot6, slot7 in ipairs(slot0.mWuxueList) do
		if slot7.EntityId == slot1 then
			slot2 = slot6

			break
		end
	end

	if slot2 then
		table.remove(slot0.mWuxueList, slot2)
	end

	return 
end
slot0.getKuangfuInfoByHeroModelID = function (slot0, slot1)
	if HeroObj:getItem(slot1).WuxueInfo then
		return slot2.WuxueInfo
	end

	return nil
end
slot0.getWuxueInfoByEntityId = function (slot0, slot1)
	for slot5, slot6 in pairs(slot0.mWuxueList) do
		if slot6.EntityId == slot1 then
			return slot6
		end
	end

	return nil
end
slot0.getCount = function (slot0, slot1)
	slot2 = 0

	for slot6, slot7 in pairs(slot0.mWuxueList) do
		if slot7.ModelId == slot1 then
			slot2 = slot2 + 1
		end
	end

	return slot2
end

return slot0
