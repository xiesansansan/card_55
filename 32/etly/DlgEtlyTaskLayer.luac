slot0 = class("DlgEtlyTaskLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 151)
	})
end)
slot0.uiTree = {
	{
		name = "untitled5",
		cType = "MsgBoxBg",
		params = {
			image = "tc_1.png",
			posApt = 1,
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 618,
				height = 520
			},
			titleText = TR("墓窟成就")
		},
		children = {
			{
				name = "untitled6",
				cType = "Scale9Sprite",
				params = {
					image = "c_94.png",
					pos = {
						x = 308.33,
						y = 249.97
					},
					size = {
						width = 560,
						height = 436
					}
				},
				children = {}
			},
			{
				name = "mTableView",
				cType = "TableView",
				params = {
					numOfCellsFunc = "onNumOfCellFunc",
					isVertical = true,
					cellUpdateFunc = "onCellUpdateFunc",
					cellSizeFunc = "onCellSizeFunc",
					cellFillFunc = "onCellFillFunc",
					pos = {
						x = 34.28,
						y = 34.25
					},
					size = {
						width = 550,
						height = 430
					}
				},
				children = {
					{
						name = "taskNode",
						cType = "TemplateNode",
						params = {
							pos = {
								x = 0,
								y = -134
							}
						},
						children = {
							{
								name = "untitled9",
								cType = "Scale9Sprite",
								params = {
									image = "c_95.png",
									anchor = {
										x = 0,
										y = 0
									},
									pos = {
										x = 0,
										y = 0
									},
									size = {
										width = 546,
										height = 134
									}
								},
								children = {}
							},
							{
								name = "untitled10",
								cType = "Label",
								params = {
									childName = "titleLabel",
									anchor = {
										x = 0,
										y = 0.5
									},
									color = {
										g = 255,
										r = 255,
										b = 255
									},
									pos = {
										x = 10.65,
										y = 116.22
									},
									text = TR("通关第一章")
								},
								children = {}
							},
							{
								name = "untitled11",
								cType = "ListView",
								params = {
									childName = "rewardListView",
									direction = false,
									pos = {
										x = 9.26,
										y = 7.56
									},
									size = {
										width = 300,
										height = 90
									}
								},
								children = {
									{
										name = "rewardLayout",
										cType = "Layout",
										custom = {
											{
												value = "untitled13-initParams",
												name = "cardInfo",
												type = "string"
											}
										},
										params = {
											size = {
												width = 90,
												height = 90
											}
										},
										children = {
											{
												name = "untitled13",
												cType = "CardNode",
												params = {
													allowClick = true,
													initParams = {},
													pos = {
														x = 45,
														y = 45
													}
												},
												children = {}
											}
										}
									}
								}
							},
							{
								name = "untitled14",
								cType = "Sprite",
								params = {
									image = "c_55.png",
									childName = "gotSprite",
									pos = {
										x = 470.72,
										y = 54.17
									}
								},
								children = {}
							},
							{
								name = "untitled15",
								cType = "Button",
								params = {
									image = "c_27.png",
									childName = "getBtn",
									pos = {
										x = 471.85,
										y = 53.33
									},
									titleText = TR("领 取")
								},
								children = {}
							},
							{
								name = "untitled16",
								cType = "Label",
								params = {
									text = "(0/0)",
									isRichText = true,
									childName = "progress",
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 476.2,
										y = 90.44
									}
								},
								children = {}
							}
						}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mRewardList = slot1.rewardList or {}
	slot0.mNodeIdList = slot1.nodeIdList or {}
	slot0.mCallback = slot1.callback
	slot0.mData = {}

	slot0.getData(slot0)
	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.mTableView:reloadData()

	return 
end
slot0.getStatus = function (slot0, slot1)
	slot2 = -1
	slot3 = false

	for slot7, slot8 in ipairs(slot0.mNodeIdList) do
		if slot8.nodeId == slot1 then
			slot3 = slot8.passed

			break
		end
	end

	return (slot3 and ((not table.indexof(slot0.mRewardList, slot1) and 1) or -1)) or 0
end
slot0.getData = function (slot0)
	slot0.mData = {}

	for slot4, slot5 in pairs(EtlyNodeFirstrewardConfig.items) do
		table.insert(slot0.mData, clone(slot5))
	end

	for slot4, slot5 in pairs(slot0.mData) do
		slot5.isDrawedFirstReward = slot0.getStatus(slot0, slot5.nodeModelId)
	end

	table.sort(slot0.mData, function (slot0, slot1)
		if slot0.isDrawedFirstReward ~= slot1.isDrawedFirstReward then
			return slot1.isDrawedFirstReward < slot0.isDrawedFirstReward
		else
			return slot0.nodeModelId < slot1.nodeModelId
		end

		return 
	end)

	return 
end
slot0.onCellSizeFunc = function (slot0, slot1, slot2)
	return 550, 134
end
slot0.onNumOfCellFunc = function (slot0, slot1)
	return #slot0.mData
end
slot0.onCellFillFunc = function (slot0, slot1, slot2)
	slot3 = slot0.createLayoutTemplateNode(slot0, "taskNode")
	slot3.refreshCell = function (slot0, slot1)
		slot4 = #Utility.analysisStrResList(slot0.mData[slot1 + 1].reward)*110

		if 3 <= #Utility.analysisStrResList(slot0.mData[slot1 + 1].reward) then
			slot4 = 300
		end

		slot0.rewardListView:setContentSize(cc.size(slot4, 100))
		slot0.rewardListView:removeAllChildren()

		for slot8, slot9 in ipairs(slot3) do
			slot0.rewardListView:pushBackCustomItem(slot0:createLayoutTemplateNode("rewardLayout", {
				cardInfo = {
					showAttrs = {
						Enums.CardShowAttr.eNum
					},
					instanceData = {
						modelId = slot9.resourceId,
						num = slot9.num
					}
				}
			}))
		end

		slot0.titleLabel:setString(TR("通关至%s层", Utility.getChineseNum(EtlyNodeModel.items[slot2.nodeModelId].showNumC)))

		slot6, slot7 = slot5(slot2.nodeModelId)

		slot0.progress:setString(string.format("%s(%s/%s)", (slot7 <= slot6 and "#627f22") or "#d31616", slot6, slot7))
		slot0.getBtn:setVisible(true)
		slot0.gotSprite:setVisible(false)

		if slot0:getStatus(slot2.nodeModelId) == 0 then
			slot0.getBtn:setEnabled(false)
		elseif slot8 == -1 then
			slot0.getBtn:setVisible(false)
			slot0.gotSprite:setVisible(true)
		else
			slot0.getBtn:setEnabled(true)
		end

		slot0.getBtn:setClickAction(function ()
			slot0:requestReceiveFirstReward(slot1.nodeModelId)

			return 
		end)

		return 
	end

	slot3.refreshCell(slot3, slot2)
	slot3.setPositionY(slot3, 0)
	slot1.addChild(slot1, slot3)

	slot1.layout = slot3

	return 
end
slot0.onCellUpdateFunc = function (slot0, slot1, slot2)
	slot1.layout:refreshCell(slot2)

	return 
end
slot0.requestReceiveFirstReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "ReceiveFirstReward",
		moduleName = "EtlyInfo",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			if slot0.mCallback then
				slot0.mCallback(slot0.BaseInfo.FristRewardStr)
			end

			slot0.mRewardList = slot0.BaseInfo.FristRewardStr

			slot0:getData()
			slot0.mTableView:reloadData()

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward(slot0)
			end

			return 
		end
	})

	return 
end

return slot0
