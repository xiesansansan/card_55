slot0 = class("DlgFightOneKeyRewardLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			image = "tc_2.png",
			posApt = 1,
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 550,
				height = 550
			},
			titleText = TR("扫荡")
		},
		children = {
			{
				name = "mOneKeyBattleBtn",
				cType = "Button",
				params = {
					image = "c_32.png",
					clickAction = "onClickStopAddBtn",
					pos = {
						x = 275,
						y = 53
					},
					titleText = TR("停止")
				},
				children = {}
			},
			{
				name = "mListView",
				cType = "ListView",
				params = {
					direction = true,
					anchor = {
						x = 0.5,
						y = 0.5
					},
					pos = {
						x = 276,
						y = 291
					},
					size = {
						width = 470,
						height = 427.29
					}
				},
				children = {
					{
						name = "RewardLayout",
						cType = "Layout",
						custom = {
							{
								value = "untitled7-text",
								name = "text",
								type = "string"
							},
							{
								value = "untitled7-pos",
								name = "pos",
								type = "string"
							}
						},
						params = {
							size = {
								width = 470,
								height = 140
							}
						},
						children = {
							{
								name = "untitled7",
								cType = "Label",
								params = {
									fontSize = 20,
									color = {
										g = 49,
										r = 49,
										b = 49
									},
									pos = {
										x = 234.62,
										y = 118.9
									},
									text = TR("关卡")
								},
								children = {
									{
										name = "untitled17",
										cType = "Sprite",
										params = {
											image = "c_36.png",
											pos = {
												x = -120,
												y = 10
											}
										},
										children = {}
									},
									{
										name = "untitled18",
										cType = "Sprite",
										params = {
											reverse = 1,
											image = "c_36.png",
											pos = {
												x = 156,
												y = 10
											}
										},
										children = {}
									}
								}
							},
							{
								name = "CardTemplateNode",
								cType = "TemplateNode",
								custom = {
									{
										value = "untitled10-initParams",
										name = "head",
										type = "string"
									}
								},
								params = {
									delayInit = true,
									pos = {
										x = 34.98,
										y = 3.6
									},
									size = {
										width = 100,
										height = 100
									}
								},
								children = {
									{
										name = "untitled10",
										cType = "CardNode",
										params = {
											allowClick = true,
											initParams = {},
											pos = {
												x = 50,
												y = 50
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "FinishLayout",
						cType = "Layout",
						params = {
							pos = {
								z = 0,
								x = 0,
								y = 164
							},
							size = {
								width = 470,
								height = 140
							}
						},
						children = {
							{
								name = "untitled11",
								cType = "Sprite",
								params = {
									image = "dgjz_14.png",
									pos = {
										x = 235,
										y = 70
									}
								},
								children = {}
							}
						}
					},
					{
						name = "RewardTotalLayout",
						cType = "Layout",
						params = {
							pos = {
								z = 0,
								x = 3.36,
								y = -24.06
							},
							size = {
								width = 470,
								height = 140
							}
						},
						children = {
							{
								name = "untitled21",
								cType = "Label",
								params = {
									fontSize = 20,
									color = {
										g = 49,
										r = 49,
										b = 49
									},
									pos = {
										x = 235.65,
										y = 118.45
									},
									text = TR("累计获得")
								},
								children = {
									{
										name = "untitled22",
										cType = "Sprite",
										params = {
											image = "c_36.png",
											pos = {
												x = -101,
												y = 10
											}
										},
										children = {}
									},
									{
										name = "untitled23",
										cType = "Sprite",
										params = {
											reverse = 1,
											image = "c_36.png",
											pos = {
												x = 182,
												y = 10
											}
										},
										children = {}
									}
								}
							},
							{
								name = "untitled24",
								cType = "ListView",
								params = {
									childName = "rewardList",
									direction = false,
									pos = {
										x = 27.57,
										y = -7.65
									},
									size = {
										width = 415.71,
										height = 111.78
									}
								},
								children = {
									{
										name = "RewardItem",
										cType = "Layout",
										custom = {
											{
												value = "untitled26-initParams",
												name = "head",
												type = "string"
											}
										},
										params = {
											pos = {
												z = 0,
												x = 0.49,
												y = 21.55
											},
											size = {
												width = 91.89,
												height = 115.75
											}
										},
										children = {
											{
												name = "untitled26",
												cType = "CardNode",
												params = {
													allowClick = true,
													initParams = {},
													pos = {
														x = 45.27,
														y = 74.41
													}
												},
												children = {}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0, {
		swallow = true
	})

	slot0.isStop = false

	if slot1.rewardList.PerBaseGetGameResourceList then
		slot0.mRewardList = slot1.rewardList.PerBaseGetGameResourceList
	elseif slot1.rewardList.BaseGetGameResourceList and slot1.rewardList.RewardList then
		slot0.mRewardList = slot1.rewardList
		slot0.mInEtly = true
	end

	slot0.titleList = slot1.titleList
	slot0.mShowTotalList = slot1.showTotalList
	slot0.mNodeIds = {}
	slot0.mFightNum = 0

	slot0.getNodeIdsByIndex(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.getNodeIdsByIndex = function (slot0)
	if slot0.mInEtly then
		for slot4, slot5 in pairs(slot0.mRewardList.RewardList) do
			table.insert(slot0.mNodeIds, slot5.NodeId)
		end
	else
		for slot4, slot5 in pairs(slot0.mRewardList) do
			table.insert(slot0.mNodeIds, slot4)
		end
	end

	table.sort(slot0.mNodeIds, function (slot0, slot1)
		return slot0 < slot1
	end)

	slot0.mFightNum = #slot0.mNodeIds

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.createRewardList(slot0)

	return 
end
slot0.createRewardList = function (slot0)
	slot0.mCount = 1
	slot1 = nil
	slot1 = Utility.schedule(slot0.mListView, function ()
		slot0:getNodeIdData(slot0)
		slot0:addLayout(slot0.mCount)

		if slot0.mFightNum == slot0.mCount or slot0.isStop then
			slot0:stopAction(slot0.stopAction)

			if not slot0.mShowTotalList then
				slot0.mListView:pushBackCustomItem(slot0:createLayoutTemplateNode("FinishLayout", {
					index = orderIndex
				}))
			elseif slot0.mInEtly then
				slot1 = {}

				for slot5, slot6 in pairs(slot0.mRewardList.BaseGetGameResourceList) do
					for slot10, slot11 in pairs(slot6) do
						for slot15, slot16 in pairs(slot11) do
							if not slot1[slot16.ResourceId] then
								slot1[slot16.ResourceId] = slot16.Num
							else
								slot1[slot16.ResourceId] = slot1[slot16.ResourceId] + slot16.Num
							end
						end
					end
				end

				slot0.mListView:pushBackCustomItem(slot2)

				for slot6, slot7 in pairs(slot1) do
					slot2.rewardList:pushBackCustomItem(slot0:createLayoutTemplateNode("RewardItem", {
						head = {
							cardInfo = {
								modelId = slot6,
								num = slot7
							},
							showAttrs = {
								Enums.CardShowAttr.eBorder,
								Enums.CardShowAttr.eName,
								Enums.CardShowAttr.eNum
							}
						}
					}))
				end
			end

			slot0.mOneKeyBattleBtn:setVisible(false)
			slot0.mListView:jumpToBottom()
		end

		slot0.mCount = slot0.mCount + 1

		return 
	end, 1)

	return 
end
slot0.getNodeIdData = function (slot0, slot1)
	slot0.mData = {}

	if slot0.mInEtly then
		slot2 = {}

		for slot6, slot7 in pairs(slot0.mRewardList.RewardList) do
			if slot7.NodeId == slot1 then
				slot2 = slot7.Resources
			end
		end

		slot0.mData = Utility.analysisStrResList(slot2)
	else
		slot2 = {}

		for slot6, slot7 in pairs(slot0.mRewardList) do
			if slot6 == slot1 then
				slot2 = slot7
			end
		end

		for slot6, slot7 in pairs(slot2) do
			for slot11, slot12 in pairs(slot7) do
				for slot16, slot17 in pairs(slot12) do
					table.insert(slot0.mData, slot17)
				end
			end
		end
	end

	return 
end
slot0.addLayout = function (slot0, slot1)
	slot3 = slot0.createLayoutTemplateNode(slot0, "RewardLayout", {
		text = (slot0.titleList and slot0.titleList[slot1]) or TR("第%d战", slot1),
		pos = cc.p(235, math.ceil(#slot0.mData/4)*140 - 25)
	})

	slot3.setContentSize(slot3, cc.size(470, math.ceil(#slot0.mData/4)*140 + 10))
	slot0.mListView:pushBackCustomItem(slot3)
	slot0.mListView:jumpToBottom()

	slot0.mTemplateNodeList = {}
	slot4 = 20
	slot5 = math.ceil(#slot0.mData/4)*140 - 140
	slot6 = 110
	slot7 = -110

	for slot11, slot12 in pairs(slot0.mData) do
		slot13 = slot0.createLayoutTemplateNode(slot0, "CardTemplateNode", {
			head = {
				cardInfo = {
					modelId = slot12.ResourceId or slot12.resourceId,
					num = slot12.Num or slot12.num
				},
				showAttrs = {
					Enums.CardShowAttr.eBorder,
					Enums.CardShowAttr.eName,
					Enums.CardShowAttr.eNum
				}
			}
		})

		slot13.setPosition(slot13, slot4 + (slot11 - 1)%4*slot6, slot5 + math.floor((slot11 - 1)/4)*slot7)
		slot3.addChild(slot3, slot13)

		slot0.mTemplateNodeList[slot11] = slot13

		slot13.setVisible(slot13, false)
	end

	slot8 = 1

	Utility.schedule(slot3, function ()
		if #slot1.mTemplateNodeList < slot0 then
			slot2:stopAllActions()

			return 
		end

		slot1.mTemplateNodeList[].setVisible(slot0, true)
		slot1.mTemplateNodeList[].setScale(slot0, 1.3)
		slot1.mTemplateNodeList[]:runAction(cc.Sequence:create({
			cc.ScaleTo:create(0.06666666666666667, 1)
		}))

		slot0 = slot0 + 1

		return 
	end, math.min(#slot0.mTemplateNodeList/1, 0.05))

	return 
end
slot0.onClickStopAddBtn = function (slot0)
	slot0.isStop = true

	return 
end

return slot0
