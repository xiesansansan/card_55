slot0 = class("ExperienceLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled29",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "ll_2.png",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled58",
		cType = "Node",
		params = {
			posApt = 1,
			isLiuHai = true,
			pos = {
				x = 0,
				y = 320
			}
		},
		children = {
			{
				name = "mFunctionListView",
				cType = "ListView",
				params = {
					sizeApt = 3,
					direction = false,
					swallowTouch = false,
					posApt = 1,
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 0,
						y = 0
					},
					size = {
						width = 1136,
						height = 480
					}
				},
				children = {
					{
						name = "mFunctionLayout",
						cType = "Layout",
						custom = {
							{
								value = "untitled33-text",
								name = "titleStr",
								type = "string"
							},
							{
								value = "untitled52-text",
								name = "openStr",
								type = "string"
							},
							{
								value = "untitled39-text",
								name = "desStr",
								type = "string"
							},
							{
								value = "untitled40-text",
								name = "lastTimesStr",
								type = "string"
							},
							{
								value = "untitled50-hide",
								name = "notOpen",
								type = "string"
							},
							{
								value = "untitled32-image",
								name = "bgImg",
								type = "string"
							},
							{
								value = "untitled32-normalGray",
								name = "isGray",
								type = "string"
							},
							{
								value = "untitled47-moduleId",
								name = "moduleId",
								type = "string"
							},
							{
								value = "untitled54-hide",
								name = "noDouble",
								type = "string"
							},
							{
								value = "untitled39-fontSize",
								name = "desFontSize",
								type = "string"
							},
							{
								value = "untitled57-dataFile",
								name = "effectName",
								type = "string"
							},
							{
								value = "untitled57-hide",
								name = "hideEffect",
								type = "string"
							}
						},
						params = {
							scaleApt = 4,
							sizeApt = 2,
							pos = {
								x = 0,
								y = 10
							},
							size = {
								width = 300,
								height = 480
							}
						},
						children = {
							{
								name = "untitled53",
								cType = "Node",
								params = {
									scaleApt = 2,
									childName = "adapterNode",
									pos = {
										x = 0,
										y = 0
									}
								},
								children = {
									{
										name = "untitled31",
										cType = "Button",
										params = {
											childName = "btn",
											image = "c_pure.png",
											swallowTouch = false,
											pressedAction = false,
											clickAction = "onFunctionEnterAction",
											pos = {
												x = 150,
												y = 250
											},
											size = {
												width = 280,
												height = 480
											}
										},
										children = {}
									},
									{
										name = "untitled32",
										cType = "Sprite",
										params = {
											normalGray = false,
											image = "ll_4.png",
											childName = "bgSprite",
											pos = {
												x = 150,
												y = 250
											}
										},
										children = {
											{
												name = "untitled47",
												cType = "RedDot",
												params = {
													childName = "redDot",
													moduleId = 1,
													offset = {
														x = 0.85,
														y = 0.9
													},
													pos = {
														z = 0,
														x = 72.72,
														y = 373.52
													}
												},
												children = {}
											},
											{
												name = "untitled57",
												cType = "Effect",
												params = {
													hide = true,
													childName = "effect",
													dataFile = "effect_ui_lilian_wuxinghuanjing",
													pos = {
														x = 141,
														y = 239.5
													}
												},
												children = {}
											}
										}
									},
									{
										name = "untitled40",
										cType = "Label",
										params = {
											fontSize = 20,
											hide = true,
											align = 2,
											childName = "lastTimesLabel",
											anchor = {
												x = 0.5,
												y = 0.5
											},
											pos = {
												x = 149,
												y = 95.43
											},
											text = TR("剩余次数: 5")
										},
										children = {}
									},
									{
										name = "untitled33",
										cType = "Label",
										params = {
											fontSize = 28,
											childName = "titleLabel",
											align = 1,
											pos = {
												x = 149,
												y = 425.77
											},
											text = TR("标题")
										},
										children = {}
									},
									{
										name = "untitled39",
										cType = "Label",
										params = {
											fontSize = 22,
											childName = "desLabel",
											align = 1,
											valign = 1,
											pos = {
												x = 149,
												y = 58
											},
											size = {
												width = 250,
												height = 48
											},
											text = TR("介绍")
										},
										children = {}
									},
									{
										name = "untitled50",
										cType = "Node",
										params = {
											childName = "openNode",
											hide = true,
											pos = {
												x = 147.82,
												y = 254.12
											}
										},
										children = {
											{
												name = "untitled52",
												cType = "Label",
												params = {
													childName = "openLv",
													anchor = {
														x = 0.5,
														y = 1
													},
													color = {
														g = 255,
														r = 255,
														b = 255
													},
													outlineColor = {
														g = 37,
														r = 37,
														b = 37
													},
													pos = {
														x = 0,
														y = -14
													},
													text = TR("45级开放")
												},
												children = {}
											},
											{
												name = "untitled56",
												cType = "Sprite",
												params = {
													image = "c_21.png",
													pos = {
														x = 0,
														y = 0
													}
												},
												children = {}
											}
										}
									},
									{
										name = "untitled54",
										cType = "Sprite",
										params = {
											childName = "doubleSprite",
											image = "ll_13.png",
											hide = true,
											pos = {
												x = 198.35,
												y = 132.1
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	{
		name = "untitled43",
		cType = "Button",
		params = {
			clickAction = "onCloseAction",
			posApt = 1,
			scaleApt = 2,
			image = "c_1.png",
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled44",
				cType = "Sprite",
				params = {
					image = "ll_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = -23.88,
						y = 27.91
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled55",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.fromNavigate = slot1.fromNavigate
	slot0.viewPercent = slot1.viewPercent or 0

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.getRestoreData = function (slot0)
	slot1 = slot0.mFunctionListView:getInnerContainer()
	slot0.viewPercent = (-cc.p(slot1.getPosition(slot1)).x*100)/(slot1.getContentSize(slot1).width - slot0.mFunctionListView:getContentSize().width)

	return {
		fromNavigate = slot0.fromNavigate,
		viewPercent = slot0.viewPercent
	}
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "mFunctionListView" then
			slot1.size.width = (LocalData:getCacheData("liuhaiWidth") or 0) - 1136
		end

		return 
	end)

	slot0.mBtnList = {}
	slot0.subConfig = {
		{
			eventId = 201101,
			effect = "effect_ui_lilian_wuxinghuanjing",
			image = "ll_10.png",
			moduleId = ModuleSub.eSwing,
			describe = TR("奖励主角修炼相关道具")
		},
		{
			eventId = 201301,
			image = "ll_6.png",
			moduleId = ModuleSub.eElite,
			describe = TR("奖励主角升级经验、侠客训练材料")
		},
		{
			image = "ll_5.png",
			effect = "effect_ui_lilian_jianghujishi",
			eventId = 200401,
			moduleId = ModuleSub.eJhxs,
			describe = TR("奖励铜钱、干粮、雪银")
		},
		{
			eventId = 200601,
			effect = "effect_ui_lilian_baizhuanglunjian",
			image = "ll_7.png",
			moduleId = ModuleSub.eExpedition,
			describe = TR("奖励铜钱、英雄帖")
		},
		{
			image = "ll_9.png",
			effect = "effect_ui_lilian_gudujianzhong",
			moduleId = ModuleSub.eEtly,
			describe = TR("奖励专属武器培养材料")
		}
	}

	if ModuleSub.eTeamCopy and TeamCopyNodeModel and Utility.moduleIsOpenInServer(ModuleSub.eTeamCopy) then
		table.insert(slot0.subConfig, {
			image = "ll_12.png",
			effect = "effect_ui_lilian_quncequnli",
			moduleId = ModuleSub.eTeamCopy,
			describe = TR("奖励武学相关碎片、材料")
		})
	end

	table.sort(slot0.subConfig, function (slot0, slot1)
		return ModuleSubConfig.items[slot0.moduleId].openLv < ModuleSubConfig.items[slot1.moduleId].openLv
	end)

	slot1 = {}
	slot2 = PlayerAttrObj:getPlayerAttrByName("Lv")

	for slot6, slot7 in ipairs(slot0.subConfig) do
		slot10 = slot0.createLayoutTemplateNode(slot0, "mFunctionLayout", {
			lastTimesStr = "",
			moduleId = slot7.redDot or slot7.moduleId,
			bgImg = slot7.image,
			isGray = slot2 < ModuleSubConfig.items[slot7.moduleId].openLv,
			titleStr = ModuleSubConfig.items[slot7.moduleId].name,
			openStr = TR("%d级开放", ModuleSubConfig.items[slot7.moduleId].openLv),
			desStr = slot7.describe,
			desFontSize = 22,
			notOpen = ModuleSubConfig.items[slot7.moduleId].openLv <= slot2,
			noDouble = not PlayerAttrObj:isModuleDoubleIncome(slot7.moduleId),
			hideEffect = (not slot7.effect and true) or false,
			effectName = slot7.effect or "effect_siwang"
		})
		slot10.moduleId = slot7.moduleId
		slot10.adapterNode.btn.moduleId = slot7.moduleId
		slot0.mBtnList[slot10.moduleId] = {
			btn = slot10.adapterNode.btn,
			index = slot6
		}

		slot10.adapterNode:setPosition(1800, 0)
		slot0.mFunctionListView:pushBackCustomItem(slot10)
		table.insert(slot1, slot10.adapterNode)
	end

	slot3 = 1
	slot4 = nil
	slot4 = Utility.schedule(slot0, function ()
		if not slot0[slot1] then
			slot2:stopAction(slot3)

			return 
		end

		slot0.runAction(slot0, cc.Sequence:create({
			cc.EaseBackOut:create(cc.MoveTo:create(1.2, cc.p(0, 0))),
			cc.CallFunc:create(function ()
				if slot0 == #slot1 then
					slot2:executeGuide()
				end

				return 
			end)
		}))

		slot1 = slot1 + 1

		return 
	end, 0.1)
	slot5, slot6 = Guide.manager:getGuideInfo()

	if slot6 then
		slot0.mFunctionListView:setTouchEnabled(false)

		slot7 = 0

		for slot11, slot12 in ipairs(slot0.subConfig) do
			if slot12.eventId == slot6 then
				slot7 = slot11

				break
			end
		end

		if slot7 == 1 then
			slot7 = 0
		end

		slot0.mFunctionListView:jumpToPercentHorizontal((slot7*100)/#slot0.subConfig)
	elseif slot0.viewPercent and type(slot0.viewPercent) == "number" then
		slot0.viewPercent = math.max(0, math.min(slot0.viewPercent, 100))

		slot0.mFunctionListView:jumpToPercentHorizontal(slot0.viewPercent)
	end

	return 
end
slot0.onCloseAction = function (slot0)
	if slot0.fromNavigate then
		display.getRunningScene():jumpToNavigate(Enums.Navigate.eHome)
	else
		LayerManager.removeLayer(slot0)
	end

	return 
end
slot0.onFunctionEnterAction = function (slot0, slot1)
	slot0.clickModuleId(slot0, tonumber(slot1.moduleId))

	return 
end
slot0.clickModuleId = function (slot0, slot1)
	if Utility.moduleIsOpen(slot1, true) == false then
		return 
	end

	LayerManager.showModuleLayer(slot1)

	return 
end
slot0.getOpenLvText = function (slot0, slot1)
	return TR("%s级开启", ModuleSubConfig.items[slot1 or 0] or {}.openLv)
end
slot0.onEnterTransitionFinish = function (slot0)
	return 
end
slot0.executeGuide = function (slot0)
	Guide.manager:exeGuideList({
		[200401] = {
			saveStep = true,
			overClose = true,
			clickNode = slot0.mBtnList[ModuleSub.eJhxs].btn
		},
		[200601] = {
			clickNode = slot0.mBtnList[ModuleSub.eExpedition].btn
		},
		[201101] = {
			saveStep = true,
			overClose = true,
			clickNode = slot0.mBtnList[ModuleSub.eSwing].btn
		},
		[201301] = {
			saveStep = true,
			overClose = true,
			clickNode = slot0.mBtnList[ModuleSub.eElite].btn
		}
	})

	return 
end

return slot0
