slot0 = class("ActivityAdvertLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 128)
	})
end)
slot0.uiTree = {
	{
		name = "bgSprite",
		cType = "Sprite",
		params = {
			posApt = 1,
			image = "hf_1.png",
			scaleApt = 2,
			pos = {
				x = 568,
				y = 335
			}
		},
		children = {
			{
				name = "untitled2",
				cType = "Button",
				params = {
					image = "c_28.png",
					clickAction = "onClose",
					pos = {
						x = 865.46,
						y = 357.96
					}
				},
				children = {}
			},
			{
				name = "untitled3",
				cType = "Button",
				params = {
					image = "tb_gn_121.png",
					clickAction = "onSkillClick",
					pos = {
						x = 155.33,
						y = 18.6
					}
				},
				children = {}
			},
			{
				name = "untitled4",
				cType = "Checkbox",
				params = {
					normalImage = "c_43.png",
					selectImage = "c_44.png",
					callback = "onNoTipToday",
					pos = {
						x = 494.87,
						y = 14.59
					}
				},
				children = {}
			},
			{
				name = "untitled5",
				cType = "Label",
				params = {
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 515,
						y = 15.57
					},
					text = TR("今日登陆后不再显示")
				},
				children = {}
			},
			{
				name = "quality",
				cType = "Sprite",
				params = {
					zOrder = 1,
					image = "xkxx_19.png",
					pos = {
						x = 158.56,
						y = 345.85
					}
				},
				children = {
					{
						name = "untitled7",
						cType = "Sprite",
						params = {
							rotationAngle = 90,
							image = "c_11.png",
							scaleX = 0.3,
							pos = {
								x = 4,
								y = 155.77
							}
						},
						children = {}
					},
					{
						name = "untitled8",
						cType = "Label",
						params = {
							fontSize = 26,
							isRichText = true,
							childName = "name",
							anchor = {
								x = 0.5,
								y = 1
							},
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = -9,
								y = 209.96
							},
							size = {
								width = 30,
								height = 0
							},
							text = TR("杨过")
						},
						children = {}
					}
				}
			},
			{
				name = "skillTemplate",
				cType = "TemplateNode",
				custom = {
					{
						value = "untitled10-image",
						name = "image",
						type = "string"
					},
					{
						value = "untitled10-clickAction",
						name = "clickAction",
						type = "string"
					}
				},
				params = {
					pos = {
						x = 492.52,
						y = 53.36
					},
					size = {
						width = 100,
						height = 100
					}
				},
				children = {
					{
						name = "untitled10",
						cType = "Button",
						params = {
							image = "sk_100001.png",
							clickAction = "onClose",
							pos = {
								x = 50,
								y = 50
							}
						},
						children = {
							{
								name = "untitled14",
								cType = "Sprite",
								params = {
									image = "xkxx_80.png",
									pos = {
										x = 0,
										y = 0
									}
								},
								children = {}
							},
							{
								name = "untitled11",
								cType = "Sprite",
								params = {
									image = "xkxx_83.png",
									pos = {
										x = 0,
										y = -35.31
									}
								},
								children = {}
							},
							{
								name = "untitled13",
								cType = "Label",
								params = {
									text = "1",
									pos = {
										x = 0,
										y = -35
									}
								},
								children = {}
							}
						}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mHeroModelId = (slot1 and slot1.heroModelId) or 12012101

	slot0.super.ctor(slot0, {
		swallow = true
	})

	slot0.mCallback = slot1.callback

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	if HeroModel.items[slot0.mHeroModelId].drawingPicB ~= "" and cc.FileUtils:getInstance():isFileExist(slot1.drawingPicB .. ".skel") then
		slot2 = UIWrap.newControl("Effect", {
			loop = true,
			animation = "animation",
			scale = 0.4,
			dataFile = slot1.drawingPicB
		})

		slot2.setPosition(slot2, cc.p(300, 0))
		slot0.bgSprite:addChild(slot2)
		slot0.quality:setTexture(({
			[6.0] = "xkxx_16.png",
			[15.0] = "xkxx_19.png",
			[10.0] = "xkxx_17.png",
			[18.0] = "xkxx_20.png",
			[13.0] = "xkxx_18.png"
		})[slot1.quality])
		slot0.quality.name:setString(slot1.name)
		Utility.addEffectToHeroQualityImage(slot0.quality, slot0.mHeroModelId)
	end

	table.insert(slot2, {
		needStep = 0,
		skillId = tonumber(slot1.skillAttackId)
	})

	for slot6, slot7 in ipairs(string.splitBySep(slot1.skillId, ",")) do
		table.insert(slot2, {
			skillId = tonumber(string.splitBySep(slot7, "|")[1]),
			needStep = tonumber(string.splitBySep(slot7, "|")[2])
		})
	end

	for slot6, slot7 in ipairs(slot2) do
		slot9 = slot0.createLayoutTemplateNode(slot0, "skillTemplate", {
			image = SkillModel.items[slot7.skillId].skillPic .. ".png",
			clickAction = function ()
				LayerManager.addLayer({
					cleanUp = false,
					name = "home.skillDetialLayer",
					data = {
						lv = 1,
						skillId = slot0.skillId
					}
				})

				return 
			end
		})

		slot9.setPosition(slot9, cc.p((slot6 - 1)*100 + 470, 70))
		slot0.bgSprite:addChild(slot9)
	end

	return 
end
slot0.onClose = function (slot0)
	if slot0.mCallback then
		slot0.mCallback()
	end

	LayerManager.removeLayer(slot0)

	return 
end
slot0.onSkillClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.FashionSkillShowLayer",
		data = {
			fashionModelId = slot0.mHeroModelId
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onNoTipToday = function (slot0, slot1)
	LocalData:saveGameDataValue("ActivityAdvert", (slot1.isSelected(slot1) and Player:getCurrentTime()) or 0)

	return 
end

return slot0
