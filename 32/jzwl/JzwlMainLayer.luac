slot0 = class("JzwlMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "Sprite",
		params = {
			childName = "bgSprite",
			posApt = 1,
			scaleApt = 2,
			isFullScale = true,
			image = "jzwl_56.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "guildNode",
				cType = "TemplateNode",
				params = {
					anchor = {
						x = 0.5,
						y = 0.5
					},
					pos = {
						x = 361.68,
						y = 216.04
					},
					size = {
						width = 180,
						height = 180
					}
				},
				children = {
					{
						name = "untitled22",
						cType = "Sprite",
						params = {
							image = "jzwl_60.png",
							childName = "zyBg",
							pos = {
								x = 102,
								y = 146
							}
						},
						children = {
							{
								name = "untitled23",
								cType = "ProgressBar",
								params = {
									maxValue = 100,
									currValue = 100,
									normalImage = "jzwl_61.png",
									childName = "zyProgress",
									pos = {
										x = 85.5,
										y = 12.5
									}
								},
								children = {}
							},
							{
								name = "untitled25",
								cType = "Label",
								params = {
									fontSize = 18,
									pos = {
										x = 27,
										y = 12.5
									},
									text = TR("战意")
								},
								children = {}
							},
							{
								name = "untitled33",
								cType = "Sprite",
								params = {
									image = "jzwl_59.png",
									childName = "zySprite",
									pos = {
										x = -7,
										y = 12.5
									}
								},
								children = {}
							},
							{
								name = "untitled40",
								cType = "Label",
								params = {
									fontSize = 12,
									childName = "percentLabel",
									text = "100%",
									outlineColor = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 85.5,
										y = 12.5
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled34",
						cType = "Scale9Sprite",
						params = {
							image = "c_118.png",
							childName = "infoBg",
							pos = {
								x = 100,
								y = 120
							},
							size = {
								width = 140,
								height = 20
							}
						},
						children = {
							{
								name = "untitled35",
								cType = "Label",
								params = {
									fontSize = 18,
									childName = "infoLabel",
									text = "Label",
									isRichText = true,
									color = {
										g = 255,
										r = 255,
										b = 255
									},
									pos = {
										x = 70,
										y = 10
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled28",
						cType = "Sprite",
						params = {
							image = "zd_61.png",
							childName = "guildBg",
							pos = {
								x = 124,
								y = 26
							}
						},
						children = {
							{
								name = "untitled29",
								cType = "Label",
								params = {
									fontSize = 20,
									childName = "guildName",
									pos = {
										x = 67,
										y = 16
									},
									text = TR("帮派名字")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled30",
						cType = "ProgressBar",
						params = {
							normalImage = "jzwl_63.png",
							bgImage = "jzwl_62.png",
							childName = "hpProgress",
							pos = {
								x = 99,
								y = 1
							}
						},
						children = {
							{
								name = "untitled31",
								cType = "Label",
								params = {
									fontSize = 12,
									childName = "hpLabel",
									text = "100/100",
									outlineColor = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 67.5,
										y = 5.5
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled32",
						cType = "Sprite",
						params = {
							image = "bp_75.png",
							childName = "defeatSprite",
							pos = {
								x = 100,
								y = 71
							}
						},
						children = {}
					},
					{
						name = "untitled39",
						cType = "Button",
						params = {
							image = "c_pure.png",
							childName = "btn",
							pos = {
								x = 100,
								y = 79
							},
							size = {
								width = 200,
								height = 200
							}
						},
						children = {}
					}
				}
			},
			{
				name = "routeLineNode",
				cType = "Node",
				params = {
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled9",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 320
			}
		},
		children = {
			{
				name = "untitled10",
				cType = "Scale9Sprite",
				params = {
					image = "jzwl_57.png",
					anchor = {
						x = 0.5,
						y = 1
					},
					pos = {
						x = 140,
						y = 250
					},
					size = {
						width = 266,
						height = 147
					}
				},
				children = {
					{
						name = "rankTableView",
						cType = "TableView",
						params = {
							numOfCellsFunc = "cbNumOfCellsFunc",
							isVertical = true,
							cellUpdateFunc = "cbCellUpdateFunc",
							cellSizeFunc = "cbCellSizeFunc",
							cellFillFunc = "cbCellFillFunc",
							pos = {
								x = 3,
								y = 5
							},
							size = {
								width = 260,
								height = 140
							}
						},
						children = {
							{
								name = "rankTemplate",
								cType = "TemplateNode",
								params = {
									pos = {
										x = -3,
										y = -30
									},
									size = {
										width = 260,
										height = 30
									}
								},
								children = {
									{
										name = "untitled13",
										cType = "Scale9Sprite",
										params = {
											image = "jzwl_58.png",
											childName = "bg",
											pos = {
												x = 130,
												y = 3
											}
										},
										children = {}
									},
									{
										name = "untitled14",
										cType = "Sprite",
										params = {
											childName = "rankSprite",
											scale = 0.5,
											hide = true,
											image = "c_51.png",
											pos = {
												x = 26,
												y = 13
											}
										},
										children = {}
									},
									{
										name = "untitled15",
										cType = "Label",
										params = {
											text = "99",
											hide = true,
											childName = "rankLabel",
											pos = {
												x = 21,
												y = 15
											}
										},
										children = {}
									},
									{
										name = "untitled16",
										cType = "Label",
										params = {
											childName = "nameLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											pos = {
												x = 56,
												y = 15
											},
											text = TR("玩家名字6字")
										},
										children = {}
									},
									{
										name = "untitled17",
										cType = "Label",
										params = {
											childName = "winNumLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											pos = {
												x = 201,
												y = 15
											},
											text = TR("99胜")
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "emptyRankTips",
						cType = "Label",
						params = {
							fontSize = 26,
							hide = true,
							pos = {
								x = 127,
								y = 72.5
							},
							text = TR("暂无排行")
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled2",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 320
			}
		},
		children = {
			{
				name = "untitled5",
				cType = "Button",
				params = {
					image = "tb_gn_294.png",
					clickAction = "onZWBtnClick",
					pos = {
						x = -60,
						y = -170
					}
				},
				children = {}
			},
			{
				name = "untitled6",
				cType = "Button",
				params = {
					image = "tb_gn_295.png",
					clickAction = "onSSBtnClick",
					pos = {
						x = -60,
						y = -70
					}
				},
				children = {}
			},
			{
				name = "untitled7",
				cType = "Button",
				params = {
					image = "tb_gn_12.png",
					clickAction = "onRankBtnClick",
					pos = {
						x = -60,
						y = -270
					}
				},
				children = {}
			},
			{
				name = "untitled42",
				cType = "Button",
				params = {
					image = "tb_gn_311.png",
					clickAction = "onLocationBtnClick",
					pos = {
						x = -60,
						y = 219.84
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled36",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled38",
				cType = "Scale9Sprite",
				params = {
					image = "xshd_3.png",
					pos = {
						x = 17,
						y = 251
					},
					size = {
						width = 320,
						height = 31
					}
				},
				children = {
					{
						name = "countDownLabel",
						cType = "Label",
						params = {
							fontSize = 18,
							isRichText = true,
							pos = {
								x = 115,
								y = 15.5
							},
							text = TR("活动倒计时：")
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled18",
		cType = "Button",
		params = {
			clickAction = "onReturnBtnClick",
			posApt = 1,
			scaleApt = 2,
			image = "c_1.png",
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled19",
				cType = "Sprite",
				params = {
					image = "jzwl_0.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = -29.46,
						y = 30.97
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled20",
		cType = "Button",
		params = {
			clickAction = "onRuleBtnClick",
			scaleApt = 2,
			swallowTouch = true,
			posApt = 1,
			image = "c_3.png",
			pos = {
				x = 288.31,
				y = 614.51
			}
		},
		children = {}
	},
	{
		name = "untitled8",
		cType = "TopResourceNode",
		params = {
			posApt = 1,
			scaleApt = 2,
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 604.78,
				y = 586.72
			}
		},
		children = {}
	},
	{
		name = "untitled41",
		cType = "FileLayer",
		params = {
			file = "commonlayer/MiniChatLayer.lua"
		},
		children = {}
	},
	{
		name = "barrageTextLayer",
		cType = "FileLayer",
		params = {
			file = "commonlayer.BarrageTextLayer"
		},
		children = {}
	}
}
slot1 = {
	{
		pos = cc.p(475, 530)
	},
	{
		pos = cc.p(1000, 520)
	},
	{
		pos = cc.p(360, 220)
	},
	{
		pos = cc.p(935, 240)
	}
}
slot0.ctor = function (slot0, slot1)
	slot2 = PlayerAttrObj:getPlayerAttrByName("LeaguetopfinalStatus")
	slot0.mJzwlData = {}

	slot0.super.ctor(slot0, {
		swallow = true
	})
	slot0.initUI(slot0)

	slot0.guildId = PlayerAttrObj:getPlayerAttrByName("GuildInfo").GuildId

	slot0.requestGetInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.registerEvent(slot0)
	Utility.schedule(slot0.countDownLabel, function ()
		if not slot0.data then
			return 
		end

		slot2, slot3 = Utility.getCountDownStr((slot0.data.LeaguetopInfo.StartTime <= Player:getCurrentTime() and slot0.data.LeaguetopInfo.EndTime) or slot0.data.LeaguetopInfo.StartTime, true)

		if slot2 then
			if slot0.data.LeaguetopInfo.StartTime <= slot0 then
				slot0.countDownLabel:setString(TR("结束倒计时:%s", slot3))
			else
				slot0.countDownLabel:setString(TR("开始倒计时:%s", slot3))
			end
		else
			slot0.countDownLabel:setString(TR("活动已结束"))
		end

		return 
	end, 0.5)

	slot0.lineSpriteList = {}

	Utility.schedule(slot0.bgSprite, function ()
		for slot3, slot4 in pairs(slot0.lineSpriteList) do
			slot4.startUVX = (slot4.startUVX or 16) - 0.16

			if slot4.startUVX < 0 then
				slot4.startUVX = slot4.startUVX + 16
			end

			if not tolua.isnull(slot4) then
				slot4.setTextureRect(slot4, cc.rect(slot4.startUVX, 0, slot4.spriteScale, 16))
			end
		end

		return 
	end, 0.01)

	return 
end
slot0.registerEvent = function (slot0)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalBarrageMessage, function (slot0, slot1)
		slot0.barrageTextLayer:showOneText(string.format("%s: 我支持%s，%s", slot1.PlayerName, slot1.GuildName, LeaguetopfinalCheerspeakRelation.items[slot1.Id].speakContent))

		return 
	end)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalMainPage, function (slot0, slot1)
		dump(slot1)

		slot0.data.GuildInfo = slot1.GuildInfo

		slot0:refreshAllGuild()
		slot0:refreshAllRouteLine()

		return 
	end)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalRank, function (slot0, slot1)
		slot0.data.KillNumRank = slot1

		slot0:refreshRank()

		return 
	end)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalFightFailed, function (slot0, slot1)
		LayerManager.addLayer({
			cleanUp = false,
			name = "jzwl.JzwlGuildFaildLayer",
			data = {
				loseName = slot1.GuildName
			}
		})

		return 
	end)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalFightWinner, function (slot0, slot1)
		dump(slot1)

		slot0.data.LeaguetopInfo.IsGameOver = true

		LayerManager.addLayer({
			cleanUp = false,
			name = "jzwl.JzwlBattleResultLayer",
			data = {
				groupId = slot0.groupId,
				guildName = slot1.GuildName,
				winnerName = slot1.PlayerName
			}
		})

		return 
	end)
	EventAuto:registerAutoEvent(slot0, EventDefine.eLeaguetopFinalRefreshMain, function (slot0, slot1)
		dump("子界面通知刷新")
		slot0:requestGetInfo()

		return 
	end)

	return 
end
slot0.checkBattleEnded = function (slot0)
	if slot0.data.LeaguetopInfo.IsGameOver then
		ui.showFlashView(TR("战斗已结束"))

		return true
	end

	return false
end
slot0.refreshLayer = function (slot0)
	slot0.refreshRank(slot0)
	slot0.refreshAllGuild(slot0)
	slot0.refreshAllRouteLine(slot0)

	return 
end
slot0.refreshRank = function (slot0)
	slot0.rankDatas = (slot0.data and slot0.data.KillNumRank) or {}

	table.sort(slot0.rankDatas, function (slot0, slot1)
		return slot0.Rank < slot1.Rank
	end)
	slot0.rankTableView:reloadData()
	slot0.emptyRankTips:setVisible(#slot0.rankDatas <= 0)

	return 
end
slot0.findGuildInfo = function (slot0, slot1)
	for slot5, slot6 in pairs(slot0.data.GuildInfo) do
		if slot6.PosId == slot1 then
			return slot6
		end
	end

	return 
end
slot0.findGuildInfoByGuildId = function (slot0, slot1)
	return slot0.data and slot0.data.GuildInfo[slot1]
end
slot0.createOneGuild = function (slot0, slot1, slot2, slot3)
	if not slot0.findGuildInfo(slot0, slot1) then
		return 
	end

	slot4 = slot0.createLayoutTemplateNode(slot0, "guildNode")

	slot2.addChild(slot2, slot4, 1)
	slot4.setName(slot4, "Guild" .. slot1)
	slot4.setPosition(slot4, slot0[slot1].pos)

	return slot4
end
slot0.refreshOneGuild = function (slot0, slot1, slot2)
	slot4 = slot0.findGuildInfo(slot0, slot1)

	if (slot2.getChildByName(slot2, "Guild" .. slot1) or slot0.createOneGuild(slot0, slot1, slot2)) and slot4 then
		slot3.zyBg.zyProgress:setMaxValue(LeaguetopfinalConfig.items[1].maxBattlePoints)
		slot3.zyBg.zyProgress:setCurrValue(slot4.FightValue)
		slot3.zyBg.zySprite:setVisible(slot4.FightValue == LeaguetopfinalConfig.items[1].maxBattlePoints)
		slot3.zyBg.percentLabel:setString(TR("%d%%", math.floor(slot4.FightValue/LeaguetopfinalConfig.items[1].maxBattlePoints*100)))
		slot3.infoBg.infoLabel:setString(TR("攻:#8ba857%d#ffffff 守:#c04141%d", slot4.AttackNum, slot4.DefendNum))
		slot3.guildBg.guildName:setString(slot4.GuildName)
		slot3.hpProgress:setMaxValue(LeaguetopfinalConfig.items[1].armyNum)
		slot3.hpProgress:setCurrValue(slot4.CityArmNum)
		slot3.hpProgress.hpLabel:setString(TR("%d%%", math.floor(slot4.CityArmNum/LeaguetopfinalConfig.items[1].armyNum*100)))
		slot3.defeatSprite:setVisible(slot4.CityArmNum <= 0)
		slot3.btn:setClickAction(function ()
			if slot0:checkBattleEnded() then
				return 
			end

			if not slot0:findGuildInfoByGuildId(slot0.guildId) then
				ui.showFlashView(TR("不满足参与条件，无法进入战场"))

				return 
			end

			LayerManager.addLayer({
				cleanUp = false,
				name = "jzwl.JzwlBattleLayer",
				data = {
					groupId = slot0.groupId,
					data = slot0.data,
					defendGuildId = slot1.GuildId
				}
			})

			return 
		end)
	end

	return slot3
end
slot0.refreshAllGuild = function (slot0)
	for slot4, slot5 in ipairs(slot0) do
		slot0.refreshOneGuild(slot0, slot4, slot0.bgSprite)
	end

	return 
end
slot0.createOneRouteLine = function (slot0, slot1, slot2, slot3)
	slot4 = slot0.bgSprite:getChildByName("Guild" .. slot1)
	slot5 = slot0.bgSprite:getChildByName("Guild" .. slot2)

	if slot0.routeLineNode:getChildByName("RouteLine" .. slot1 .. slot2) then
		return 
	end

	slot7 = cc.p(slot4.getPosition(slot4))
	slot9 = UIWrap.newControl("Sprite", {
		image = slot3 or "jh_61.png",
		anchor = cc.p(0, 0.5),
		pos = slot7
	})

	slot9.getTexture(slot9):setTexParameters(gl.LINEAR, gl.LINEAR, gl.REPEAT, gl.REPEAT)
	slot9.setRotation(slot9, cc.pToAngleSelf("Sprite")*-57.295780490442965)
	slot9.setTextureRect(slot9, cc.rect(0, 0, cc.pGetDistance(slot7, cc.p(slot5.getPosition(slot5))), 16))

	slot9.spriteScale = cc.pGetDistance(slot7, cc.p(slot5.getPosition(slot5)))

	slot9.setName(slot9, slot6)
	slot0.routeLineNode:addChild(slot9, 1)

	slot0.lineSpriteList[slot6] = slot9

	return slot9
end
slot0.refreshAllRouteLine = function (slot0)
	slot1 = {}

	for slot5, slot6 in pairs(slot0.data.GuildInfo) do
		slot7 = slot6.PosId

		for slot11, slot12 in pairs(slot6.AttckGuildIds) do
			slot13 = slot0.data.GuildInfo[slot12].PosId
			slot14 = slot6.GuildId
			slot15 = slot12
			slot16 = "jh_62.png"

			if Utility.isEntityId(slot0.guildId) then
				slot1["RouteLine" .. slot13 .. slot7] = {
					slot13,
					slot7,
					(slot14 == slot0.guildId and "jh_63.png") or (slot15 == slot0.guildId and "jh_61.png") or "jh_64.png"
				}
			end
		end
	end

	for slot5, slot6 in pairs(slot0.lineSpriteList) do
		if not slot1[slot6.getName(slot6)] then
			slot0.lineSpriteList[slot6.getName(slot6)] = nil

			slot6.removeFromParent(slot6)
		end
	end

	for slot5, slot6 in pairs(slot1) do
		slot0.createOneRouteLine(slot0, slot6[1], slot6[2], slot6[3])
	end

	return 
end
slot0.cbCellSizeFunc = function (slot0, slot1, slot2)
	return 260, 30
end
slot0.cbNumOfCellsFunc = function (slot0, slot1)
	return (slot0.rankDatas and #slot0.rankDatas) or 0
end
slot2 = {
	"c_51",
	"c_52",
	"c_53"
}
slot0.cbCellFillFunc = function (slot0, slot1, slot2)
	slot3 = slot0.createLayoutTemplateNode(slot0, "rankTemplate")
	slot3.refresh = function (slot0, slot1)
		slot2 = slot0.rankDatas[slot1 + 1]

		slot0.rankSprite:setVisible(slot1 + 1 < 3)

		if slot1 <= 3 then
			slot0.rankSprite:setTexture(slot1[slot1] .. ".png")
		end

		slot0.rankLabel:setString(slot1)
		slot0.rankLabel:setVisible(3 <= slot1)
		slot0.nameLabel:setString(slot2.Name)
		slot0.winNumLabel:setString(TR("%d胜", slot2.KillNum))

		return 
	end

	slot1.addChild(slot1, slot3)
	slot3.setPosition(slot3, cc.p(0, 0))
	slot3.refresh(slot3, slot2)

	slot1.rankTemplate = slot3

	return 
end
slot0.cbCellUpdateFunc = function (slot0, slot1, slot2)
	slot1.rankTemplate:refresh(slot2)

	return 
end
slot0.onRuleBtnClick = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、开服七天后的周五将开启决战武林，其后每周5将会开启一次；"),
			TR("2、活动开启将选取本服前四名的帮派与其他服帮派根据胜率匹配成玩法战场，战场内会有4个帮派参加；"),
			TR("3、活动将在周5的19:00开启，活动持续1小时，20:00结束；"),
			TR("4、玩法开始时，四个帮派设定了300名城防守卫，最终的胜利条件会根据城防守卫剩余数量进行判断；"),
			TR("5、如若活动期间城防守卫为0，则纳入被击败状态，被淘汰出局；"),
			TR("6、满足参与条件的玩家，可以雇佣死侍帮助战斗；"),
			TR("7、死侍的使用和派遣侠客队伍相同，与之遭遇的队伍将与之同归于尽；"),
			TR("8、玩法设置了战意值，战意值会影响对应帮派出战的队伍造成的伤害；"),
			TR("9、战意值初始设定为50%，提高战意值将提高所在帮派伤害，反之降低；"),
			TR("10、不满足参与决战武林的帮派玩家无法参与决战武林玩法；"),
			TR("11、城战战斗将设置3条进攻或者防守路线，玩家需要选择对应的进攻或者防守路线，"),
			TR("12、线路相同的玩家队伍遭遇才发发生战斗；"),
			TR("13、队伍战败后需要等待对应时间的复活时间；"),
			TR("14、玩家也可以消耗九花玉露丸复活战败的侠客队伍；"),
			TR("15、侠客训练到绿色品质以上才可上阵。")
		}
	})

	return 
end
slot0.onReturnBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onLocationBtnClick = function (slot0)
	if slot0.checkBattleEnded(slot0) then
		return 
	end

	if not slot0.findGuildInfoByGuildId(slot0, slot0.guildId) then
		ui.showFlashView(TR("不满足参与条件，无法进入"))

		return 
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "jzwl.JzwlWarTeamLocateLayer",
		data = {
			groupId = slot0.groupId,
			data = slot0.data
		}
	})

	return 
end
slot0.onZWBtnClick = function (slot0)
	if slot0.checkBattleEnded(slot0) then
		return 
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "jzwl.JzwlZWLayer",
		data = {
			groupId = slot0.groupId,
			data = slot0.data,
			mycheerNum = slot0.myCheerNum,
			parentLayer = slot0
		}
	})

	return 
end
slot0.onSSBtnClick = function (slot0)
	if slot0.checkBattleEnded(slot0) then
		return 
	end

	if not slot0.findGuildInfoByGuildId(slot0, slot0.guildId) then
		ui.showFlashView(TR("不满足参与条件，无法雇佣死侍"))

		return 
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "jzwl.JzwlSSLayer",
		data = {
			groupId = slot0.groupId,
			guildInfo = slot1 or {},
			data = slot0.data,
			parentLayer = slot0
		}
	})

	return 
end
slot0.onRankBtnClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "jzwl.DlgJzwlRankLayer",
		data = {
			groupId = slot0.groupId
		}
	})

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "Leaguetopfinal",
		methodData = {},
		successCallback = function (slot0)
			dump(slot0)

			slot0.groupId = slot0.Data.GroupId
			slot0.data = slot0.Data
			slot0.myCheerNum = slot0.MyCheerNum
			slot0.GuildInfo = {}

			slot0:refreshLayer()

			return 
		end
	})

	return 
end
slot0.requestExitLook = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "ExitBarrageChat",
		ignoreNode = true,
		moduleName = "Leaguetopfinal",
		needWait = false,
		methodData = {
			slot0.grounpId
		},
		successCallback = function (slot0)
			return 
		end
	})

	return 
end

return slot0
