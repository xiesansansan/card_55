slot0 = class("KuangzhanReportLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			posApt = 1,
			image = "tc_1.png",
			pos = {
				x = 568,
				y = 320
			},
			titleText = TR("押镖战报")
		},
		children = {
			{
				name = "rewardNode",
				cType = "Node",
				params = {
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "onkeyBtn",
						cType = "Button",
						params = {
							image = "c_27.png",
							clickAction = "onOneKey",
							pos = {
								x = 420.95,
								y = 46.42
							},
							titleText = TR("一键领取")
						},
						children = {}
					},
					{
						name = "rewardTableView",
						cType = "TableView",
						params = {
							numOfCellsFunc = "onNumOfRewardFunc",
							isVertical = true,
							cellUpdateFunc = "onRewardUpdateFunc",
							cellSizeFunc = "onRewardSizeFunc",
							cellFillFunc = "onRewardFillFunc",
							pos = {
								x = 21,
								y = 76
							},
							size = {
								width = 800,
								height = 370
							}
						},
						children = {
							{
								name = "rewardTempNode",
								cType = "TemplateNode",
								params = {
									pos = {
										x = 0,
										y = -114
									}
								},
								children = {
									{
										name = "untitled12",
										cType = "Scale9Sprite",
										params = {
											image = "c_95.png",
											pos = {
												x = 400,
												y = 57
											},
											size = {
												width = 780,
												height = 112
											}
										},
										children = {}
									},
									{
										name = "typeLabel",
										cType = "Label",
										params = {
											fontSize = 18,
											anchor = {
												x = 0,
												y = 0.5
											},
											pos = {
												x = 24.65,
												y = 95.53
											},
											text = TR("类型")
										},
										children = {}
									},
									{
										name = "introLabel",
										cType = "Label",
										params = {
											fontSize = 18,
											isRichText = true,
											anchor = {
												x = 1,
												y = 0.5
											},
											color = {
												g = 255,
												r = 255,
												b = 255
											},
											pos = {
												x = 777,
												y = 95.53
											},
											text = TR("描述类型类型类型类型类型描述类型类型类型类型类型")
										},
										children = {}
									},
									{
										name = "getRewardBtn",
										cType = "Button",
										params = {
											image = "c_27.png",
											clickAction = "onGetReward",
											pos = {
												x = 715.42,
												y = 43.52
											},
											titleText = TR("领 取")
										},
										children = {}
									},
									{
										name = "hadTip",
										cType = "Sprite",
										params = {
											image = "c_55.png",
											hide = true,
											pos = {
												x = 715.61,
												y = 45.64
											}
										},
										children = {}
									},
									{
										name = "rewardListView",
										cType = "ListView",
										params = {
											direction = false,
											swallowTouch = false,
											pos = {
												x = 96.36,
												y = 5.43
											},
											size = {
												width = 450,
												height = 78
											}
										},
										children = {
											{
												name = "rewardLayout",
												cType = "Layout",
												custom = {
													{
														value = "untitled17-initParams",
														name = "cardInfo",
														type = "string"
													}
												},
												params = {
													size = {
														width = 80,
														height = 78
													}
												},
												children = {
													{
														name = "untitled17",
														cType = "CardNode",
														params = {
															scale = 0.9,
															childName = "goodCard",
															allowClick = true,
															initParams = {},
															pos = {
																x = 40,
																y = 39
															}
														},
														children = {}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					{
						name = "emptyLabel",
						cType = "Label",
						params = {
							fontSize = 38,
							hide = true,
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 421.06,
								y = 254.38
							},
							text = TR("暂无奖励可领取")
						},
						children = {}
					}
				}
			},
			{
				name = "reportNode",
				cType = "Node",
				params = {
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "reportTableView",
						cType = "TableView",
						params = {
							numOfCellsFunc = "onNumOfReportFunc",
							isVertical = true,
							cellUpdateFunc = "onReportUpdateFunc",
							cellSizeFunc = "onReportSizeFunc",
							cellFillFunc = "onReportFillFunc",
							pos = {
								x = 21,
								y = 23
							},
							size = {
								width = 800,
								height = 420
							}
						},
						children = {
							{
								name = "reportTempNode",
								cType = "TemplateNode",
								params = {
									pos = {
										x = 0,
										y = -104
									}
								},
								children = {
									{
										name = "untitled19",
										cType = "Scale9Sprite",
										params = {
											image = "c_98.png",
											pos = {
												x = 400,
												y = 52
											},
											size = {
												width = 782,
												height = 102
											}
										},
										children = {}
									},
									{
										name = "isWinTip",
										cType = "Sprite",
										params = {
											scale = 0.9,
											image = "xyyz_15.png",
											pos = {
												x = 83.79,
												y = 52
											}
										},
										children = {}
									},
									{
										name = "playerHead",
										cType = "CardNode",
										params = {
											allowClick = false,
											pos = {
												x = 216.43,
												y = 52
											}
										},
										children = {}
									},
									{
										name = "untitled24",
										cType = "Label",
										params = {
											fontSize = 18,
											text = "Label",
											childName = "timeLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 199,
												r = 223,
												b = 42
											},
											pos = {
												x = 276.11,
												y = 29.39
											}
										},
										children = {}
									},
									{
										name = "untitled26",
										cType = "Label",
										params = {
											fontSize = 18,
											text = "Label",
											childName = "nameLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 65,
												r = 192,
												b = 65
											},
											pos = {
												x = 276.11,
												y = 70.39
											}
										},
										children = {}
									},
									{
										name = "untitled27",
										cType = "Label",
										params = {
											fontSize = 18,
											text = "Label",
											childName = "typeLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 420.49,
												y = 33.21
											}
										},
										children = {}
									},
									{
										name = "untitled22",
										cType = "Label",
										params = {
											fontSize = 18,
											text = "Label",
											childName = "lvLabel",
											anchor = {
												x = 0,
												y = 0.5
											},
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 404.11,
												y = 70.39
											}
										},
										children = {}
									},
									{
										name = "fightBtn",
										cType = "Button",
										params = {
											image = "c_27.png",
											clickAction = "onFightBtn",
											pos = {
												x = 717.92,
												y = 52
											},
											titleText = TR("战斗回放")
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "emptyLabel2",
						cType = "Label",
						params = {
							fontSize = 38,
							hide = true,
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 421.06,
								y = 254.38
							},
							text = TR("暂无战报")
						},
						children = {}
					}
				}
			},
			{
				name = "tabView",
				cType = "TabView",
				params = {
					selectTag = 1,
					onSelectChange = "onTabChange",
					lightedImage = "c_30.png",
					direction = false,
					normalImage = "c_31.png",
					btnInfos = {
						{
							title = "Test"
						}
					},
					pos = {
						x = 25.64,
						y = 449.54
					},
					size = {
						width = 311.53,
						height = 50.96
					},
					titleOffset = {
						x = 0.5,
						y = 0.5
					}
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.tebBtnInfos = {
		{
			tag = 1,
			title = TR("押镖奖励")
		},
		{
			tag = 2,
			title = TR("个人战报")
		}
	}

	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "tabView" then
			slot1.btnInfos = slot0.tebBtnInfos
		end

		return 
	end)

	for slot5, slot6 in ipairs(slot1) do
		if slot5 == 1 then
			slot6.addChild(slot6, UIWrap.newControl("RedDot", {
				subKey = "CanDrawReward",
				moduleId = ModuleSub.eKuangZhanPoint
			}))
		end
	end

	return 
end
slot0.onTabChange = function (slot0, slot1)
	slot0.rewardNode:setVisible(false)
	slot0.reportNode:setVisible(false)

	if slot1 == 1 then
		slot0.rewardNode:setVisible(true)
		slot0.requestGetPlayerHistory(slot0)
	else
		slot0.reportNode:setVisible(true)
		slot0.requestGetReportData(slot0)
	end

	return 
end
slot1 = {
	"押镖%s奖励",
	"押镖%s奖励",
	"押镖%s被%s劫镖"
}
slot0.onRewardSizeFunc = function (slot0, slot1, slot2)
	return 780, 114
end
slot0.onNumOfRewardFunc = function (slot0, slot1)
	return #slot0.mRewardList
end
slot0.onRewardFillFunc = function (slot0, slot1, slot2)
	slot3 = slot0.createLayoutTemplateNode(slot0, "rewardTempNode")
	slot3.refreshCell = function (slot0, slot1)
		slot0.typeLabel:setString(KuangzhanModel.items[slot0.mRewardList[slot1 + 1].LayerId][slot0.mRewardList[slot1 + 1].PositionId].name)

		slot4 = ""

		slot0.introLabel:setString((slot0.mRewardList[slot1 + 1].TypeId ~= 3 or TR("押镖%s小时%s分钟被#5CA7BB%s#FFFFFF劫镖", math.floor(slot0.mRewardList[slot1 + 1].CarTime/60), slot0.mRewardList[slot1 + 1].CarTime%60, slot2.PlunderName)) and TR("押镖%s小时%s分钟奖励", math.floor(slot2.CarTime/60), slot2.CarTime%60))
		slot0.hadTip:setVisible(slot2.IsDrawed)
		slot0.getRewardBtn:setVisible(not slot2.IsDrawed)
		slot0.rewardListView:removeAllChildren()

		for slot11, slot12 in ipairs(slot7) do
			slot0.rewardListView:pushBackCustomItem(slot0:createLayoutTemplateNode("rewardLayout", {
				cardInfo = {
					showAttrs = {
						Enums.CardShowAttr.eNum
					},
					instanceData = {
						modelId = slot12.resourceId,
						num = slot12.num
					}
				}
			}))
		end

		slot0.getRewardBtn.id = slot2.Id

		return 
	end

	slot3.refreshCell(slot3, slot2)
	slot3.setPositionY(slot3, 0)
	slot1.addChild(slot1, slot3)

	slot1.layout = slot3

	return 
end
slot0.onRewardUpdateFunc = function (slot0, slot1, slot2)
	slot1.layout:refreshCell(slot2)

	return 
end
slot0.onReportSizeFunc = function (slot0, slot1, slot2)
	return 780, 104
end
slot0.onNumOfReportFunc = function (slot0, slot1)
	return #slot0.mReportList
end
slot0.onReportFillFunc = function (slot0, slot1, slot2)
	slot3 = slot0.createLayoutTemplateNode(slot0, "reportTempNode")
	slot3.refreshCell = function (slot0, slot1)
		slot3 = (slot0.mReportList[slot1 + 1].IsWin and "xyyz_15.png") or "xyyz_16.png"

		if PlayerAttrObj:isPlayerSelf(slot2.TargetPlayerId) then
			slot0.isWinTip:setTexture((slot2.IsWin and "xyyz_16.png") or "xyyz_15.png")
			slot0.playerHead:setPlayerHeader(slot2.PlayerInfo.HeadImageId, nil, {
				headPicId = slot2.HeadPicId
			})
			slot0.nameLabel:setString(slot2.PlayerInfo.Name)
			slot0.timeLabel:setString(MqTime.formatTimestamp(slot2.Crdate, slot4))
			slot0.typeLabel:setString(KuangzhanModel.items[slot2.LayerId][slot2.PositionId].name)
			slot0.lvLabel:setString(TR("等级：%s", slot2.PlayerInfo.Lv))

			slot0.fightBtn.reportId = slot2.ReportId
			slot0.fightBtn.isOther = PlayerAttrObj:isPlayerSelf(slot2.TargetPlayerId)

			return 
		end
	end

	slot3.refreshCell(slot3, slot2)
	slot3.setPositionY(slot3, 0)
	slot1.addChild(slot1, slot3)

	slot1.layout = slot3

	return 
end
slot0.onReportUpdateFunc = function (slot0, slot1, slot2)
	slot1.layout:refreshCell(slot2)

	return 
end
slot0.onGetReward = function (slot0, slot1)
	slot0.requestDrawReward(slot0, slot1.id)

	return 
end
slot0.onOneKey = function (slot0)
	slot1 = false

	for slot5, slot6 in ipairs(slot0.mRewardList) do
		if slot6.IsDrawed == false then
			slot1 = true
		end
	end

	if slot1 then
		slot0.requestOneKeyDrawReward(slot0)
	else
		ui.showFlashView(TR("没有可以领取的奖励"))
	end

	return 
end
slot0.onFightBtn = function (slot0, slot1)
	slot0.requestGetFightReport(slot0, slot1.reportId, slot1.isOther)

	return 
end
slot0.requestGetPlayerHistory = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetPlayerHistory",
		moduleName = "KuangzhanInfo",
		methodData = {},
		successCallback = function (slot0)
			dump(slot0, "GetPlayerHistory")

			slot0.mRewardList = slot0.Data

			table.sort(slot0.mRewardList, function (slot0, slot1)
				if slot0.IsDrawed ~= slot1.IsDrawed then
					return not slot0.IsDrawed
				end

				return 
			end)
			slot0.rewardTableView:reloadData()
			slot0.emptyLabel:setVisible(#slot0.mRewardList <= 0)
			slot0.onkeyBtn:setVisible(0 < #slot0.mRewardList)

			return 
		end
	})

	return 
end
slot0.requestGetReportData = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetReportData",
		moduleName = "KuangzhanInfo",
		methodData = {},
		successCallback = function (slot0)
			slot0.mReportList = {}

			for slot4, slot5 in pairs(slot0.Data) do
				table.insert(slot0.mReportList, slot5)
			end

			table.sort(slot0.mReportList, function (slot0, slot1)
				if slot0.Crdate ~= slot1.Crdate then
					return slot1.Crdate < slot0.Crdate
				end

				return 
			end)
			slot0.reportTableView:reloadData()
			slot0.emptyLabel2:setVisible(#slot0.mReportList <= 0)

			return 
		end
	})

	return 
end
slot0.requestDrawReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "DrawReward",
		moduleName = "KuangzhanInfo",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			dump(slot0, "DrawReward")

			for slot4, slot5 in ipairs(slot0.mRewardList) do
				if slot5.Id == slot0.Data.Id then
					slot5.IsDrawed = true
				end
			end

			table.sort(slot0.mRewardList, function (slot0, slot1)
				if slot0.IsDrawed ~= slot1.IsDrawed then
					return not slot0.IsDrawed
				end

				return 
			end)
			slot0.rewardTableView:reloadData()

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			return 
		end
	})

	return 
end
slot0.requestGetFightReport = function (slot0, slot1, slot2)
	slot0.socketRequest(slot0, {
		methodName = "GetFightReport",
		moduleName = "FightReoprt",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			require("common.BattleEntry"):StartBattle({
				fightInfo = slot0.FightInfo,
				extraData = {
					isOthersBattle = slot0
				}
			})

			return 
		end
	})

	return 
end
slot0.requestOneKeyDrawReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "OneKeyDrawReward",
		moduleName = "KuangzhanInfo",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			dump(slot0, "OneKeyDrawReward")

			slot0.mRewardList = slot0.HistoryInfo

			table.sort(slot0.mRewardList, function (slot0, slot1)
				if slot0.IsDrawed ~= slot1.IsDrawed then
					return not slot0.IsDrawed
				end

				return 
			end)
			slot0.rewardTableView:reloadData()
			slot0.emptyLabel:setVisible(#slot0.mRewardList <= 0)

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			return 
		end
	})

	return 
end

return slot0
