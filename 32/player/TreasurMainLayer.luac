slot0 = class("TreasurMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled57",
		cType = "Effect",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			dataFile = "effect_ui_juesezhanshi",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "centerNode",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled9",
				cType = "Scale9Sprite",
				params = {
					image = "c_9.png",
					pos = {
						x = 273.9,
						y = -0.19
					}
				},
				children = {}
			},
			{
				name = "curInfoNode",
				cType = "Node",
				params = {
					pos = {
						x = 70.82,
						y = 41.79
					},
					size = {
						width = 158,
						height = 150
					}
				},
				children = {}
			},
			{
				name = "nextInfoNode",
				cType = "Node",
				params = {
					pos = {
						x = 308.82,
						y = 41.79
					},
					size = {
						width = 158,
						height = 150
					}
				},
				children = {}
			},
			{
				name = "tulongdao",
				cType = "Button",
				params = {
					clickAction = "onDrumBtn",
					pressedAction = false,
					image = "c_58.png",
					pos = {
						x = -75.73,
						y = -101.17
					},
					size = {
						width = 149.54,
						height = 284.94
					}
				},
				children = {
					{
						name = "tldSprite",
						cType = "Sprite",
						params = {
							image = "zj_21.png",
							hide = true,
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "untitled55",
						cType = "ClippingNode",
						params = {
							alpha = 1,
							pos = {
								x = -238.07,
								y = -122.82
							},
							size = {
								width = 500,
								height = 400
							}
						},
						children = {
							{
								name = "tldEffect",
								cType = "Effect",
								params = {
									dataFile = "effect_ui_tulongdao",
									animation = "xiaotulongdao",
									pos = {
										x = 240.37,
										y = 113.62
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled904",
						cType = "RedDot",
						params = {
							moduleId = 3000,
							offset = {
								x = 0.9,
								y = 0.8
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled10",
				cType = "Scale9Sprite",
				params = {
					image = "c_42.png",
					pos = {
						x = 273.8,
						y = 206.49
					},
					size = {
						width = 400,
						height = 40
					}
				},
				children = {
					{
						name = "untitled11",
						cType = "Sprite",
						params = {
							image = "zj_16.png",
							pos = {
								x = 200,
								y = 20
							}
						},
						children = {}
					},
					{
						name = "untitled46",
						cType = "Sprite",
						params = {
							reverse = 1,
							image = "zj_18.png",
							pos = {
								x = 107.21,
								y = 18.86
							}
						},
						children = {}
					},
					{
						name = "untitled45",
						cType = "Sprite",
						params = {
							image = "zj_18.png",
							pos = {
								x = 295,
								y = 18.86
							}
						},
						children = {}
					}
				}
			},
			{
				name = "curLvLabel",
				cType = "Label",
				params = {
					text = "1",
					charCount = 10,
					startChar = 49,
					fontName = "zj_17.png",
					pos = {
						x = 273.41,
						y = 205.98
					}
				},
				children = {}
			},
			{
				name = "curAttrNode",
				cType = "TemplateNode",
				params = {
					pos = {
						x = 74.26,
						y = 51.92
					}
				},
				children = {
					{
						name = "untitled17",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							text = "Label",
							childName = "attrLabel",
							anchor = {
								x = 0,
								y = 0
							},
							color = {
								g = 49,
								r = 49,
								b = 49
							},
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled18",
				cType = "Scale9Sprite",
				params = {
					image = "c_11.png",
					pos = {
						x = 273.68,
						y = -43.9
					}
				},
				children = {}
			},
			{
				name = "untitled19",
				cType = "Scale9Sprite",
				params = {
					image = "jyt_30.png",
					pos = {
						x = 274.27,
						y = -80.51
					}
				},
				children = {
					{
						name = "percentLvUpLabel",
						cType = "Label",
						params = {
							isRichText = true,
							text = "Label",
							color = {
								g = 49,
								r = 49,
								b = 49
							},
							pos = {
								x = 191,
								y = -18
							}
						},
						children = {}
					},
					{
						name = "untitled901",
						cType = "ClippingNode",
						params = {
							alpha = 1,
							pos = {
								x = 26,
								y = 0
							},
							size = {
								width = 328,
								height = 12
							}
						},
						children = {
							{
								name = "expBar",
								cType = "ProgressBar",
								params = {
									maxValue = 1,
									normalImage = "jyt_31.png",
									currValue = 1,
									pos = {
										x = 164,
										y = 7
									}
								},
								children = {
									{
										name = "untitled903",
										cType = "Effect",
										params = {
											hide = true,
											childName = "lightEff",
											dataFile = "effect_ui_shengwang_jindutiao",
											pos = {
												x = 0,
												y = 7
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "untitled28",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 59.8,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled27",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 92.6,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled26",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 125.4,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled25",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 158.2,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled24",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 191,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled23",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 223.8,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled31",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 256.6,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled43",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 289.4,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "untitled30",
						cType = "Sprite",
						params = {
							image = "jyt_32.png",
							pos = {
								x = 322.2,
								y = 6.05
							}
						},
						children = {}
					},
					{
						name = "barLabel",
						cType = "Label",
						params = {
							text = "2222/5555",
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							outlineColor = {
								g = 49,
								r = 49,
								b = 49
							},
							pos = {
								x = 191,
								y = 7
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled33",
				cType = "Button",
				params = {
					image = "c_19.png",
					clickAction = "onAutoLevelUp",
					pos = {
						x = 162.93,
						y = -213.13
					},
					titleText = TR("自动升级")
				},
				children = {}
			},
			{
				name = "levelUpBtn",
				cType = "Button",
				params = {
					image = "c_19.png",
					clickAction = "onLevelUpOnce",
					pos = {
						x = 388.29,
						y = -212.6
					},
					titleText = TR("升级一次")
				},
				children = {
					{
						name = "untitled56",
						cType = "RedDot",
						params = {
							moduleId = 3402
						},
						children = {}
					}
				}
			},
			{
				name = "resCountLabel",
				cType = "Label",
				params = {
					text = "Label",
					isRichText = true,
					anchor = {
						x = 1,
						y = 0.5
					},
					color = {
						g = 168,
						r = 139,
						b = 87
					},
					pos = {
						x = 389.16,
						y = -156.23
					},
					shadowColor = {
						g = 37,
						r = 37,
						b = 37
					}
				},
				children = {}
			},
			{
				name = "needNumLabel",
				cType = "Label",
				params = {
					text = "Label",
					isRichText = true,
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 395.16,
						y = -163.23
					}
				},
				children = {}
			},
			{
				name = "titleOpenLabel",
				cType = "Label",
				params = {
					valign = 1,
					anchor = {
						x = 1,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 190,
						y = 16.09
					},
					text = TR("第几层开启：")
				},
				children = {}
			},
			{
				name = "chenghao",
				cType = "Button",
				params = {
					image = "zj_19.png",
					clickAction = "onTitleBtn",
					pos = {
						x = 425.5,
						y = 11.34
					}
				},
				children = {
					{
						name = "untitled49",
						cType = "RedDot",
						params = {
							moduleId = 6500
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "enTouchLayer",
		cType = "Layer",
		params = {
			sizeApt = 1,
			delayInit = true,
			posApt = 1,
			pos = {
				x = 0,
				y = 0
			},
			size = {
				width = 1136,
				height = 640
			}
		},
		children = {
			{
				name = "untitled42",
				cType = "Node",
				params = {
					posApt = 1,
					scaleApt = 2,
					pos = {
						x = 568,
						y = 320
					}
				},
				children = {
					{
						name = "untitled41",
						cType = "Button",
						params = {
							image = "c_19.png",
							clickAction = "onStopAuto",
							pos = {
								x = 163.15,
								y = -213.12
							},
							titleText = TR("停止升级")
						},
						children = {}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	slot0.requestGetInfo(slot0)

	slot0.mIsLevelUp = false
	slot0.mIsAuto = false
	slot0.mNeedAction = false

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	slot2 = {}

	for slot6, slot7 in pairs(slot1) do
		table.insert(slot2, slot7)
	end

	table.sort(slot2, function (slot0, slot1)
		if slot0.modelId ~= slot1.modelId then
			return slot0.modelId < slot1.modelId
		end

		return 
	end)

	slot0.TreasureList = slot2
	slot0.mItemList = {}

	slot0.showMyInfo(slot0)
	slot0.refreshDrumInfo(slot0)
	EventAuto:registerAutoEvent(slot0, EventDefine.eRechargeType .. Enums.chargeType.eTulong, function ()
		slot0:refreshDrumInfo()

		return 
	end)
	slot0.executeGuide(slot0)

	return 
end
slot0.showMyInfo = function (slot0)
	slot1 = PlayerAttrObj:getPlayerAttrByName("FashionLevel")
	slot2 = PlayerAttrObj:getPlayerAttrByName("PlayerName")
	slot3 = PlayerAttrObj:getPlayerAttrByName("TitleId")

	if slot0.mCurTitleSprite then
		slot0.mCurTitleSprite:removeFromParent()

		slot0.mCurTitleSprite = nil
	end

	if slot0.mMyFigure then
		slot0.mMyFigure:removeFromParent()

		slot0.mMyFigure = nil
	end

	if cc.FileUtils:getInstance():isFileExist(slot5 .. ".skel") then
		slot0.centerNode:addChild(UIWrap.newControl("Effect", {
			scale = 0.5,
			dataFile = slot5,
			pos = cc.p(-260, -230)
		}), -1)

		slot0.mMyFigure = UIWrap.newControl("Effect", {
			scale = 0.5,
			dataFile = slot5,
			pos = cc.p(-260, -230)
		})
	else
		slot0.centerNode:addChild(UIWrap.newControl("Sprite", {
			scale = 0.8,
			image = FashionModel.items[slot4].pic .. ".png",
			pos = cc.p(-220, 10)
		}), -1)

		slot0.mMyFigure = UIWrap.newControl("Sprite", {
			scale = 0.8,
			image = FashionModel.items[slot4].pic .. ".png",
			pos = cc.p(-220, 10)
		})
	end

	slot0.centerNode:addChild(UIWrap.newControl("Sprite", {
		image = "c_132.png",
		pos = cc.p(-240, -220)
	}), -2)

	return 
end
slot0.refreshDrumInfo = function (slot0)
	slot1 = PlayerDrumModel.items[1].modelId

	for slot6, slot7 in pairs(slot2) do
		if slot7.ModelId == slot1 then
			slot0.mStarLv = slot7.StarLv
		end
	end

	if slot0.mStarLv then
		slot0.tldSprite:setVisible(false)
		slot0.tldEffect:setVisible(true)
	else
		slot0.tldSprite:setVisible(true)
		slot0.tldEffect:setVisible(false)
	end

	return 
end
slot0.refreshAttrLabel = function (slot0)
	slot0.curInfoNode:removeAllChildren()
	slot0.nextInfoNode:removeAllChildren()
	slot0.titleOpenLabel:removeAllChildren()

	slot2 = slot0.getAttrString(slot0, slot0.mModelId + 1)

	for slot6, slot7 in ipairs(slot1) do
		slot8 = slot0.createLayoutTemplateNode(slot0, "curAttrNode")

		slot0.curInfoNode:addChild(slot8)
		slot8.attrLabel:setString(slot7)
		slot8.setPosition(slot8, 10, (slot6 - 1)*-25 + 110)

		slot9 = slot8.attrLabel:getContentSize()
		slot10 = UIWrap.newControl("Sprite", {
			image = "c_23.png"
		})

		slot10.setPosition(slot10, 210, 10)
		slot8.addChild(slot8, slot10)
	end

	if next(slot1) == nil then
		slot3 = slot0.createLayoutTemplateNode(slot0, "curAttrNode")

		slot0.curInfoNode:addChild(slot3)
		slot3.attrLabel:setString(TR("强化获得属性加成"))
		slot3.setPosition(slot3, 0, 105)
	end

	for slot6, slot7 in ipairs(slot2) do
		slot8 = slot0.createLayoutTemplateNode(slot0, "curAttrNode")

		slot0.nextInfoNode:addChild(slot8)
		slot8.attrLabel:setString(slot7)
		slot8.setPosition(slot8, 10, (slot6 - 1)*-25 + 110)
	end

	slot3, slot9 = Utility.getChineseNum(slot0.curLevel)

	slot0.curLvLabel:setString(TR("%s级", slot4))

	if TreasureModel.items[slot0.mModelId + 1] then
		slot0.showTitle(slot0)
	else
		slot0.nextInfoNode:removeAllChildren()

		slot5 = slot0.createLayoutTemplateNode(slot0, "curAttrNode")

		slot0.nextInfoNode:addChild(slot5)
		slot5.attrLabel:setString(TR("  已强化至最高级"))
		slot5.setPosition(slot5, 0, 75)
		slot0.expBar:setMaxValue(100)
		slot0.expBar:setCurrValue(100)
		slot0.titleOpenLabel:setString(TR("声望称号已全部激活"))
		slot0.titleOpenLabel:setPositionX(380)
	end

	if TreasureModel.items[slot0.mModelId].strNeed ~= "" then
		slot5 = Utility.analysisStrResList(TreasureModel.items[slot0.mModelId].strNeed)

		slot0.resCountLabel:setString(string.format("{%s}%s%s", Resource.getDaibiImg(slot5[1].resourceId), (slot5[1].num <= Resource.getCount(slot5[1].resourceId) and "#67A31E") or "#DF0A0A", slot7))
		slot0.needNumLabel:setString(string.format("/%s", slot5[1].num))

		slot0.costInfo = slot5
	end

	slot5 = ""

	for slot9, slot10 in pairs(TreasureLvupRelation.items[slot0.mModelId]) do
		if slot10.expMin <= slot0.mExp and slot0.mExp <= slot10.expMax then
			slot5 = slot10.showOdds

			break
		end
	end

	slot0.percentLvUpLabel:setString(slot5)
	slot0.progressBarAction(slot0)
	slot0.barLabel:setString(string.format("%s/%s", slot0.mExp, TreasureModel.items[slot0.mModelId].needExp))

	return 
end
slot0.showTitle = function (slot0, slot1, slot2)
	slot4 = nil

	for slot8 = slot0.mModelId + 1, slot0.TreasureList[#slot0.TreasureList].modelId, 1 do
		if TreasureModel.items[slot8].titleId ~= 0 then
			slot4 = TreasureModel.items[slot8]

			break
		end
	end

	if slot4 then
		slot5 = 0

		for slot9, slot10 in ipairs(slot0.TreasureList) do
			if slot4.modelId == slot10.modelId then
				slot5 = slot9
			end
		end

		slot6 = Utility.getChineseNum(slot5)

		slot0.titleOpenLabel:setString(TR("第%s重\n解锁称号：", slot5))

		if cc.FileUtils:getInstance():isFileExist(TitleConfig.items[slot4.titleId].pic .. ".skel") then
			slot8 = UIWrap.newControl("Effect", {
				loop = true,
				animation = "animation",
				dataFile = slot7.pic
			})

			slot8.setPosition(slot8, 210, 16)
			slot8.setScale(slot8, 0.8)
			slot0.titleOpenLabel:addChild(slot8)
		else
			slot8 = cc.Sprite:create(slot7.pic .. ".png")

			slot8.setAnchorPoint(slot8, cc.p(0.5, 0.5))
			slot8.setPosition(slot8, 210, 16)
			slot8.setScale(slot8, 0.8)
			slot0.titleOpenLabel:addChild(slot8)
		end
	else
		slot0.titleOpenLabel:setString(TR("声望称号已全部激活"))
		slot0.titleOpenLabel:setPositionX(380)
	end

	return 
end
slot0.progressBarAction = function (slot0)
	slot1 = (slot0.mIsAuto and 0.3) or 0.3
	slot2 = slot0.expBar:getContentSize()

	function slot3(slot0, slot1)
		return cc.Sequence:create(cc.MoveTo:create(slot1, cc.p(slot0, 5)), cc.CallFunc:create(function ()
			slot0.expBar.lightEff:setVisible(false)

			slot0.expBar.lightEff.setVisible.mNeedAction = false

			return 
		end))
	end

	if slot0.mIsLevelUp then
		slot0.expBar:setMaxValue(TreasureModel.items[slot0.mModelId - 1].needExp)
		slot0.expBar:setCurrValue(TreasureModel.items[slot0.mModelId - 1].needExp, slot1, function ()
			slot0.mIsLevelUp = false

			slot0.expBar:setMaxValue(TreasureModel.items[slot0.mModelId].needExp)
			slot0.expBar.setMaxValue:showLvUpLayer()
			slot0.expBar.setMaxValue.showLvUpLayer.expBar:setCurrValue(slot0.mExp, 0.1, function ()
				slot0.levelUpBtn:setEnabled(true)

				slot0.levelUpBtn.setEnabled.mIsAuto = false

				slot0.levelUpBtn.setEnabled:onStopAuto()

				return 
			end)
			slot0.expBar.setMaxValue.showLvUpLayer.expBar.setCurrValue.expBar.lightEff:setVisible(true)
			slot0.expBar.lightEff:runAction(slot0.expBar.lightEff(slot0.expBar.setMaxValue.showLvUpLayer.expBar.setCurrValue.expBar.lightEff.setVisible.mExp/TreasureModel.items[slot0.mModelId].needExp*TreasureModel.items[slot0.mModelId].needExp.width, 0.1))

			return 
		end)

		if slot0.mNeedAction then
			slot0.expBar.lightEff:setVisible(true)
			slot0.expBar.lightEff:runAction(slot3(slot2.width, slot1))
		end
	else
		slot0.expBar:setMaxValue(TreasureModel.items[slot0.mModelId].needExp)
		slot0.expBar:setCurrValue(slot0.mExp, slot1, function ()
			slot0.levelUpBtn:setEnabled(true)

			if slot0.levelUpBtn.setEnabled.mIsAuto then
				slot0:requestCulture()
			end

			return 
		end)

		if slot0.mNeedAction then
			slot0.expBar.lightEff:setVisible(true)
			slot0.expBar.lightEff:runAction(slot3(slot0.mExp/TreasureModel.items[slot0.mModelId].needExp*slot2.width, slot1))
		end
	end

	return 
end
slot0.getAttrString = function (slot0, slot1, slot2)
	slot4 = false

	if not TreasureModel.items[slot1] then
		return {
			TR("暂无")
		}, slot4
	end

	slot6 = Utility.analysisStrAttrList(slot3.addAttrStr)
	slot7 = {}

	for slot11, slot12 in ipairs(slot5) do
		if not slot7[slot12.fightattr] then
			slot7[slot12.fightattr] = {
				order = slot11,
				attr = slot12.fightattr,
				value = slot12.value
			}
		end

		if slot12.fightattr == FightAttrType.eSklAdd then
			slot4 = true
		end
	end

	slot8 = 0

	for slot12, slot13 in pairs(slot7) do
		slot8 = slot8 + 1
	end

	if slot2 then
		slot10 = math.floor(slot0.mExp/slot3.needExp/slot3.expDuanNum)

		for slot14, slot15 in ipairs(slot6) do
			if not slot7[slot15.fightattr] then
				slot7[slot15.fightattr] = {
					order = slot8 + slot14,
					attr = slot15.fightattr,
					value = slot15.value*slot10
				}
			else
				slot7[slot15.fightattr].value = slot7[slot15.fightattr].value + slot15.value*slot10
			end
		end
	end

	slot9 = {}

	for slot13, slot14 in pairs(slot7) do
		table.insert(slot9, slot14)
	end

	table.sort(slot9, function (slot0, slot1)
		return slot0.order < slot1.order
	end)

	slot10 = {}

	for slot14, slot15 in ipairs(slot9) do
		slot16 = nil

		table.insert(slot10, (Utility.isAttrNeedPercent(slot15.attr) and ((slot2 or TR("全体%s#386d00+", FightAttrTypeName[slot15.attr])) and TR("全体%s+", FightAttrTypeName[slot15.attr])) .. slot15.value/100 .. "%") or ((slot2 or TR("全体%s#386d00+", FightAttrTypeName[slot15.attr])) and TR("全体%s+", FightAttrTypeName[slot15.attr])) .. slot15.value)
	end

	return slot10, slot4
end
slot0.onAutoLevelUp = function (slot0, slot1)
	slot0.mIsAuto = true

	slot0.createUISubTree(slot0, "enTouchLayer")
	ui.addTouchEvent({
		swallowTouch = true,
		node = slot0.enTouchLayer
	})
	slot0.requestCulture(slot0)

	return 
end
slot0.onStopAuto = function (slot0)
	if slot0.enTouchLayer then
		slot0.enTouchLayer:removeFromParent()

		slot0.enTouchLayer = nil
	end

	slot0.mIsAuto = false

	return 
end
slot0.onLevelUpOnce = function (slot0, slot1)
	slot1.setEnabled(slot1, false)
	slot0.requestCulture(slot0)

	return 
end
slot0.showLvUpLayer = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.TreasurStepUpLayer",
		data = {
			curModelId = slot0.mModelId - 1,
			nextModelId = slot0.mModelId,
			curLv = slot0.curLevel,
			guideCallBack = function ()
				slot0:executeGuide()

				return 
			end
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onTitleBtn = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.PlayerTitleLayer",
		data = {
			callback = function ()
				slot0:showMyInfo()

				return 
			end
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onDrumBtn = function (slot0)
	if not Utility.moduleIsOpen(ModuleSub.ePlayerDrum, true) then
		return 
	end

	slot0.mDrumModelId = PlayerDrumModel.items[1].modelId

	for slot6, slot7 in pairs(slot2) do
		if slot7.ModelId == slot1 then
			slot0.mStarLv = slot7.StarLv
		end
	end

	if slot0.mStarLv then
		LayerManager.addLayer({
			cleanUp = false,
			name = "player.DrumLvUpLayer",
			zOrder = Enums.ZOrderType.ePopLayer
		})
	end

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "Treasure",
		methodData = {},
		successCallback = function (slot0)
			slot0.mModelId = slot0.ModelId
			slot0.mExp = slot0.Exp
			slot0.mDirectUpOdds = slot0.DirectUpOdds/100

			for slot4, slot5 in ipairs(slot0.TreasureList) do
				if slot0.mModelId == slot5.modelId then
					slot0.curLevel = slot4
				end
			end

			slot0:refreshAttrLabel()

			return 
		end
	})

	return 
end
slot0.requestCulture = function (slot0)
	if not Resource.isEnough(slot0.costInfo[1].resourceId, slot0.costInfo[1].num, false) then
		LayerManager.setRestoreData("player.PlayerMainLayer", {
			defaultModuleId = ModuleSub.eTreasure
		})
		LayerManager.addLayer({
			cleanUp = false,
			name = "commonlayer.GoodsGetWaysLayer",
			data = {
				resourceId = slot0.costInfo[1].resourceId
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
		slot0.levelUpBtn:setEnabled(true)
		slot0.onStopAuto(slot0)

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "Culture",
		moduleName = "Treasure",
		methodData = {},
		successCallback = function (slot0)
			slot0.mModelId = slot0.ModelId
			slot0.mExp = slot0.Exp
			slot0.mDirectUpOdds = slot0.DirectUpOdds/100

			for slot4, slot5 in ipairs(slot0.TreasureList) do
				if slot0.mModelId == slot5.modelId and slot0.curLevel ~= slot4 then
					slot0.mIsLevelUp = true
					slot0.curLevel = slot4
				end
			end

			slot0.mNeedAction = true

			slot0:refreshAttrLabel()
			MqAudio.playEffect("shengwangjindutiao.mp3")

			return 
		end,
		failedCallback = function ()
			slot0.levelUpBtn:setEnabled(true)
			slot0.levelUpBtn.setEnabled:onStopAuto()

			return 
		end
	})

	return 
end
slot0.executeGuide = function (slot0)
	Guide.manager:exeGuideList({
		[8003] = {
			clickNode = slot0.chenghao
		},
		[202003] = {
			clickNode = slot0.tulongdao
		}
	})

	return 
end

return slot0
