slot0 = class("MaterialSweepLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 128)
	})
end)
slot0.uiTree = {
	{
		name = "sweepBox",
		cType = "MsgBoxBg",
		params = {
			hideCloseButton = true,
			cancelCallback = "onCancelAction",
			image = "tc_2.png",
			okCallback = "onOkAction",
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 580,
				height = 480
			},
			titleText = TR("扫荡")
		},
		children = {
			{
				name = "untitled1",
				cType = "Label",
				params = {
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 290,
						y = 420
					},
					text = TR("扫荡信息")
				},
				children = {
					{
						name = "untitled2",
						cType = "Sprite",
						params = {
							image = "c_36.png",
							pos = {
								x = -120,
								y = 10
							}
						},
						children = {}
					},
					{
						name = "untitled3",
						cType = "Sprite",
						params = {
							scale = -1,
							image = "c_36.png",
							pos = {
								x = 210,
								y = 10
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled4",
				cType = "Label",
				params = {
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 290,
						y = 272
					},
					text = TR("扫荡次数")
				},
				children = {
					{
						name = "untitled5",
						cType = "Sprite",
						params = {
							image = "c_36.png",
							pos = {
								x = -120,
								y = 10
							}
						},
						children = {}
					},
					{
						name = "untitled6",
						cType = "Sprite",
						params = {
							scale = -1,
							image = "c_36.png",
							pos = {
								x = 210,
								y = 10
							}
						},
						children = {}
					}
				}
			},
			{
				name = "goodCard",
				cType = "CardNode",
				params = {
					allowClick = true,
					pos = {
						x = 150,
						y = 352
					}
				},
				children = {
					{
						name = "badgeText",
						cType = "BadgeText",
						params = {
							fontSize = 22,
							image = "c_76.png",
							anchor = {
								x = 1,
								y = 1
							},
							fontPos = {
								x = 25,
								y = 50
							},
							pos = {
								x = 80,
								y = 80
							},
							text = TR("双倍")
						},
						children = {}
					}
				}
			},
			{
				name = "needNum",
				cType = "Label",
				params = {
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 220,
						y = 370
					},
					text = TR("需要数量：123")
				},
				children = {}
			},
			{
				name = "ownNum",
				cType = "Label",
				params = {
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 220,
						y = 330
					},
					text = TR("拥有数量：123")
				},
				children = {}
			},
			{
				name = "sweepNum",
				cType = "Label",
				params = {
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 60,
						y = 222
					},
					text = TR("扫荡次数：")
				},
				children = {}
			},
			{
				name = "countView",
				cType = "SelectCountView",
				params = {
					scale = 0.9,
					maxCount = 100,
					changeCallback = "onChangeAction",
					currSelCount = 1,
					pos = {
						x = 360,
						y = 222
					},
					size = {
						width = 450,
						height = 50
					}
				},
				children = {}
			},
			{
				name = "needVIT",
				cType = "Label",
				params = {
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 60,
						y = 177
					},
					text = TR("消耗干粮：")
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mChapterId = slot1.chapterId or 11
	slot0.mModelID = slot1.modelID or 1111
	slot0.mNeedNum = slot1.needNum or 100
	slot0.mCallback = slot1.callback or nil
	slot0.mSweepType = slot1.sweepType or 1
	slot2, slot3 = nil

	if slot0.mSweepType == 2 then
		slot2 = PveChapterModel.items[slot1.chapterId].elitesBanditsNeed
		slot3 = PveChapterModel.items[slot1.chapterId].elitesBanditsOutPut
	else
		slot2 = PveChapterModel.items[slot1.chapterId].baseBanditsNeed
		slot3 = PveChapterModel.items[slot1.chapterId].baseBanditsOutPut
	end

	slot0.mCostItem = Utility.analysisStrResList(slot2)[1]
	slot0.mOutPutItem = {}

	for slot7, slot8 in pairs(Utility.analysisStrResList(slot3)) do
		if slot8.resourceId == slot0.mModelID then
			slot0.mOutPutItem = slot8
		end
	end

	slot0.mShowDouble = PlayerAttrObj:isModuleDoubleIncome(ModuleSub.ePveMoppingUp)

	slot0.super.ctor(slot0)

	slot0.mSweepNum = 1

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot1 = 1

	if slot0.mNeedNum <= Resource.getCount(slot0.mModelID) then
		slot1 = 1
	elseif math.ceil((slot0.mNeedNum - Resource.getCount(slot0.mModelID))/((slot0.mShowDouble and slot0.mOutPutItem.num*2) or slot0.mOutPutItem.num))*slot0.mCostItem.num <= Resource.getCount(slot0.mCostItem.resourceId) then
		slot1 = slot3
	elseif math.floor(Resource.getCount(slot0.mCostItem.resourceId)/slot0.mCostItem.num) == 0 then
		slot1 = 1
	end

	if 100 < slot1 then
		slot1 = 100
	end

	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "countView" then
			slot1.currSelCount = slot0
		end

		return 
	end)

	slot0.mSweepNum = slot1

	slot0.goodCard:setCardData({
		modelId = slot0.mModelID,
		num = slot0.mNeedNum
	}, {
		Enums.CardShowAttr.eName
	})
	slot0.needNum:setString(TR("需要数量: %s", slot0.mNeedNum))
	slot0.refreshUI(slot0)

	return 
end
slot0.getTextColor = function (slot0, slot1, slot2)
	slot3 = nil

	return (slot2 <= slot1 and "#258711") or "#ea2c00"
end
slot0.onChangeAction = function (slot0, slot1)
	slot0.mSweepNum = slot1

	slot0.refreshUI(slot0)

	return 
end
slot0.refreshUI = function (slot0)
	slot0.needVIT:setString(TR("消耗干粮：{%s}%s%s/%s", Resource.getDaibiImg(slot0.mCostItem.resourceId), slot0.getTextColor(slot0, slot3, slot2), Utility.numberWithUnit(slot2), Utility.numberWithUnit(Resource.getCount(slot0.mCostItem.resourceId))))

	slot5 = 0

	slot0.badgeText:setScale(0.7)

	if slot0.mShowDouble then
		slot0.badgeText:setVisible(true)

		slot5 = slot0.mOutPutItem.num*slot0.mSweepNum*2
	else
		slot0.badgeText:setVisible(false)

		slot5 = slot0.mOutPutItem.num*slot0.mSweepNum
	end

	slot0.ownNum:setString(TR("拥有数量: %s%s", slot0.getTextColor(slot0, Resource.getCount(slot0.mModelID) + slot5, slot0.mNeedNum), Resource.getCount(slot0.mModelID) + slot5))

	return 
end
slot0.onOkAction = function (slot0)
	if Resource.isEnough(slot0.mCostItem.resourceId, slot0.mCostItem.num*slot0.mSweepNum, true) then
		slot0.requestMoppingUp(slot0)
	end

	return 
end
slot0.onCancelAction = function (slot0)
	if slot0.mCallback then
		slot0.mCallback()
	end

	LayerManager.removeLayer(slot0)

	return 
end
slot0.requestMoppingUp = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "MoppingUp",
		moduleName = "PveChapter",
		methodData = {
			slot0.mChapterId,
			slot0.mSweepNum,
			slot0.mSweepType
		},
		successCallback = function (slot0)
			slot1 = slot0.ResourcesList
			slot2 = slot0.RewardList
			slot3 = {}

			for slot7 = 1, slot0.mSweepNum, 1 do
				table.insert(slot3, slot1)
			end

			LayerManager.addLayer({
				cleanUp = false,
				name = "pve.DlgSweepBanditsResultLayer",
				data = {
					showList = slot3,
					otherShowList = slot2
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})

			if slot0.IsTriggerShop then
				ui.showMessageBox({
					text = "偶遇宝阁商人，是否立即前往？",
					titleText = TR("限时商店"),
					msgBoxParams = {
						needTouchClose = false,
						btnPosY = 60
					},
					okCallback = function ()
						LayerManager.addLayer({
							cleanUp = false,
							name = "pve.PveTimeLimitStoreLayer",
							zOrder = Enums.ZOrderType.ePopLayer
						})

						return 
					end,
					cancelCallback = function ()
						LayerManager.removeLayer(LayerManager.removeLayer)

						return 
					end
				})
			end

			slot0.mSweepNum = 1

			slot0.countView:setCount(1)
			EventAuto:postEvent(EventDefine.eRefreshTrain)

			if slot0.mCallback then
				slot0.mCallback(true)
			end

			LayerManager.removeLayer(slot0)

			return 
		end
	})

	return 
end

return slot0
