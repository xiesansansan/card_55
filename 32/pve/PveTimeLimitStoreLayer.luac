slot0 = class("PveTimeLimitStoreLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "bgSprite",
		cType = "MsgBoxBg",
		params = {
			posApt = 1,
			image = "sc_2.png",
			closeAction = "onCloseAction",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled16",
				cType = "Sprite",
				params = {
					image = "xgnkq_1.png",
					pos = {
						x = 436,
						y = 427
					}
				},
				children = {
					{
						name = "untitled17",
						cType = "Sprite",
						params = {
							image = "fb_33.png",
							pos = {
								x = 149.5,
								y = 25
							}
						},
						children = {}
					}
				}
			},
			{
				name = "timeText",
				cType = "Label",
				params = {
					isRichText = true,
					text = "",
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 437,
						y = 43.34
					}
				},
				children = {}
			},
			{
				name = "untitled3",
				cType = "Label",
				params = {
					color = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 437,
						y = 357.24
					},
					text = TR("关闭以后可在首页上方打开界面")
				},
				children = {}
			},
			{
				name = "untitled13",
				cType = "Scale9Sprite",
				params = {
					image = "c_93.png",
					pos = {
						x = 530,
						y = 388.39
					},
					size = {
						width = 620,
						height = 30
					}
				},
				children = {
					{
						name = "tipsLabel",
						cType = "Label",
						params = {
							fontSize = 22,
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							pos = {
								x = 310,
								y = 15
							},
							text = TR("少侠，在此相遇即是缘分，不如与我探讨一番武林风云？")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled12",
				cType = "ClippingNode",
				params = {
					alpha = 1,
					anchor = {
						x = 1,
						y = 0
					},
					pos = {
						x = 207.29,
						y = 14.19
					},
					size = {
						width = 500,
						height = 500
					}
				},
				children = {
					{
						name = "heroSprite",
						cType = "Sprite",
						params = {
							image = "lh_12104.png",
							pos = {
								x = 373.57,
								y = 187.07
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled10",
				cType = "Scale9Sprite",
				params = {
					image = "c_94.png",
					anchor = {
						x = 0.5,
						y = 1
					},
					pos = {
						x = 517.25,
						y = 344.81
					},
					size = {
						width = 630,
						height = 280
					}
				},
				children = {}
			},
			{
				name = "goodsList",
				cType = "ListView",
				params = {
					direction = false,
					anchor = {
						x = 0.5,
						y = 1
					},
					pos = {
						x = 517.25,
						y = 344.81
					},
					size = {
						width = 630,
						height = 280
					}
				},
				children = {
					{
						name = "goodsLayout",
						cType = "Layout",
						custom = {
							{
								value = "costNew-text",
								name = "cost",
								type = "string"
							},
							{
								value = "buyBtn-num",
								name = "num",
								type = "string"
							},
							{
								value = "buyBtn-groupId",
								name = "groupId",
								type = "string"
							}
						},
						params = {
							size = {
								width = 150,
								height = 280
							}
						},
						children = {
							{
								name = "untitled9",
								cType = "Sprite",
								params = {
									image = "qxzl_2.png",
									anchor = {
										x = 0.5,
										y = 1
									},
									pos = {
										x = 75,
										y = 259
									}
								},
								children = {}
							},
							{
								name = "card",
								cType = "CardNode",
								params = {
									scale = 0.9,
									allowClick = true,
									pos = {
										x = 75,
										y = 204
									}
								},
								children = {
									{
										name = "untitled11",
										cType = "BadgeText",
										params = {
											image = "c_76.png",
											anchor = {
												x = 1,
												y = 1
											},
											pos = {
												x = 88,
												y = 88
											},
											text = TR("超值")
										},
										children = {}
									}
								}
							},
							{
								name = "price",
								cType = "ResLabel",
								params = {
									modelId = 1111,
									num = 0,
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 45,
										y = 129.14
									}
								},
								children = {}
							},
							{
								name = "buyBtn",
								cType = "Button",
								custom = {
									{
										value = 1,
										name = "num",
										type = "integer"
									},
									{
										value = 1,
										name = "groupId",
										type = "integer"
									}
								},
								params = {
									image = "c_27.png",
									clickAction = "onBuyAction",
									scale = 1,
									pos = {
										x = 75,
										y = 54
									},
									titleText = TR("购  买")
								},
								children = {}
							}
						}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0, {
		swallow = true
	})
	slot0.initUI(slot0)
	slot0.getShopInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.refreshUI = function (slot0)
	slot0.goodsList:removeAllChildren()

	for slot4, slot5 in ipairs(slot0.mGoodsIdList) do
		slot7 = slot0.createLayoutTemplateNode(slot0, "goodsLayout", {
			disPic = "c_74.png",
			cost = TR("sadad"),
			num = PveBanditsShopRelation.items[slot5.num].num,
			groupId = PveBanditsShopRelation.items[slot5.num].groupId
		})

		slot7.card:setCardData({
			modelId = Utility.analysisStrResList(PveBanditsShopRelation.items[slot5.num].sellStr)[1].resourceId,
			num = Utility.analysisStrResList(PveBanditsShopRelation.items[slot5.num].sellStr)[1].num
		}, {
			Enums.CardShowAttr.eName,
			Enums.CardShowAttr.eNum
		})

		slot10 = Utility.analysisStrResList(PveBanditsShopRelation.items[slot5.num].originalPrice)[1]

		slot7.price:setType(Utility.analysisStrResList(PveBanditsShopRelation.items[slot5.num].buyNeed)[1].resourceId)
		slot7.price:setString(Utility.analysisStrResList(PveBanditsShopRelation.items[slot5.num].buyNeed)[1].num)

		if slot5.isBuy then
			slot7.buyBtn:setEnabled(false)
			slot7.buyBtn:setTitleText(TR("已购买"))
		end

		slot0.goodsList:pushBackCustomItem(slot7)
	end

	slot0.timeText:stopAllActions()
	Utility.schedule(slot0.timeText, function ()
		if 0 <= slot0.mLastTime - Player:getCurrentTime() then
			slot0.timeText:setString(TR("神秘人将在%s%s%s后离去", "#252525", MqTime.formatAsDay(slot0), "#252525"))
		else
			slot0.timeText:stopAllActions()
			slot0.timeText:setString(TR("活动已结束"))
		end

		return 
	end, 1)

	return 
end
slot0.onBuyAction = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "Buy",
		moduleName = "PveShop",
		methodData = {
			slot1.groupId,
			slot1.num
		},
		successCallback = function (slot0)
			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			slot0.mGoodsIdList = {}

			for slot4, slot5 in pairs(slot0.PvpShopInfo.ShopInfo) do
				slot6 = {}

				for slot10, slot11 in pairs(slot5) do
					slot6.num = tonumber(slot10)
					slot6.isBuy = slot11
				end

				table.insert(slot0.mGoodsIdList, slot6)
			end

			table.sort(slot0.mGoodsIdList, function (slot0, slot1)
				return slot0.num < slot1.num
			end)

			slot0.mLastTime = slot0.PvpShopInfo.EndDate

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.onCloseAction = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.getShopInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetShopInfo",
		moduleName = "PveShop",
		methodData = {},
		successCallback = function (slot0)
			dump(slot0, "获取竞技场商店信息")

			slot0.mGoodsIdList = {}

			for slot4, slot5 in pairs(slot0.ShopInfo) do
				slot6 = {}

				for slot10, slot11 in pairs(slot5) do
					slot6.num = tonumber(slot10)
					slot6.isBuy = slot11
				end

				table.insert(slot0.mGoodsIdList, slot6)
			end

			table.sort(slot0.mGoodsIdList, function (slot0, slot1)
				return slot0.num < slot1.num
			end)

			slot0.mLastTime = slot0.EndDate

			slot0:refreshUI()

			return 
		end
	})

	return 
end

return slot0
