slot0 = class("DlgRecruitLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 125)
	})
end)
slot0.uiTree = {
	{
		name = "mBgSprite",
		cType = "MsgBoxBg",
		params = {
			actionCallback = "onActionEnd",
			closeAction = "onCloseLayer",
			posApt = 1,
			image = "c_pure.png",
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 820,
				height = 400
			}
		},
		children = {
			{
				name = "untitled4",
				cType = "Node",
				params = {
					pos = {
						x = 120,
						y = 44
					}
				},
				children = {
					{
						name = "mSingleInSprite",
						cType = "Sprite",
						params = {
							image = "jg_19.png",
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = -65,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "mSingleOutSprite",
						cType = "Sprite",
						params = {
							image = "jg_18.png",
							anchor = {
								x = 0.5,
								y = 0
							},
							pos = {
								x = 10,
								y = -3
							}
						},
						children = {
							{
								name = "mSingleNameSprite",
								cType = "Sprite",
								params = {
									image = "jg_22.png",
									pos = {
										x = 60.31,
										y = 227.18
									}
								},
								children = {}
							}
						}
					},
					{
						name = "mSingleSprite",
						cType = "Sprite",
						params = {
							image = "jg_10.png",
							pos = {
								x = 130,
								y = 167
							}
						},
						children = {}
					},
					{
						name = "mSingleRewardLabel",
						cType = "Label",
						params = {
							anchor = {
								x = 0,
								y = 1
							},
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 102,
								y = 162
							},
							size = {
								width = 30,
								height = 0
							},
							text = TR("侠客")
						},
						children = {}
					},
					{
						name = "mSingleNumLabel",
						cType = "Label",
						params = {
							text = "0",
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 145,
								y = 170
							}
						},
						children = {}
					},
					{
						name = "mSingleFreeLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							hide = true,
							pos = {
								x = 25,
								y = 35
							},
							text = TR("本次免费")
						},
						children = {}
					},
					{
						name = "mSingleUseLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							text = "Label",
							pos = {
								x = 25,
								y = -40
							}
						},
						children = {}
					},
					{
						name = "mSingleBtn",
						cType = "Button",
						params = {
							clickAction = "onRecruit",
							image = "c_32.png",
							pos = {
								x = 25,
								y = 0
							},
							size = {
								width = 110,
								height = 38
							},
							titleText = TR("单 抽")
						},
						children = {
							{
								name = "SingleRedDot",
								cType = "RedDot",
								params = {
									moduleId = 3601
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "untitled8",
				cType = "Node",
				params = {
					pos = {
						x = 615,
						y = 44
					}
				},
				children = {
					{
						name = "mTenInSprite",
						cType = "Sprite",
						params = {
							image = "jg_21.png",
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "mTenOutSprite",
						cType = "Sprite",
						params = {
							image = "jg_20.png",
							rotationAngle = -15,
							anchor = {
								x = 0.5,
								y = 0
							},
							pos = {
								x = 10,
								y = -5
							}
						},
						children = {
							{
								name = "mTenNameSprite",
								cType = "Sprite",
								params = {
									image = "jg_22.png",
									pos = {
										x = 60.31,
										y = 227.18
									}
								},
								children = {}
							}
						}
					},
					{
						name = "mTenSprite",
						cType = "Sprite",
						params = {
							image = "jg_8.png",
							pos = {
								x = 130,
								y = 167
							}
						},
						children = {}
					},
					{
						name = "mTenUseLabel",
						cType = "Label",
						params = {
							text = "Label",
							isRichText = true,
							pos = {
								x = 40,
								y = -40
							}
						},
						children = {}
					},
					{
						name = "mTenBtn",
						cType = "Button",
						params = {
							clickAction = "onRecruit",
							image = "c_27.png",
							pos = {
								x = 40,
								y = 0
							},
							size = {
								width = 110,
								height = 38
							},
							titleText = TR("十连抽")
						},
						children = {
							{
								name = "TenRedDot",
								cType = "RedDot",
								params = {
									moduleId = 3601
								},
								children = {}
							}
						}
					}
				}
			}
		}
	}
}
slot1 = {
	eSeniorOnceRecruit = 3,
	eLowOnceRecruit = 1,
	eSeniorTenRecruit = 4,
	eLowTenRecruit = 2
}
slot0.ctor = function (slot0, slot1)
	slot0.mIsSenior = slot1.isSenior
	slot0.mRecruitInfo = slot1.recruitInfo
	slot0.mCallback = slot1.callback
	slot0.mCloseCb = slot1.closeCb
	slot0.mGuideCallBack = slot1.guideCallBack

	slot0.super.ctor(slot0)
	slot0.initData(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.initData = function (slot0)
	slot0.mRecruitModel = {}

	for slot4, slot5 in pairs(clone(RecruitModel.items)) do
		slot0.mRecruitModel[slot5.modelId] = slot5
	end

	return 
end
slot0.onActionEnd = function (slot0)
	slot0.executeGuide(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "SingleRedDot" then
			slot1.subKey = string.format("Recruit_%s_%s", (slot0.mIsSenior and 2) or 1, (slot0.mIsSenior and 3) or 1)
		elseif slot0.name == "TenRedDot" then
			slot1.subKey = string.format("Recruit_%s_%s", (slot0.mIsSenior and 2) or 1, (slot0.mIsSenior and 4) or 2)
		end

		return 
	end)
	slot0.mSingleSprite:setTexture((slot0.mIsSenior and "jg_10.png") or "jg_7.png")
	slot0.mSingleSprite:setVisible(slot0.mIsSenior)
	slot0.mSingleNumLabel:setVisible(slot0.mIsSenior)
	slot0.mSingleRewardLabel:setVisible(slot0.mIsSenior)
	slot0.mTenSprite:setTexture((slot0.mIsSenior and "jg_9.png") or "jg_8.png")
	slot0.mSingleNameSprite:setTexture((slot0.mIsSenior and "jg_23.png") or "jg_22.png")
	slot0.mTenNameSprite:setTexture((slot0.mIsSenior and "jg_23.png") or "jg_22.png")
	slot0.refreshUI(slot0)

	return 
end
slot0.refreshUI = function (slot0)
	slot0.mSingleNumLabel:setString(slot0.mRecruitInfo.OutZiCountInfo[1].Num)
	slot0.mSingleRewardLabel:setString("")
	slot0.mSingleRewardLabel:setColor(cc.c3b(92, 167, 187))

	slot1 = (0 < slot0.mRecruitInfo.CooledInfo[3].Count and slot0.mRecruitInfo.CooledInfo[3].Count - 1) or slot0.mRecruitInfo.CooledInfo[3].Count

	if slot0.mIsSenior then
		slot0.mSingleRewardLabel:setString(TR("紫色侠客"))
		slot0.mSingleRewardLabel:setColor(cc.c3b(170, 51, 221))
		slot0.mSingleOutSprite:setPosition(cc.p(10, -5))
		slot0.mSingleOutSprite:setRotation(-15)
		slot0.mSingleInSprite:setPosition(cc.p(0, 0))
	else
		slot0.mSingleSprite:setVisible(false)
		slot0.mSingleNumLabel:setVisible(false)
		slot0.mSingleRewardLabel:setVisible(false)
		slot0.mSingleOutSprite:setPosition(cc.p(10, -3))
		slot0.mSingleOutSprite:setRotation(0)
		slot0.mSingleInSprite:setPosition(cc.p(-65, 0))
	end

	slot0.mSingleUseLabel:setString(string.format("{%s}%s%s/#ffffff%s", Resource.getDaibiImg(slot4.resourceId), (Utility.analysisStrResList(slot0.mRecruitModel[(slot0.mIsSenior and slot0.eSeniorOnceRecruit) or slot0.eLowOnceRecruit].recruitUse)[1].num <= Resource.getCount(Utility.analysisStrResList(slot0.mRecruitModel[(slot0.mIsSenior and slot0.eSeniorOnceRecruit) or slot0.eLowOnceRecruit].recruitUse)[1].resourceId) and "#56c121") or "#e8402e", slot5, slot4.num))
	slot0.mTenUseLabel:setString(string.format("{%s}%s%s/#ffffff%s", Resource.getDaibiImg(slot7.resourceId), (Utility.analysisStrResList(slot0.mRecruitModel[(slot0.mIsSenior and slot0.eSeniorTenRecruit) or slot0.eLowTenRecruit].recruitUse)[1].num <= Resource.getCount(Utility.analysisStrResList(slot0.mRecruitModel[(slot0.mIsSenior and slot0.eSeniorTenRecruit) or slot0.eLowTenRecruit].recruitUse)[1].resourceId) and "#56c121") or "#e8402e", slot8, slot7.num))

	slot0.mSingleBtn.recruitType = (slot0.mIsSenior and slot0.eSeniorOnceRecruit) or slot0.eLowOnceRecruit
	slot0.mTenBtn.recruitType = (slot0.mIsSenior and slot0.eSeniorTenRecruit) or slot0.eLowTenRecruit
	slot10 = slot0.mRecruitInfo.CooledInfo[1]

	if slot0.mIsSenior then
		slot10 = slot0.mRecruitInfo.CooledInfo[3]
	end

	return 
end
slot0.createTimeUpdate = function (slot0, slot1, slot2)
	if slot1.timeUpdate then
		slot1.stopAction(slot1, slot1.timeUpdate)

		slot1.timeUpdate = nil
	end

	slot1.timeUpdate = Utility.schedule(slot1, function ()
		if 0 < slot0 - Player:getCurrentTime() then
			slot1:setString(TR("%s后免费", MqTime.completeFormat(slot0)))
		else
			slot1:setString(TR("本次免费"))
			slot1.setString:stopAction(slot1.timeUpdate)

			slot1.setString.stopAction.timeUpdate = nil
		end

		return 
	end, 1)

	return 
end
slot0.onRecruit = function (slot0, slot1)
	if slot0.mCallback then
		slot0.mCallback(slot1.recruitType)
	end

	LayerManager.removeLayer(slot0)

	return 
end
slot0.onCloseLayer = function (slot0, slot1)
	if slot0.mCloseCb then
		slot0.mCloseCb()
	end

	LayerManager.removeLayer(slot0)

	return 
end
slot0.executeGuide = function (slot0)
	Guide.manager:exeGuideList({
		[20305] = {
			clickNode = slot0.mSingleBtn
		}
	})

	return 
end

return slot0
