slot0 = class("LegendRecruitChooseLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			hideCloseButton = true,
			posApt = 1,
			image = "c_pure.png",
			pos = {
				x = 568,
				y = 320
			},
			size = {
				width = 830,
				height = 355
			}
		},
		children = {
			{
				name = "leftBg",
				cType = "Sprite",
				params = {
					image = "tc_2.png",
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 0,
						y = 166
					}
				},
				children = {
					{
						name = "untitled16",
						cType = "Sprite",
						params = {
							image = "tc_4.png",
							pos = {
								x = 257.5,
								y = 350
							}
						},
						children = {
							{
								name = "untitled17",
								cType = "Label",
								params = {
									fontSize = 24,
									pos = {
										x = 144,
										y = 17.5
									},
									text = TR("更换侠客")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled20",
						cType = "Scale9Sprite",
						params = {
							image = "c_24.png",
							pos = {
								x = 257,
								y = 215
							},
							size = {
								width = 450,
								height = 195
							}
						},
						children = {}
					},
					{
						name = "untitled19",
						cType = "Label",
						params = {
							fontSize = 24,
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 257,
								y = 259
							},
							text = TR("当前选择侠客:")
						},
						children = {}
					},
					{
						name = "curCardNode",
						cType = "CardNode",
						params = {
							allowClick = true,
							pos = {
								x = 257,
								y = 194
							}
						},
						children = {}
					},
					{
						name = "untitled24",
						cType = "Button",
						params = {
							clickAction = "onCancelAction",
							image = "c_27.png",
							pos = {
								x = 150,
								y = 75
							},
							size = {
								width = 130,
								height = 45
							},
							titleText = TR("取 消")
						},
						children = {}
					},
					{
						name = "untitled25",
						cType = "Button",
						params = {
							clickAction = "onSureAction",
							image = "c_27.png",
							pos = {
								x = 375,
								y = 75
							},
							size = {
								width = 130,
								height = 45
							},
							titleText = TR("确 定")
						},
						children = {}
					}
				}
			},
			{
				name = "rightBg",
				cType = "Scale9Sprite",
				params = {
					image = "zm_83.png",
					anchor = {
						x = 1,
						y = 0
					},
					pos = {
						x = 822,
						y = 7
					},
					size = {
						width = 320,
						height = 350
					}
				},
				children = {
					{
						name = "noDataLabel",
						cType = "Label",
						params = {
							fontSize = 24,
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 160,
								y = 185
							},
							text = TR("没有侠客可以选择")
						},
						children = {}
					},
					{
						name = "mGridView",
						cType = "GridView",
						params = {
							createColCb = "onCreateGridItem",
							itemNum = 1,
							selectIndex = 1,
							colCount = 3,
							celHeight = 90,
							pos = {
								x = 160,
								y = 156
							},
							size = {
								width = 270,
								height = 230
							}
						},
						children = {
							{
								name = "gridCard",
								cType = "TemplateNode",
								custom = {
									{
										value = "untitled28-initParams",
										name = "cardInfo",
										type = "string"
									}
								},
								params = {
									pos = {
										x = 11.35,
										y = 149.99
									},
									size = {
										width = 90,
										height = 80
									}
								},
								children = {
									{
										name = "untitled28",
										cType = "CardNode",
										params = {
											scale = 0.95,
											childName = "cardNode",
											allowClick = true,
											initParams = {},
											pos = {
												x = 45,
												y = 40
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "mTabView",
						cType = "TabView",
						params = {
							onSelectChange = "cbTabSelectChange",
							normalImage = "cz_113.png",
							isNeedOutline = false,
							lightedImage = "cz_112.png",
							direction = false,
							btnInfos = {
								{
									title = TR("15资质")
								},
								{
									title = TR("16资质")
								}
							},
							pos = {
								x = 22,
								y = 275.11
							},
							selectTitleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							size = {
								width = 280,
								height = 55
							},
							titleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							titleOffset = {
								x = 0.5,
								y = 0.4
							}
						},
						children = {}
					},
					{
						name = "introLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 160,
								y = 25
							},
							text = TR("(招募可得200个碎片)")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled30",
				cType = "Label",
				params = {
					outlineColor = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 415,
						y = -2.87
					},
					text = TR("点击空白处关闭")
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.mCurSelectId = slot1.curSelectModelId or 0
	slot0.mChooseList = slot1.chooseList or {}
	slot0.mCallBack = slot1.callBack
	slot0.mChooseQuality = Resource.getModelInfo(slot0.mCurSelectId).quality

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "mTabView" then
			slot1.selectTag = (slot0.mChooseQuality == 15 and 1) or 2
		end

		return 
	end)
	slot0.refreshLeftCardNode(slot0)

	return 
end
slot0.cbTabSelectChange = function (slot0, slot1)
	slot0.mChooseQuality = (slot1 == 1 and 15) or 16

	slot0.refreshHeroList(slot0)
	slot0.introLabel:setString(TR("(招募可得%s个碎片)", (slot1 == 1 and 200) or 100))

	return 
end
slot0.refreshHeroList = function (slot0)
	slot0.mCurHeroList = slot0.getHeroListByQuality(slot0, slot0.mChooseQuality)

	slot0.mGridView:setItemNum(#slot0.mCurHeroList)
	slot0.mGridView:setSelect(0)

	for slot4, slot5 in ipairs(slot0.mCurHeroList) do
		if slot5 == slot0.mCurSelectId then
			slot0.mGridView:setSelect(slot4)

			break
		end
	end

	slot0.mGridView:jumpToTop()
	slot0.noDataLabel:setVisible(#slot0.mCurHeroList <= 0)

	return 
end
slot0.onCreateGridItem = function (slot0, slot1, slot2, slot3)
	if not slot0.mCurHeroList[slot2] then
		return 
	end

	if slot3 then
		attrs = {
			Enums.CardShowAttr.eNum,
			Enums.CardShowAttr.eSelected
		}
	else
		attrs = {
			Enums.CardShowAttr.eNum
		}
	end

	slot6 = slot0.createLayoutTemplateNode(slot0, "gridCard", {
		cardInfo = {
			cardInfo = {
				modelId = tonumber(slot4)
			},
			showAttrs = attrs
		},
		numStr = string.format("%s%%", 25)
	})

	slot6.cardNode:setClickAction(function ()
		if slot0 then
			slot1.cardNode.defaultCardClick()
		else
			slot2.mGridView:setSelect(slot3)

			slot3.mCurSelectId = tonumber(slot4)

			slot2:refreshLeftCardNode()
		end

		return 
	end)
	slot6.setAnchorPoint(slot6, cc.p(0.5, 0.5))
	slot6.setPosition(slot6, slot1.getContentSize(slot1).width*0.5, slot1.getContentSize(slot1).height*0.5)
	slot1.addChild(slot1, slot6)

	return 
end
slot0.refreshLeftCardNode = function (slot0)
	slot0.curCardNode:setCardData({
		modelId = slot0.mCurSelectId
	}, {
		Enums.CardShowAttr.eName
	})

	return 
end
slot0.onSureAction = function (slot0)
	dump(slot0.mCurSelectId, "self.mCurSelectId")

	if slot0.mCallBack then
		slot0.mCallBack(slot0.mCurSelectId)
	end

	LayerManager.removeLayer(slot0)

	return 
end
slot0.onCancelAction = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.getHeroListByQuality = function (slot0, slot1)
	slot2 = {}

	for slot6, slot7 in pairs(slot0.mChooseList) do
		if Resource.getModelInfo(slot7).quality == slot1 then
			table.insert(slot2, clone(slot7))
		end
	end

	return slot2
end

return slot0
