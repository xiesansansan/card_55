slot0 = class("RecruitMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled49",
		cType = "Node",
		params = {
			isFullScale = true,
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "mRecruitEffect",
				cType = "Effect",
				params = {
					isFullScale = true,
					dataFile = "effect_ui_xingjiuguan",
					animation = "daiji",
					pos = {
						x = 0,
						y = 1
					}
				},
				children = {
					{
						name = "diamondBtn",
						cType = "Button",
						params = {
							image = "jg_33.png",
							clickAction = "onSeniorRecruit",
							pos = {
								x = -366.06,
								y = -22.94
							}
						},
						children = {
							{
								name = "untitled45",
								cType = "RedDot",
								params = {
									subKey = "Recruit_2",
									moduleId = 3601
								},
								children = {}
							},
							{
								name = "activityHintSprite",
								cType = "Sprite",
								params = {
									image = "c_121.png",
									hide = true,
									pos = {
										x = -12.51,
										y = 114.66
									}
								},
								children = {}
							}
						}
					},
					{
						name = "untitled52",
						cType = "Button",
						custom = {
							{
								value = 2,
								name = "typeId",
								type = "integer"
							}
						},
						params = {
							image = "c_50.png",
							clickAction = "onClickShowHero",
							pos = {
								x = -365.79,
								y = -107.18
							}
						},
						children = {}
					},
					{
						name = "untitled50",
						cType = "Button",
						params = {
							image = "c_pure.png",
							clickAction = "onSeniorRecruit",
							pos = {
								x = -227.17,
								y = -17.64
							},
							size = {
								width = 215.77,
								height = 212.83
							}
						},
						children = {}
					},
					{
						name = "untitled41",
						cType = "Button",
						params = {
							image = "jg_16.png",
							clickAction = "onNormalRecruit",
							pos = {
								x = 156.2,
								y = 85.94
							}
						},
						children = {
							{
								name = "untitled44",
								cType = "RedDot",
								params = {
									subKey = "Recruit_1",
									moduleId = 3601
								},
								children = {}
							}
						}
					},
					{
						name = "untitled51",
						cType = "Button",
						params = {
							image = "c_pure.png",
							clickAction = "onNormalRecruit",
							pos = {
								x = 234.12,
								y = 49.22
							},
							size = {
								width = 125.07,
								height = 150.38
							}
						},
						children = {}
					},
					{
						name = "untitled53",
						cType = "Button",
						custom = {
							{
								value = 1,
								name = "typeId",
								type = "integer"
							}
						},
						params = {
							image = "c_50.png",
							clickAction = "onClickShowHero",
							pos = {
								x = 159.48,
								y = 17.76
							}
						},
						children = {}
					},
					{
						name = "mNvNode",
						cType = "Node",
						params = {
							pos = {
								x = 153.81,
								y = 47.2
							},
							size = {
								width = 100,
								height = 100
							}
						},
						children = {}
					},
					{
						name = "mNanNode",
						cType = "Node",
						params = {
							pos = {
								x = -49.91,
								y = -22.46
							},
							size = {
								width = 100,
								height = 100
							}
						},
						children = {}
					},
					{
						name = "mTipSprite",
						cType = "Scale9Sprite",
						params = {
							hide = true,
							image = "bp_4.png",
							capInsets = {
								x = 50,
								height = 1,
								width = 1,
								y = 10
							},
							pos = {
								x = -10.58,
								y = 25.74
							},
							size = {
								width = 229.55,
								height = 74.81
							}
						},
						children = {
							{
								name = "mTipLabel",
								cType = "Label",
								params = {
									emptyInit = true,
									align = 1,
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = 116.02,
										y = 39.75
									},
									size = {
										width = 210,
										height = 0
									},
									text = TR("十连元宝招募必得橙色侠客")
								},
								children = {}
							}
						}
					},
					{
						name = "mLegendBtn",
						cType = "Button",
						params = {
							image = "tb_sy_hd_56.png",
							clickAction = "onLegendRecruit",
							pos = {
								x = 463.72,
								y = 206.46
							}
						},
						children = {
							{
								name = "untitled67",
								cType = "RedDot",
								params = {
									moduleId = 25300
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "rightBg",
				cType = "Sprite",
				params = {
					zOrder = 2,
					hide = true,
					image = "xkxx_68.png",
					anchor = {
						x = 0.5,
						y = 0
					},
					pos = {
						x = 352.06,
						y = -257.09
					}
				},
				children = {
					{
						name = "campSprite",
						cType = "Sprite",
						params = {
							image = "xkxx_20.png",
							anchor = {
								x = 0.5,
								y = 0
							},
							pos = {
								x = -20,
								y = 75
							}
						},
						children = {}
					},
					{
						name = "untitled66",
						cType = "Sprite",
						params = {
							image = "cqzm_17.png",
							anchor = {
								x = 0.5,
								y = 0
							},
							pos = {
								x = 33,
								y = 205
							}
						},
						children = {}
					},
					{
						name = "nameLabel",
						cType = "Label",
						params = {
							fontSize = 42,
							anchor = {
								x = 0.5,
								y = 1
							},
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 22,
								y = 207
							},
							size = {
								width = 20,
								height = 0
							},
							text = TR("杨过")
						},
						children = {}
					},
					{
						name = "skillBtn",
						cType = "Button",
						params = {
							clickAction = "onEffectShowClick",
							image = "tb_gn_121.png",
							anchor = {
								x = 0.5,
								y = 1
							},
							pos = {
								x = 33,
								y = 40
							}
						},
						children = {}
					},
					{
						name = "activityTimeLabel",
						cType = "Label",
						params = {
							emptyInit = true,
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = -833,
								y = 473.21
							},
							text = TR("精英招募倒计时：")
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled1",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled4",
				cType = "Button",
				params = {
					clickAction = "onCloseLayer",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled6",
						cType = "Sprite",
						params = {
							image = "jg_6.png",
							anchor = {
								x = 0,
								y = 1
							},
							pos = {
								x = -35,
								y = 30
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled38",
				cType = "Button",
				params = {
					clickAction = "onRule",
					image = "c_3.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 195,
						y = -5
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled5",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {}
	}
}
slot2 = {
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eLowOnceRecruit"]] = 1,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eLowTenRecruit"]] = 10,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eSeniorOnceRecruit"]] = 1,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eSeniorTenRecruit"]] = 10,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eFriendOnceRecruit"]] = 1,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eFriendTeneRecruit"]] = 5,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eTimedOnceRecruit"]] = 1,
	[({
		eFriendOnceRecruit = 5,
		eFriendTeneRecruit = 6,
		eTimedTenRecruit = 8,
		eLowTenRecruit = 2,
		eSeniorOnceRecruit = 3,
		eLowOnceRecruit = 1,
		eSeniorTenRecruit = 4,
		eTimedOnceRecruit = 7
	})["eTimedTenRecruit"]] = 10
}
slot0.ctor = function (slot0, slot1)
	slot0.mActivityId = ActivityObj:getEntityId(ModuleSub.eTimeLimitRecruit)
	slot0.mRecruitModel = {}

	slot0.super.ctor(slot0)
	slot0.initData(slot0)
	slot0.initUI(slot0)
	slot0.requestInfo(slot0)

	slot2, slot3 = Guide.manager:getGuideInfo()

	if not slot3 and slot0.mActivityId then
		slot0.getTimeRecruitInfo(slot0)
	end

	slot0.executeGuide(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	if display.isIpadClass then
		cc.p(460, 205).x = display.minSafeScale/display.maxSafeScale*460

		slot0.mLegendBtn:setPosition(cc.p(460, 205))
	end

	slot2 = cc.EventListenerTouchOneByOne:create()

	slot2.setSwallowTouches(slot2, true)
	slot2.registerScriptHandler(slot2, slot1, cc.Handler.EVENT_TOUCH_BEGAN)
	slot0.mRecruitEffect:getEventDispatcher().addEventListenerWithSceneGraphPriority(slot3, slot2, slot0)
	slot0.mLegendBtn:setVisible(Utility.moduleIsOpen(ModuleSub.eLegendRecuit, false))
	slot0.activityHintSprite:runAction(cc.RepeatForever:create(cc.Sequence:create({
		cc.MoveBy:create(0.2, cc.p(0, 10)),
		cc.MoveBy:create(0.3, cc.p(0, -10)),
		cc.DelayTime:create(0.2)
	})))

	return 
end
slot0.initData = function (slot0)
	slot0.mRecruitModel = {}

	for slot4, slot5 in pairs(clone(RecruitModel.items)) do
		slot0.mRecruitModel[slot5.Id] = slot5
	end

	slot0.mRecruitModel[slot0.eTimedOnceRecruit] = clone(slot0.mRecruitModel[slot0.eSeniorOnceRecruit])
	slot0.mRecruitModel[slot0.eTimedTenRecruit] = clone(slot0.mRecruitModel[slot0.eSeniorTenRecruit])

	return 
end
slot0.createTipAction = function (slot0)
	slot1 = {
		TR("十连元宝招募必得紫色侠客")
	}
	slot2 = 0

	slot0.mTipSprite:setCascadeOpacityEnabled(true)
	slot0.mTipSprite:runAction(cc.RepeatForever:create(cc.Sequence:create({
		cc.CallFunc:create(function ()
			newIndex = math.random(1, #slot0)
			slot1 = (1 == newIndex or newIndex) and newIndex%#slot0 + 1

			slot2.mTipLabel:setString(slot0[slot2.mTipLabel])
			slot2.mTipSprite:setContentSize(cc.size(230, slot2.mTipLabel:getContentSize().height + 20))
			slot2.mTipLabel:setPositionY((slot2.mTipLabel.getContentSize().height + 20)*0.5 + 5)

			return 
		end),
		cc.FadeIn:create(2),
		cc.DelayTime:create(10),
		cc.FadeOut:create(2)
	})))

	return 
end
slot0.showRewardBox = function (slot0, slot1)
	if slot1 == slot0.eSeniorOnceRecruit and Resource.getSubType(slot0.mRecruitInfo.Reward[1].ResourceId) == ResourceTypeSub.eHero and (not slot0.mRecruitInfo.Reward[1].IsConvert or slot0.mRecruitInfo.Reward[1].IsConvert == false) then
		LayerManager.addLayer({
			cleanUp = false,
			name = "recruit.RecruitShowHeroLayer",
			data = {
				showFap = true,
				heroModelId = slot0.mRecruitInfo.Reward[1].ResourceId,
				IsConvert = slot0.mRecruitInfo.Reward[1].IsConvert,
				recruitItem = slot0.mRecruitModel[slot1],
				callback = function ()
					slot0:forcedResetBg()

					return 
				end,
				recruitCallBack = function ()
					slot0:recruitHero(slot0)

					return 
				end
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	else
		slot2 = {
			listInfo = slot0.mRecruitInfo.Reward,
			extraReward = slot0.mRecruitInfo.ExtraReward,
			recruitItem = slot0.mRecruitModel[slot1],
			recruitCallBack = function ()
				slot0:recruitHero(slot0)

				return 
			end,
			closeCb = function ()
				slot0:forcedResetBg()

				return 
			end,
			guideCallBack = function ()
				slot0.mGuideCallBack()
				LayerManager.removeLayer(LayerManager.removeLayer)

				return 
			end
		}

		if slot1 == slot0.eSeniorTenRecruit or slot1 == slot0.eTimedTenRecruit then
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.NewRecruitShowRewardLayer",
				data = slot2,
				zOrder = Enums.ZOrderType.ePopLayer
			})
		else
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.RecruitShowRewardLayer",
				data = slot2,
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	end

	return 
end
slot0.playEffectAction = function (slot0, slot1)
	MqAudio.playEffect("zhaomu-putong.mp3")

	slot2 = "nv_zhaomu"

	if slot1 == slot0.eSeniorOnceRecruit or slot1 == slot0.eSeniorTenRecruit or slot1 == slot0.eTimedOnceRecruit or slot1 == slot0.eTimedTenRecruit then
		slot2 = "nan_zhaomu"

		MqAudio.playEffect("zhaomu-gaoji.mp3")
	end

	slot0.playing = slot1

	slot0.mRecruitEffect:playAnimation(slot2)
	slot0.mRecruitEffect:appendAnimation("daiji")
	slot0.mRecruitEffect:registerLuaHandler("complete", function ()
		slot0.playing = nil

		slot0.mRecruitEffect:clearLuaHandler()
		slot0.mRecruitEffect.clearLuaHandler:showRewardBox(slot0.mRecruitEffect.clearLuaHandler)

		return 
	end)

	return 
end
slot0.isResEnough = function (slot0, slot1, slot2)
	return Resource.isEnough(Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1].resourceId, Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1].num, slot2 or false, )
end
slot0.moveBg = function (slot0, slot1, slot2)
	if slot0.isMove then
		return 
	end

	slot0.isMove = true

	slot0.mRecruitEffect:runAction(cc.Sequence:create({
		cc.Spawn:create({
			cc.ScaleTo:create(0.1, slot6),
			cc.MoveBy:create(0.1, cc.pMul(cc.pSub(slot3, slot4), slot6))
		}),
		cc.CallFunc:create(function ()
			if slot0 then
				slot0()
			end

			return 
		end)
	}))

	return 
end
slot0.forcedResetBg = function (slot0)
	slot0.isMove = false

	slot0.resetBg(slot0)

	return 
end
slot0.resetBg = function (slot0)
	if slot0.isMove then
		return 
	end

	slot0.isMove = true

	slot0.mRecruitEffect:runAction(cc.Sequence:create({
		cc.Spawn:create({
			cc.ScaleTo:create(0.1, 1),
			cc.MoveTo:create(0.1, cc.p(0, 2))
		}),
		cc.CallFunc:create(function ()
			slot0.isMove = false

			return 
		end)
	}))

	return 
end
slot0.recruitHero = function (slot0, slot1)
	if slot1 == slot0.eLowOnceRecruit then
		if slot0.mRecruitInfo.CooledInfo[slot1].CooledTime <= Player:getCurrentTime() or slot0.isResEnough(slot0, slot1, true) then
			slot0.requestRecruit(slot0, slot1, slot2)
		else
			slot0.forcedResetBg(slot0)
		end
	elseif slot1 == slot0.eLowTenRecruit then
		if slot0.isResEnough(slot0, slot1, true) then
			slot0.requestRecruit(slot0, slot1, false)
		else
			slot0.forcedResetBg(slot0)
		end
	elseif slot1 == slot0.eSeniorOnceRecruit then
		slot2 = slot0.mRecruitInfo.CooledInfo[slot1].CooledTime <= Player:getCurrentTime()

		if slot0.isResEnough(slot0, slot1) then
			slot0.requestRecruit(slot0, slot1, false)
		else
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.DlgRecruitBuyLayer",
				data = {
					costInfo = Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1],
					closeCb = function ()
						slot0:forcedResetBg()

						return 
					end,
					callback = function ()
						slot0:recruitHero(slot0)

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	elseif slot1 == slot0.eSeniorTenRecruit then
		if slot0.isResEnough(slot0, slot1) then
			slot0.requestRecruit(slot0, slot1, false)
		else
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.DlgRecruitBuyLayer",
				data = {
					costInfo = Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1],
					closeCb = function ()
						slot0:forcedResetBg()

						return 
					end,
					callback = function ()
						slot0:recruitHero(slot0)

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	elseif slot1 == slot0.eFriendOnceRecruit then
		if slot0.isResEnough(slot0, slot1) then
			slot0.requestRecruit(slot0, slot1, false)
		else
			ui.showFlashView(TR("侠缘不足，可于好友系统中获取"))
			slot0.forcedResetBg(slot0)
		end
	elseif slot1 == slot0.eFriendTeneRecruit then
		if slot0.isResEnough(slot0, slot1) then
			slot0.requestRecruit(slot0, slot1, false)
		else
			ui.showFlashView(TR("侠缘不足，可于好友系统中获取"))
			slot0.forcedResetBg(slot0)
		end
	elseif slot1 == slot0.eTimedOnceRecruit then
		if slot0.isResEnough(slot0, slot1) then
			slot0.requestTimeRecruit(slot0, slot1)
		else
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.DlgRecruitBuyLayer",
				data = {
					costInfo = Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1],
					closeCb = function ()
						slot0:forcedResetBg()

						return 
					end,
					callback = function ()
						slot0:recruitHero(slot0)

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	elseif slot1 == slot0.eTimedTenRecruit then
		if slot0.isResEnough(slot0, slot1) then
			slot0.requestTimeRecruit(slot0, slot1)
		else
			LayerManager.addLayer({
				cleanUp = false,
				name = "recruit.DlgRecruitBuyLayer",
				data = {
					costInfo = Utility.analysisStrResList(slot0.mRecruitModel[slot1].recruitUse)[1],
					closeCb = function ()
						slot0:forcedResetBg()

						return 
					end,
					callback = function ()
						slot0:recruitHero(slot0)

						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
		end
	end

	return 
end
slot0.refreshUI = function (slot0)
	slot0.refreshRightHero(slot0)

	return 
end
slot0.refreshRightHero = function (slot0)
	slot0.activityHintSprite:setVisible((slot0.mActivityId and true) or false)
	slot0.rightBg:setVisible(false)

	return 

	if not slot0.mActivityId or slot0.mTimedRecruitInfo.EndDate < Player:getCurrentTime() then
		slot0.rightBg:setVisible(false)

		return 
	end

	slot0.rightBg:setVisible(true)

	if cc.FileUtils:getInstance():isFileExist(HeroModel.items[slot0.mTimedRecruitInfo.UpHeroModelId].drawingPicB .. ".skel") then
		if slot0.heroEffect then
			slot0.heroEffect:removeFromParent()

			slot0.heroEffect = nil
		end

		slot0.heroEffect = UIWrap.newControl("Effect", {
			loop = true,
			animation = "animation",
			isSkewY = true,
			scale = 0.5,
			dataFile = slot2.drawingPicB
		})

		slot0.heroEffect:setPosition(cc.p(150, -150))
		slot0.rightBg:addChild(slot0.heroEffect, -1)
	end

	slot0.nameLabel:setString(slot2.name)
	slot0.skillBtn:setPositionY(slot0.nameLabel:getContentSize().height - 207)
	slot0.campSprite:setTexture(Utility.getHeroQualityImage(slot1))
	slot0.createActivityUpdateTime(slot0)

	return 
end
slot0.createActivityUpdateTime = function (slot0)
	if slot0.mActivtyUpdate then
		slot0.activityTimeLabel:stopAction(slot0.mActivtyUpdate)

		slot0.mActivtyUpdate = nil
	end

	slot0.mActivtyUpdate = Utility.schedule(slot0.activityTimeLabel, function ()
		if 0 < slot0.mTimedRecruitInfo.EndDate - Player:getCurrentTime() then
			slot0.activityTimeLabel:setString(TR("高级招募概率提升活动倒计时：%s", MqTime.completeFormat(slot0)))
		else
			slot0.activityTimeLabel:setString(TR("高级招募概率提升活动已结束"))

			if slot0.mActivtyUpdate then
				slot0.activityTimeLabel:stopAction(slot0.mActivtyUpdate)

				slot0.mActivtyUpdate = nil
			end

			slot0:refreshUI()
		end

		return 
	end, 1)

	return 
end
slot0.onCloseLayer = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onSeniorRecruit = function (slot0)
	slot0.moveBg(slot0, cc.p(slot0.mNanNode:getPosition()), function ()
		LayerManager.addLayer({
			cleanUp = false,
			name = "recruit.DlgSeniorRecruitLayer",
			data = {
				recruitInfo = slot0.mRecruitInfo,
				timedInfo = slot0.mTimedRecruitInfo,
				callback = function (slot0)
					slot0:recruitHero(slot0)

					return 
				end,
				closeCb = function ()
					slot0:forcedResetBg()

					return 
				end,
				wishChangedCb = function (slot0)
					slot0.mRecruitInfo.RecruitWantInfo = slot0

					return 
				end,
				guideCallBack = function ()
					slot0:onCloseLayer()

					return 
				end,
				activityId = slot0.mActivityId
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})

		return 
	end)

	return 
end
slot0.onLegendRecruit = function (slot0)
	LayerManager.addLayer({
		name = "recruit.LegendRecruitLayer"
	})

	return 
end
slot0.onNormalRecruit = function (slot0)
	slot0.moveBg(slot0, cc.p(slot0.mNvNode:getPosition()), function ()
		LayerManager.addLayer({
			cleanUp = false,
			name = "recruit.NewDlgRecruitLayer",
			data = {
				isSenior = false,
				recruitInfo = slot0.mRecruitInfo,
				callback = function (slot0)
					slot0:recruitHero(slot0)

					return 
				end,
				closeCb = function ()
					slot0:forcedResetBg()

					return 
				end
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})

		return 
	end)

	return 
end
slot0.onRule = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、大侠可以在酒馆进行普通招募和元宝招募；"),
			TR("2、普通招募需要消耗米酒，招募后可以随机获得道具；"),
			TR("3、元宝招募需要消耗元宝，招募后可以获得侠客；"),
			TR("4、侠缘招募需要消耗侠缘，招募后可以随机获得道具"),
			TR("5、酒馆高级招募侠客概率：神话概率2%，传奇概率3%，史诗概率5%，豪侠概率20%，稀有概率70%"),
			TR("6、酒馆普通招募和侠缘招募概率：豪侠概率2%  稀有概率3%  优秀概率5%，道具材料概率90%")
		}
	})

	return 
end
slot0.onClickShowHero = function (slot0, slot1)
	slot2 = {}

	if slot1.typeId == 2 then
		LayerManager.addLayer({
			cleanUp = false,
			name = "recruit.RecruitShowHeroListLayer",
			popRestore = true,
			data = {
				typeId = slot1.typeId,
				extraHeros = slot0.mRecruitInfo.TimedRecruitHero or {}
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})

		return 
	end
end
slot0.onEffectShowClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.FashionSkillShowLayer",
		data = {
			fashionModelId = slot0.mTimedRecruitInfo.UpHeroModelId
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.requestInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "HeroRecruit",
		methodData = {},
		successCallback = function (slot0)
			slot0.mRecruitInfo = slot0

			EventAuto:postEvent(EventDefine.eRedDotPrefix .. ModuleSub.eRecuit)

			return 
		end
	})

	return 
end
slot0.requestRecruit = function (slot0, slot1, slot2)
	Player:saveGameData("RecruitFap", 0)
	slot0.socketRequest(slot0, {
		methodName = "Recruit",
		moduleName = "HeroRecruit",
		methodData = {
			slot1,
			slot2,
			false
		},
		guideInfo = Guide.manager:getCurRequestGuideData(),
		successCallback = function (slot0)
			for slot4, slot5 in pairs(slot0) do
				slot0.mRecruitInfo[slot4] = slot5
			end

			slot0:playEffectAction(slot0.playEffectAction)

			return 
		end,
		failedCallback = function ()
			slot0:forcedResetBg()

			return 
		end
	})

	return 
end
slot0.getTimeRecruitInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "TimedRecruit",
		methodData = {
			slot0.mActivityId
		},
		successCallback = function (slot0)
			slot0.mTimedRecruitInfo = slot0 or {}

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestTimeRecruit = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "Recruit",
		moduleName = "TimedRecruit",
		methodData = {
			slot0.mActivityId,
			slot0[slot1],
			false
		},
		successCallback = function (slot0)
			for slot4, slot5 in pairs(slot0) do
				slot0.mRecruitInfo[slot4] = slot5
			end

			slot0:playEffectAction(slot0.playEffectAction)

			return 
		end,
		failedCallback = function ()
			slot0:forcedResetBg()

			return 
		end
	})

	return 
end
slot0.executeGuide = function (slot0)
	Guide.manager:exeGuideList({
		[20304] = {
			clickNode = slot0.diamondBtn
		}
	})

	return 
end

return slot0
