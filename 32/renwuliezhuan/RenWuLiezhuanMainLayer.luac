slot0 = class("RenWuLiezhuanMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "myScrollView",
		cType = "ScrollView",
		params = {
			posApt = 1,
			direction = 2,
			sizeApt = 1,
			isFullScale = true,
			conSize = {
				width = 6816,
				height = 640
			},
			pos = {
				x = 0,
				y = 0
			},
			size = {
				width = 1136,
				height = 640
			}
		},
		children = {
			{
				name = "bgSprite",
				cType = "Scale9Sprite",
				params = {
					scaleApt = 2,
					isFullScale = true,
					image = "c_58.png",
					anchor = {
						x = 0,
						y = 0
					},
					pos = {
						x = 0,
						y = 0
					},
					size = {
						width = 6816,
						height = 640
					}
				},
				children = {
					{
						name = "bgSprite1",
						cType = "Sprite",
						params = {
							image = "xklz_39.png",
							isFullScale = true,
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "bgSprite2",
						cType = "Sprite",
						params = {
							image = "xklz_39.png",
							isFullScale = true,
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = 2270,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "bgSprite3",
						cType = "Sprite",
						params = {
							image = "xklz_39.png",
							isFullScale = true,
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = 4540,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "temNode",
						cType = "TemplateNode",
						custom = {
							{
								value = "untitled64-text",
								name = "nameLabel",
								type = "string"
							}
						},
						params = {
							anchor = {
								x = 0,
								y = 0
							},
							pos = {
								x = 523.89,
								y = 411.38
							}
						},
						children = {
							{
								name = "untitled63",
								cType = "Sprite",
								params = {
									image = "xklz_3.png",
									pos = {
										x = 4,
										y = 81
									}
								},
								children = {}
							},
							{
								name = "untitled64",
								cType = "Label",
								params = {
									fontSize = 24,
									pos = {
										x = -9,
										y = 81
									},
									text = TR("第一章")
								},
								children = {}
							},
							{
								name = "heroTemplateNode",
								cType = "TemplateNode",
								params = {
									pos = {
										x = -96.78,
										y = -73.3
									}
								},
								children = {
									{
										name = "untitled114",
										cType = "Sprite",
										params = {
											image = "xklz_41.png",
											pos = {
												x = 19.5,
												y = -32.59
											}
										},
										children = {}
									},
									{
										name = "untitled116",
										cType = "Button",
										params = {
											image = "c_pure.png",
											swallowTouch = false,
											childName = "heroButton",
											pos = {
												x = 13.13,
												y = 10.33
											},
											size = {
												width = 75,
												height = 120
											}
										},
										children = {}
									},
									{
										name = "untitled117",
										cType = "Sprite",
										params = {
											image = "qxp_11201.png",
											childName = "heroImage",
											pos = {
												x = 20,
												y = 13
											}
										},
										children = {}
									},
									{
										name = "untitled106",
										cType = "Sprite",
										params = {
											childName = "xunxia",
											image = "xklz_42.png",
											hide = true,
											pos = {
												x = -14,
												y = -30
											}
										},
										children = {}
									},
									{
										name = "untitled111",
										cType = "Sprite",
										params = {
											childName = "tiaozhan",
											image = "xklz_43.png",
											hide = true,
											pos = {
												x = -14,
												y = -30
											}
										},
										children = {}
									},
									{
										name = "untitled107",
										cType = "Sprite",
										params = {
											image = "xkxx_16.png",
											childName = "zizhi",
											scale = 0.7,
											pos = {
												x = -31.92,
												y = -0.54
											}
										},
										children = {}
									},
									{
										name = "untitled115",
										cType = "Scale9Sprite",
										params = {
											childName = "isOverLv",
											hide = true,
											image = "xklz_19.png",
											pos = {
												x = 23,
												y = -36
											},
											size = {
												width = 70,
												height = 25
											}
										},
										children = {}
									},
									{
										name = "untitled113",
										cType = "Label",
										params = {
											fontSize = 18,
											childName = "howLv",
											color = {
												g = 65,
												r = 192,
												b = 65
											},
											pos = {
												x = 21.07,
												y = -35.02
											},
											text = TR("等级")
										},
										children = {}
									},
									{
										name = "untitled118",
										cType = "Sprite",
										params = {
											image = "xklz_82.png",
											childName = "ownHero",
											pos = {
												x = 20.45,
												y = 22.86
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	{
		name = "untitled1",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled4",
				cType = "Button",
				params = {
					image = "c_1.png",
					clickAction = "onCloseBtnClick",
					pos = {
						x = 124.06,
						y = -29.41
					}
				},
				children = {}
			},
			{
				name = "untitled5",
				cType = "Sprite",
				params = {
					image = "xklz_1.png",
					pos = {
						x = 168.85,
						y = -23.51
					}
				},
				children = {}
			},
			{
				name = "untitled6",
				cType = "Button",
				params = {
					image = "c_3.png",
					clickAction = "onRuleClick",
					pos = {
						x = 256.6,
						y = -24.02
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled7",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {
			{
				name = "untitled8",
				cType = "TopResourceNode",
				params = {
					anchor = {
						x = 1,
						y = 1
					},
					moduleIdList = {
						1111,
						1112,
						1114
					},
					pos = {
						x = 4,
						y = -1
					}
				},
				children = {}
			},
			{
				name = "untitled96",
				cType = "Button",
				params = {
					image = "tb_gn_235.png",
					clickAction = "onXunXiaPuClick",
					pos = {
						x = -50.05,
						y = -94.47
					}
				},
				children = {
					{
						name = "untitled103",
						cType = "RedDot",
						params = {
							moduleId = 7902
						},
						children = {}
					}
				}
			}
		}
	}
}
slot1 = {
	cc.p(270, 245),
	cc.p(658, 356),
	cc.p(1056, 251),
	cc.p(1356, 439),
	cc.p(1768, 220),
	cc.p(2019, 427),
	cc.p(270, 245),
	cc.p(658, 356),
	cc.p(1056, 251),
	cc.p(1356, 439),
	cc.p(1768, 220),
	cc.p(2019, 427),
	cc.p(270, 245),
	cc.p(658, 356),
	cc.p(1056, 251),
	cc.p(1356, 439),
	cc.p(1768, 220),
	cc.p(2019, 427)
}
slot2 = {
	cc.p(270, 680),
	cc.p(658, 680),
	cc.p(1056, 680),
	cc.p(1356, 680),
	cc.p(1768, 680)
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)
	slot0.dataConfig(slot0)

	slot0.chapterModel = 11
	slot0.chapterMax = 11
	slot0.nodeId = slot1.nodeId or 0

	slot0.initUI(slot0)
	EventAuto:registerAutoEvent(slot0, "eXUNXIACOUNTEVENT", function (slot0, slot1)
		slot0.mFightNum = slot1.mFightNum
		slot0.mFightBuyNum = slot1.mFightBuyNum

		return 
	end)
	EventAuto:registerAutoEvent(slot0, "eXUNXIACHAPTEREVENT", function (slot0, slot1)
		slot0.mQunxiaChapterInfo = slot1

		return 
	end)
	EventAuto:registerAutoEvent(slot0, "eREFERRUILAYEREVENT", function ()
		slot0:initUI()

		return 
	end)

	return 
end
slot0.getRestoreData = function (slot0)
	return {}
end
slot0.dataConfig = function (slot0)
	slot0.QunxiaChapterDataList = {}

	for slot4, slot5 in pairs(QunxiaChapterModel.items) do
		slot6 = {}

		for slot10, slot11 in pairs(QunxiaNodeModel.items) do
			if slot5.chapterModel == slot11.matchChapterModelId then
				table.insert(slot6, slot11)
			end
		end

		slot0.QunxiaChapterDataList[slot5.chapterModel] = slot6
	end

	slot0.QunxiaNodeDataList = {}

	for slot4, slot5 in pairs(QunxiaNodeModel.items) do
		slot0.QunxiaNodeDataList[slot5.nodeId] = slot5
	end

	slot0.QunxiaChapterList = {}

	for slot4, slot5 in pairs(QunxiaChapterModel.items) do
		table.insert(slot0.QunxiaChapterList, slot5)
	end

	table.sort(slot0.QunxiaChapterList, function (slot0, slot1)
		return slot0.chapterModel < slot1.chapterModel
	end)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.getQunxiaInfo(slot0)

	slot0.yun1 = UIWrap.newControl("Sprite", {
		image = "xklz_40.png",
		isFullScale = true,
		pos = cc.p(-1135, 320),
		anchor = cc.p(0, 0.5)
	})

	slot0.bgSprite2:addChild(slot0.yun1, 1)

	slot0.yun2 = UIWrap.newControl("Sprite", {
		image = "xklz_40.png",
		isFullScale = true,
		pos = cc.p(0, 320),
		anchor = cc.p(0, 0.5)
	})

	slot0.bgSprite2:addChild(slot0.yun2, 1)

	slot0.yun3 = UIWrap.newControl("Sprite", {
		image = "xklz_40.png",
		isFullScale = true,
		pos = cc.p(-1135, 320),
		anchor = cc.p(0, 0.5)
	})

	slot0.bgSprite3:addChild(slot0.yun3, 1)

	slot0.yun4 = UIWrap.newControl("Sprite", {
		image = "xklz_40.png",
		isFullScale = true,
		pos = cc.p(0, 320),
		anchor = cc.p(0, 0.5)
	})

	slot0.bgSprite3:addChild(slot0.yun4, 3)

	slot0.yun5 = UIWrap.newControl("Sprite", {
		image = "xklz_40.png",
		isFullScale = true,
		pos = cc.p(1135, 320),
		anchor = cc.p(0, 0.5)
	})

	slot0.bgSprite3:addChild(slot0.yun5, 1)

	return 
end
slot0.refreshInfo = function (slot0)
	if slot0.mQunxiaChapterInfo.13 and slot0.mQunxiaChapterInfo.13.NormalPass then
		slot0.yun1:setVisible(false)
	end

	if slot0.mQunxiaChapterInfo.16 and slot0.mQunxiaChapterInfo.16.NormalPass then
		slot0.yun2:setVisible(false)
	end

	if slot0.mQunxiaChapterInfo.19 and slot0.mQunxiaChapterInfo.19.NormalPass then
		slot0.yun3:setVisible(false)
	end

	if slot0.mQunxiaChapterInfo.22 and slot0.mQunxiaChapterInfo.22.NormalPass then
		slot0.yun4:setVisible(false)
	end

	if slot0.mQunxiaChapterInfo.25 and slot0.mQunxiaChapterInfo.25.NormalPass then
		slot0.yun5:setVisible(false)
	end

	slot0.heroList = {}
	slot1 = 1

	Utility.schedule(slot0, function ()
		for slot3 = 1, 5, 1 do
			slot5 = slot0.QunxiaChapterList[slot1 - 1]

			if slot0.QunxiaChapterList[slot1] == nil then
				slot0:stopAllActions()
			else
				table.sort(slot6, function (slot0, slot1)
					return tonumber(slot0.nodeId) < tonumber(slot1.nodeId)
				end)
				slot0:createLayoutTemplateNode("temNode", {
					nameLabel = slot4.name
				}).setPosition(slot7, slot2[slot1])

				if 0 < slot1 and slot1 <= 6 then
					slot0.bgSprite1:addChild(slot7)
				elseif 6 < slot1 and slot1 <= 12 then
					slot0.bgSprite2:addChild(slot7)
				elseif 12 < slot1 then
					slot0.bgSprite3:addChild(slot7)
				end

				for slot11, slot12 in ipairs(slot6) do
					slot14 = slot0:createLayoutTemplateNode("heroTemplateNode", {})

					slot7.addChild(slot7, slot14)
					slot14.heroButton:setClickAction(function ()
						if slot0 and not slot0.NormalPass then
							ui.showFlashView(TR("先通过上一章节!"))

							return 
						end

						if slot1 and not slot1.NormalPass then
							return 
						end

						if PlayerAttrObj:getPlayerAttrByName("Lv") < slot2.openLv then
							ui.showFlashView(TR("等级未达到!"))

							return 
						end

						if not slot2.NormalPass then
							Player:setQunxiaPos(slot0)
							LayerManager.addLayer({
								cleanUp = false,
								name = "renwuliezhuan.RwlzHeroInfoNewLayer",
								popRestore = false,
								data = {
									mInfoList = slot2,
									mQunxiaNodeDataList = slot3.QunxiaNodeDataList,
									mQunxiaChapterList = slot3.QunxiaChapterList
								},
								zOrder = Enums.ZOrderType.ePopLayer
							})
						else
							LayerManager.addLayer({
								cleanUp = false,
								name = "renwuliezhuan.RwlzHeroInfoLayer",
								data = {
									allChapterInfo = slot3.mQunxiaChapterInfo,
									qiecuoCount = slot3.mQunxiaChapterInfo.mFightNum,
									fightBuyNum = slot3.mQunxiaChapterInfo.mFightNum.mFightBuyNum,
									heroId = slot2.matchHeroModelId,
									mQunxiaNodeDataList = slot2.matchHeroModelId.QunxiaNodeDataList
								},
								zOrder = Enums.ZOrderType.ePopLayer
							})
						end

						return 
					end)
					slot14.heroImage:setTexture(slot15)
					slot14.xunxia:setVisible(slot12.NormalPass)
					slot14.ownHero:setVisible(not HeroObj:isHaveModel(slot12.matchHeroModelId))

					slot16 = false

					if slot6[slot11 - 1] then
						if slot13.NormalPass and not slot12.NormalPass and slot12.openLv <= PlayerAttrObj:getPlayerAttrByName("Lv") then
							slot16 = true
						end
					elseif slot5 then
						if slot5.NormalPass and not slot4.NormalPass and not slot12.NormalPass and not slot13 and slot12.openLv <= PlayerAttrObj:getPlayerAttrByName("Lv") then
							slot16 = true
						end
					elseif not slot12.NormalPass and slot12.nodeId == 1101 then
						slot16 = true
					end

					slot14.tiaozhan:setVisible(slot16)

					if not slot12.NormalPass and PlayerAttrObj:getPlayerAttrByName("Lv") < slot12.openLv then
						slot14.isOverLv:setVisible(true)
						slot14.howLv:setString(TR("%s级", slot12.openLv))
					else
						slot14.isOverLv:setVisible(false)
						slot14.howLv:setString("")
					end

					slot23, slot20 = Utility.getCampProfessionRoadImage(HeroModel.items[slot12.matchHeroModelId], HeroObj:getItem(slot12.matchHeroModelId) or {}.HeroRoadInfo)

					slot14.zizhi:setTexture(slot19)

					if slot16 then
						if slot0.zhiYingSprite then
							slot0.zhiYingSprite:removeFromParent()

							slot0.zhiYingSprite = nil
						end

						slot0.zhiYingSprite = UIWrap.newControl("Sprite", {
							image = "bzlj_6.png"
						})

						slot0.zhiYingSprite:setPosition(cc.p(15, 90))
						slot14.addChild(slot14, slot0.zhiYingSprite)
						slot0.zhiYingSprite:runAction(cc.RepeatForever:create(cc.Sequence:create({
							cc.MoveBy:create(0.2, cc.p(0, 10)),
							cc.MoveBy:create(0.3, cc.p(0, -10)),
							cc.DelayTime:create(1)
						})))
					end

					if slot11 == 1 then
						slot14.setPosition(slot14, cc.p(-110, -50))
					elseif slot11 == 2 then
						slot14.setPosition(slot14, cc.p(0, -110))
					elseif slot11 == 3 then
						slot14.setPosition(slot14, cc.p(110, -50))
					end

					if not slot0.targetBtn then
						slot0.targetBtn = slot14.heroButton

						slot0:executeGuide()
					end

					if slot1 <= 5 then
						slot0:playerFadeAction(slot14)
					end
				end
			end

			slot1 = slot1 + 1
		end

		return 
	end, 0.05, false)

	if slot0.nodeId == 0 then
		slot2 = 0

		for slot6, slot7 in pairs(slot0.mQunxiaChapterInfo) do
			if slot7.NormalPass then
				slot2 = slot2 + 1
			end
		end

		if slot2 == 4 then
			slot2 = slot2 + 1
		end

		slot0.myScrollView:scrollToPercentHorizontal(slot2/QunxiaChapterModel.items_count*100, 0.5, true)
	else
		slot2 = QunxiaNodeModel.items[slot0.nodeId].matchChapterModelId
		slot3 = 0

		for slot7, slot8 in ipairs(slot0.QunxiaChapterList) do
			if tonumber(slot2) == tonumber(slot8.chapterModel) then
				slot3 = slot7 - 1
			end
		end

		slot0.myScrollView:scrollToPercentHorizontal(slot3/QunxiaChapterModel.items_count*100, 0.5, true)
	end

	return 
end
slot0.playerFadeAction = function (slot0, slot1)
	slot1.heroImage:setOpacity(0)
	slot1.heroImage:runAction(cc.FadeIn:create(1.5))

	return 
end
slot0.onCloseBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onRuleClick = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、大侠可以依次通过解锁群侠谱侠客；"),
			TR("2、解锁需要先完成该侠客的故事剧情；"),
			TR("3、完成剧情后，大侠可对该侠客进行寻侠和切磋；"),
			TR("4、对应侠客的剧情解锁越多，可寻侠的次数越多；"),
			TR("5、寻侠和切磋都可以获得对应侠客的碎片。")
		}
	})

	return 
end
slot0.onXunXiaPuClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "renwuliezhuan.RwlzHeroListLayer",
		data = {
			allChapterInfo = slot0.mQunxiaChapterInfo,
			qiecuoCount = slot0.mFightNum,
			fightBuyNum = slot0.mFightBuyNum,
			mQunxiaNodeDataList = slot0.QunxiaNodeDataList
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.foundHeroCount = function (slot0, slot1)
	slot2 = {}

	for slot6, slot7 in pairs(slot0.QunxiaNodeDataList) do
		if slot7.matchChapterModelId == slot1 then
			table.insert(slot2, slot7)
		end
	end

	return slot2
end
slot0.getQunxiaInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "QunxiaChapterInfo",
		moduleName = "QunxiaChapter",
		methodData = {},
		successCallback = function (slot0)
			slot0.mQunxiaChapterInfo = slot0.QunxiaAllChapterInfo.QunxiaChapterInfo
			slot0.mFightNum = slot0.QunxiaInfo.FightNum
			slot0.mFightBuyNum = slot0.QunxiaInfo.FightBuyNum
			slot0.canTmPXunXiaList = {}
			slot0.canXunXiaList = {}

			for slot4, slot5 in pairs(slot0.mQunxiaChapterInfo) do
				if slot0.chapterModel < slot5.ChapterModel then
					slot0.chapterModel = slot5.ChapterModel
				end

				for slot9, slot10 in pairs(slot5.QunxiaNodeInfo) do
					table.insert(slot0.canTmPXunXiaList, slot10)
				end
			end

			slot0.chooseNode = 1101

			for slot4, slot5 in ipairs(slot0.canTmPXunXiaList) do
				slot0.canXunXiaList[slot5.NodeId] = slot5
			end

			for slot5, slot6 in pairs(slot1) do
				slot0.QunxiaNodeDataList[slot6.nodeId] = slot6
				slot0.QunxiaNodeDataList[slot6.nodeId].Draw = false
				slot0.QunxiaNodeDataList[slot6.nodeId].VisitNum = 0
				slot0.QunxiaNodeDataList[slot6.nodeId].NormalPass = false
			end

			for slot5, slot6 in pairs(slot0.mQunxiaChapterInfo) do
				for slot10, slot11 in pairs(slot6.QunxiaNodeInfo) do
					slot0.QunxiaNodeDataList[slot11.NodeId].Draw = slot11.Draw
					slot0.QunxiaNodeDataList[slot11.NodeId].VisitNum = slot11.VisitNum
					slot0.QunxiaNodeDataList[slot11.NodeId].NormalPass = slot11.NormalPass
				end
			end

			for slot5, slot6 in ipairs(slot0.QunxiaChapterList) do
				for slot10, slot11 in pairs(slot0.mQunxiaChapterInfo) do
					if slot6.chapterModel == slot11.ChapterModel then
						slot0.QunxiaChapterList[slot5].NormalPass = slot11.NormalPass
					end
				end
			end

			slot0:refreshInfo()

			return 
		end
	})

	return 
end
slot0.executeGuide = function (slot0)
	slot1, slot2 = Guide.manager:getGuideInfo()

	if slot2 then
		slot0.myScrollView:setTouchEnabled(false)
	end

	Guide.manager:exeGuideList({
		[200502] = {
			saveStep = true,
			overClose = true,
			clickNode = slot0.targetBtn
		}
	})

	return 
end

return slot0
