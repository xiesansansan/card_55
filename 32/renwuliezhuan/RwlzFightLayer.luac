slot0 = class("RwlzFightLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "bgSprite",
		cType = "Sprite",
		params = {
			posApt = 1,
			image = "xklz_8.png",
			scaleApt = 2,
			pos = {
				x = 640,
				y = 320
			}
		},
		children = {
			{
				name = "untitled6",
				cType = "Sprite",
				params = {
					image = "xklz_11.png",
					pos = {
						x = 640,
						y = 170
					}
				},
				children = {}
			},
			{
				name = "untitled7",
				cType = "Sprite",
				params = {
					image = "xklz_11.png",
					pos = {
						x = 240,
						y = 240
					}
				},
				children = {}
			},
			{
				name = "untitled8",
				cType = "Sprite",
				params = {
					image = "xklz_11.png",
					pos = {
						x = 1040,
						y = 240
					}
				},
				children = {}
			},
			{
				name = "nodeLeft",
				cType = "Node",
				params = {
					pos = {
						x = 231.07,
						y = 300
					}
				},
				children = {}
			},
			{
				name = "nodeCenter",
				cType = "Node",
				params = {
					pos = {
						x = 630.68,
						y = 220
					}
				},
				children = {}
			},
			{
				name = "nodeRight",
				cType = "Node",
				params = {
					pos = {
						x = 1032.25,
						y = 300
					}
				},
				children = {}
			},
			{
				name = "untitled12",
				cType = "Sprite",
				params = {
					image = "xklz_9.png",
					pos = {
						x = 498.95,
						y = 382.91
					}
				},
				children = {
					{
						name = "des",
						cType = "Label",
						params = {
							fontSize = 18,
							text = "",
							align = 1,
							valign = 0,
							color = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 67.19,
								y = 145.67
							},
							size = {
								width = 120,
								height = 260
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled17",
				cType = "Sprite",
				params = {
					image = "xklz_10.png",
					pos = {
						x = 640,
						y = 112.76
					}
				},
				children = {
					{
						name = "zhenyin",
						cType = "Label",
						params = {
							fontSize = 20,
							pos = {
								x = 174.03,
								y = 17.16
							},
							text = TR("推荐阵营")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled19",
				cType = "Button",
				params = {
					image = "c_19.png",
					clickAction = "onFightClick",
					pos = {
						x = 640,
						y = 62.76
					},
					titleText = TR("挑 战")
				},
				children = {}
			},
			{
				name = "untitled22",
				cType = "Sprite",
				params = {
					rotationAngle = 90,
					image = "c_69.png",
					pos = {
						x = 356.09,
						y = 500.06
					}
				},
				children = {}
			},
			{
				name = "untitled24",
				cType = "Sprite",
				params = {
					rotationAngle = 90,
					image = "c_69.png",
					pos = {
						x = 774.85,
						y = 451.95
					}
				},
				children = {}
			},
			{
				name = "untitled25",
				cType = "Sprite",
				params = {
					rotationAngle = 90,
					image = "c_69.png",
					pos = {
						x = 1145.85,
						y = 497.51
					}
				},
				children = {}
			},
			{
				name = "leftName",
				cType = "Label",
				params = {
					fontSize = 24,
					pos = {
						x = 357.46,
						y = 511.27
					},
					size = {
						width = 25,
						height = 100
					},
					text = TR("洗车")
				},
				children = {}
			},
			{
				name = "centerName",
				cType = "Label",
				params = {
					fontSize = 24,
					pos = {
						x = 775.96,
						y = 459.77
					},
					size = {
						width = 25,
						height = 100
					},
					text = TR("洗车")
				},
				children = {}
			},
			{
				name = "rightName",
				cType = "Label",
				params = {
					fontSize = 24,
					pos = {
						x = 1147.63,
						y = 507.65
					},
					size = {
						width = 25,
						height = 100
					},
					text = TR("洗车")
				},
				children = {}
			}
		}
	},
	{
		name = "untitled2",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 0
			}
		},
		children = {
			{
				name = "untitled3",
				cType = "Button",
				params = {
					image = "c_1.png",
					clickAction = "onCloseBtnClick",
					pos = {
						x = 124.92,
						y = 610.25
					}
				},
				children = {}
			},
			{
				name = "untitled5",
				cType = "Button",
				params = {
					image = "c_3.png",
					clickAction = "onRuleClick",
					hide = true,
					pos = {
						x = 293.87,
						y = 616.29
					}
				},
				children = {}
			},
			{
				name = "title",
				cType = "Label",
				params = {
					text = "021",
					charCount = 12,
					startChar = 48,
					fontName = "xklz_14.png",
					isRichText = true,
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 102.06,
						y = 615.15
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled20",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 0
			}
		},
		children = {
			{
				name = "untitled21",
				cType = "TopResourceNode",
				params = {
					moduleIdList = {
						1111,
						1112,
						1113
					},
					pos = {
						x = -519.68,
						y = 589.5
					}
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.mHeroInfoList = slot1.mInfoList
	slot0.mChapterModel = slot1.mChapterModel
	slot0.mChapterNum = slot1.mChapterNum

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.title:setString(({
		"021",
		"031",
		"041",
		"051",
		"061",
		"071",
		"081",
		"091",
		"0:1",
		"0;1",
		"0;21",
		"0;31",
		"0;41",
		"0;51",
		"0;61",
		"0;71",
		"0;81",
		"0;91",
		"0;:",
		"03;1",
		"0321",
		"0331",
		"0341",
		"0351",
		"0361",
		"0371"
	})[slot0.mChapterNum])
	table.sort(slot0.mHeroInfoList, function (slot0, slot1)
		return slot0.nodeId < slot1.nodeId
	end)

	slot0.centerInfo = slot0.mHeroInfoList[1]

	for slot5, slot6 in ipairs(slot0.mHeroInfoList) do
		if not slot6.NormalPass then
			slot0.centerInfo = slot6

			break
		end
	end

	slot2 = {}

	for slot6, slot7 in ipairs(slot0.mHeroInfoList) do
		if slot0.centerInfo.nodeId ~= slot7.nodeId then
			table.insert(slot2, slot7)
		end
	end

	slot0.leftInfo = slot2[1]
	slot0.rightInfo = slot2[2]

	if slot0.playerHeroCenter ~= nil then
		slot0.playerHeroCenter:removeFromParent()

		slot0.playerHeroCenter = nil
	end

	slot0.playerHeroCenter = UIWrap.newControl("FigureHero", {
		scale = 0.23,
		stepLv = 0,
		heroModelId = 12012104,
		flipX = true
	})

	slot0.playerHeroCenter:setPosition(0, -20)
	slot0.nodeCenter:addChild(slot0.playerHeroCenter)

	if slot0.playerHeroLeft ~= nil then
		slot0.playerHeroLeft:removeFromParent()

		slot0.playerHeroLeft = nil
	end

	slot0.playerHeroLeft = UIWrap.newControl("FigureHero", {
		scale = 0.2,
		stepLv = 0,
		heroModelId = 12012104,
		flipX = false
	})

	slot0.playerHeroLeft:setPosition(0, -15)
	slot0.nodeLeft:addChild(slot0.playerHeroLeft)

	if slot0.playerHeroRight ~= nil then
		slot0.playerHeroRight:removeFromParent()

		slot0.playerHeroRight = nil
	end

	slot0.playerHeroRight = UIWrap.newControl("FigureHero", {
		scale = 0.2,
		stepLv = 0,
		heroModelId = 12012104,
		flipX = true
	})

	slot0.playerHeroRight:setPosition(0, -15)
	slot0.nodeRight:addChild(slot0.playerHeroRight)
	slot0.leftName:setString(HeroModel.items[slot0.leftInfo.matchHeroModelId].name)
	slot0.centerName:setString(HeroModel.items[slot0.centerInfo.matchHeroModelId].name)
	slot0.rightName:setString(HeroModel.items[slot0.rightInfo.matchHeroModelId].name)
	slot0.refreeZhiYe(slot0)

	return 
end
slot0.refreeZhiYe = function (slot0)
	slot0.needIgnoreCampIds = {
		1,
		2,
		3
	}
	slot0.needIgnoreJobIds = {
		1,
		2,
		3,
		4,
		5
	}
	slot1 = {
		[CampType.eSheDiao] = TR("射雕"),
		[CampType.eShenDiao] = TR("神雕"),
		[CampType.eYiTian] = TR("倚天")
	}
	slot2 = {
		[ProfessionType.eDao] = TR("刀"),
		[ProfessionType.eJian] = TR("剑"),
		[ProfessionType.eLi] = TR("力"),
		[ProfessionType.eQi] = TR("气"),
		[ProfessionType.eJi] = TR("技")
	}

	slot0.des:setString(slot0.centerInfo.heroDes)

	slot4 = ""

	if slot0.centerInfo.campLimit == "" then
		slot4 = "无限制"
		slot0.needIgnoreCampIds = {}
	else
		for slot9, slot10 in pairs(slot5) do
			slot4 = slot4 .. slot1[tonumber(slot10)] .. " "

			table.removebyvalue(slot0.needIgnoreCampIds, tonumber(slot10))
		end
	end

	slot5 = ""

	if slot3.jobLimit == "" then
		slot5 = "无限制"
		slot0.needIgnoreJobIds = {}
	else
		for slot10, slot11 in pairs(slot6) do
			slot5 = slot5 .. slot2[tonumber(slot11)] .. " "

			table.removebyvalue(slot0.needIgnoreJobIds, tonumber(slot11))
		end
	end

	slot0.zhenyin:setString(TR("阵营限制:%s 职业限制:%s", slot4, slot5))

	return 
end
slot0.onCloseBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onRuleClick = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、每个关卡只可挑战一次，胜利后可以获得大量铜钱；"),
			TR("2、拜庄论剑战斗结束后，不会重置武将的剩余血量和怒气状态；"),
			TR("3、每成功挑战三关可以领取1个宝箱奖励；"),
			TR("4、每日可免费重置1次挑战，每日凌晨5点重置次数；"),
			TR("5、试炼币可以在修炼商人中购买珍贵道具。")
		}
	})

	return 
end
slot0.onFightClick = function (slot0)
	ui.showCampReady({
		isPve = true,
		noNeedVit = true,
		callback = function (slot0)
			slot0:socketRequest({
				methodName = "GetNodeFightInfo",
				moduleName = "QunxiaChapter",
				callModelSub = ModuleSub.eQunxia,
				methodData = {
					slot0.mChapterModel,
					slot0.centerInfo.nodeId,
					table.concat(slot0, ",")
				},
				successCallback = function (slot0)
					dump(slot0, "ValueValue")
					require("common.BattleEntry"):StartBattle({
						fightInfo = slot0.FightInfo,
						extraData = {
							chapterId = slot0.mChapterModel,
							nodeId = slot0.centerInfo.nodeId
						}
					})

					return 
				end
			})

			return 
		end,
		ignoreCampList = slot0.needIgnoreCampIds,
		ignoreProfessionList = slot0.needIgnoreJobIds,
		titleText = TR("出战准备"),
		mercenaryList = MercenaryObj:getMercenaryIdByModuleId(ModuleSub.eQunxia)
	})

	return 
end
slot0.onGetFightInfo = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetFightInfo",
		moduleName = "TrialInfo",
		methodData = {
			slot1.PostId,
			"",
			table.concat(slot3, ",")
		},
		successCallback = function (slot0)
			dump(slot0, "responseresponse")
			require("common.BattleEntry"):StartBattle({
				fightInfo = slot0.FightInfo,
				extraData = {
					postId = slot0.PostId
				}
			})

			return 
		end
	})

	return 
end

return slot0
