slot0 = class("JzwlShopLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false
	})
end)
slot0.uiTree = {
	{
		name = "untitled80",
		cType = "FileLayer",
		params = {
			onlyEditer = true,
			file = "shop/ShopLayer.lua"
		},
		children = {}
	},
	{
		name = "untitled82",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "refreshCost",
				cType = "Label",
				params = {
					fontSize = 20,
					isRichText = true,
					text = "Label",
					color = {
						g = 255,
						r = 255,
						b = 255
					},
					pos = {
						x = 502.11,
						y = -296.2
					}
				},
				children = {}
			},
			{
				name = "untitled181",
				cType = "Label",
				params = {
					fontSize = 20,
					color = {
						g = 255,
						r = 255,
						b = 255
					},
					pos = {
						x = 355.75,
						y = -251.24
					},
					text = TR("（每日5点自动刷新）")
				},
				children = {}
			},
			{
				name = "mGridView",
				cType = "GridView",
				params = {
					createColCb = "onCreateGridItem",
					itemNum = 1,
					selectIndex = 1,
					colCount = 4,
					celHeight = 260,
					pos = {
						x = 104.69,
						y = 17.58
					},
					size = {
						width = 768.07,
						height = 467.82
					}
				},
				children = {
					{
						name = "gridNode",
						cType = "TemplateNode",
						custom = {
							{
								value = "untitled202-initParams",
								name = "cardInfo",
								type = "string"
							},
							{
								value = "untitled203-text",
								name = "nameText",
								type = "string"
							},
							{
								value = "untitled204-modelId",
								name = "costResIdF",
								type = "string"
							},
							{
								value = "untitled209-modelId",
								name = "costResIdS",
								type = "string"
							},
							{
								value = "untitled204-num",
								name = "costNumF",
								type = "string"
							},
							{
								value = "untitled209-num",
								name = "costNumS",
								type = "string"
							},
							{
								value = "untitled204-color",
								name = "colorF",
								type = "string"
							},
							{
								value = "untitled209-color",
								name = "colorS",
								type = "string"
							}
						},
						params = {
							pos = {
								x = 114.25,
								y = 139.47
							}
						},
						children = {
							{
								name = "untitled207",
								cType = "Sprite",
								params = {
									image = "sc_26.png",
									pos = {
										x = 1,
										y = 111.59
									}
								},
								children = {}
							},
							{
								name = "untitled201",
								cType = "Sprite",
								params = {
									image = "sc_22.png",
									pos = {
										x = 0.27,
										y = -7.12
									}
								},
								children = {}
							},
							{
								name = "untitled202",
								cType = "CardNode",
								params = {
									allowClick = true,
									initParams = {},
									pos = {
										x = 1.41,
										y = 34.05
									}
								},
								children = {}
							},
							{
								name = "untitled203",
								cType = "Label",
								params = {
									fontSize = 20,
									childName = "nameLabel",
									text = "Label",
									color = {
										g = 255,
										r = 255,
										b = 255
									},
									pos = {
										x = -0.36,
										y = 97.57
									}
								},
								children = {}
							},
							{
								name = "untitled204",
								cType = "ResLabel",
								params = {
									fontSize = 20,
									num = 5555,
									modelId = 1113,
									childName = "costLabelF",
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = -38.97,
										y = -63.33
									}
								},
								children = {}
							},
							{
								name = "untitled209",
								cType = "ResLabel",
								params = {
									fontSize = 20,
									num = 5555,
									modelId = 1113,
									childName = "costLabelS",
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = -38.97,
										y = -35.33
									}
								},
								children = {}
							},
							{
								name = "untitled205",
								cType = "Button",
								params = {
									childName = "btn",
									image = "c_32.png",
									scale = 0.8,
									clickAction = "onBuyAction",
									pos = {
										x = 1.05,
										y = -94.49
									},
									titleText = TR("购 买")
								},
								children = {}
							},
							{
								name = "untitled208",
								cType = "Label",
								params = {
									fontSize = 18,
									isRichText = true,
									hide = true,
									childName = "numLabel",
									color = {
										g = 37,
										r = 37,
										b = 37
									},
									pos = {
										x = -0.53,
										y = -16.69
									},
									text = TR("数量")
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "untitled81",
				cType = "Button",
				params = {
					image = "sc_19.png",
					clickAction = "onRefreshBtnAction",
					pos = {
						x = 501.48,
						y = -237.55
					}
				},
				children = {}
			}
		}
	},
	{
		name = "ownNum",
		cType = "Label",
		params = {
			fontSize = 20,
			isRichText = true,
			posApt = 1,
			scaleApt = 2,
			color = {
				g = 255,
				r = 255,
				b = 255
			},
			pos = {
				x = 634,
				y = 40
			},
			text = TR("参与决战武林玩法即可获得")
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mNorGoodList = {}

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.getInfo(slot0)
	Utility.schedule(slot0, function ()
		if os.date("*t", Player:getCurrentTime()).hour == 5 and slot0.min == 0 and slot0.sec == 1 then
			slot0:getInfo()
		end

		return 
	end, 1)

	return 
end
slot0.checkIsCanBuy = function (slot0, slot1)
	slot2 = true

	for slot6, slot7 in pairs(slot0.mShopBuyRecord) do
		if slot7 == slot1 then
			slot2 = false

			break
		end
	end

	return slot2
end
slot0.refreshUI = function (slot0)
	slot0.mGridView:setItemNum(#slot0.mNorGoodList)
	slot0.refreshCost:setString(TR("{%s} %s%s", Resource.getDaibiImg(slot2.resourceId), (Utility.analysisStrResList(NewleaguetopShopRefreshConfig.items[math.min(slot0.mShopResetNum + 1, NewleaguetopShopRefreshConfig.items_count)].need)[1].num <= Resource.getCount(Utility.analysisStrResList(NewleaguetopShopRefreshConfig.items[math.min(slot0.mShopResetNum + 1, NewleaguetopShopRefreshConfig.items_count)].need)[1].resourceId) and "#258711") or "#EA2C00", slot2.num))
	slot0.ownNum:setString(TR("参与决战武林玩法即可获得 #DFC72A%s#FFFFFF   当前拥有：#DFC72A{%s}%s", Resource.getName(slot4), Resource.getDaibiImg(slot4), Resource.getCount(16050075)))

	return 
end
slot0.onCreateGridItem = function (slot0, slot1, slot2, slot3)
	if not slot0.mNorGoodList[slot2] then
		return 
	end

	slot7 = Utility.getColorValue(Resource.getColorLv(Utility.analysisStrResList(slot4.sellStr)[1].resourceId))
	slot9 = (Utility.analysisStrResList(slot4.buyNeed)[1].num <= Resource.getCount(Utility.analysisStrResList(slot4.buyNeed)[1].resourceId) and cc.c3b(37, 135, 17)) or cc.c3b(234, 44, 0)
	slot10, slot11 = nil

	if slot6[2] then
		slot12 = slot0.createLayoutTemplateNode(slot0, "gridNode", {
			cardInfo = {
				cardInfo = {
					modelId = slot5.resourceId,
					num = slot5.num
				},
				showAttrs = {
					Enums.CardShowAttr.eBorder,
					Enums.CardShowAttr.eNum
				}
			},
			nameText = Resource.getName(slot5.resourceId),
			costResIdF = slot6[1].resourceId,
			costNumF = slot6[1].num,
			costResIdS = (slot6[2] and slot6[2].resourceId) or 0,
			costNumS = (slot6[2] and slot6[2].num) or 0,
			colorF = slot9,
			colorS = (slot6[2].num <= Resource.getCount(slot6[2].resourceId) and cc.c3b(37, 135, 17)) or cc.c3b(234, 44, 0) or cc.c3b(255, 255, 255)
		})
	end

	if not slot6[2] then
		slot12.costLabelS:setVisible(false)
	end

	slot12.nameLabel:setColor(slot7)

	slot12.btn.goodInfo = slot4

	if Resource.getMainType(slot5.resourceId) == ResourceType.eDebris then
		slot12.numLabel:setVisible(true)

		slot13 = "#258711"

		if Resource.getCount(slot5.resourceId) < GoodsModel.items[slot5.resourceId].outputNeedNum then
			slot13 = "#EA2C00"
		end

		slot12.numLabel:setString(TR("合成:%s%s/%s", slot13, Resource.getCount(slot5.resourceId), GoodsModel.items[slot5.resourceId].outputNeedNum))
	end

	slot12.btn:setEnabled(slot0.checkIsCanBuy(slot0, slot4.serverItemId))
	slot12.setPosition(slot12, slot1.getContentSize(slot1).width/2, slot1.getContentSize(slot1).height/2)
	slot1.addChild(slot1, slot12)

	return 
end
slot0.onBuyAction = function (slot0, slot1)
	slot3 = true

	for slot7, slot8 in ipairs(slot2) do
		if not Resource.isEnough(slot8.resourceId, slot8.num) then
			slot3 = false

			break
		end
	end

	if slot3 then
		slot0.ShopBuy(slot0, slot1.goodInfo.serverItemId)
	end

	return 
end
slot0.onRefreshBtnAction = function (slot0, slot1)
	if Resource.isEnough(Utility.analysisStrResList(NewleaguetopShopRefreshConfig.items[(NewleaguetopShopRefreshConfig.items_count < slot0.mShopResetNum + 1 and slot2) or slot0.mShopResetNum + 1].need)[1].resourceId, Utility.analysisStrResList(NewleaguetopShopRefreshConfig.items[(NewleaguetopShopRefreshConfig.items_count < slot0.mShopResetNum + 1 and slot2) or slot0.mShopResetNum + 1].need)[1].num) then
		slot0.ShopReset(slot0)
	end

	return 
end
slot0.getInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "ShopInfo",
		moduleName = "Leaguetopfinal",
		methodData = {},
		successCallback = function (slot0)
			slot0.mNorGoodList = {}

			for slot4, slot5 in pairs(slot0.ShopSellDic) do
				for slot9, slot10 in pairs(clone(NewleaguetopShopConfig.items)) do
					if slot10.sellNum == slot5 then
						slot10.serverItemId = tonumber(slot4)

						table.insert(slot0.mNorGoodList, slot10)
					end
				end
			end

			slot0.mShopBuyRecord = slot0.ShopBuyList
			slot0.mShopResetNum = slot0.ShopResetNum

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.ShopBuy = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "ShopBuy",
		moduleName = "Leaguetopfinal",
		methodData = {
			tonumber(slot1)
		},
		successCallback = function (slot0)
			slot0.mShopBuyRecord = slot0.ShopBuyList

			if slot0.BaseGetGameResourceList then
				ui.showFlashView(TR("购买成功"))
			end

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.ShopReset = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "ShopReset",
		moduleName = "Leaguetopfinal",
		methodData = {},
		successCallback = function (slot0)
			slot0.mNorGoodList = {}

			for slot4, slot5 in pairs(slot0.ShopSellDic) do
				for slot9, slot10 in pairs(clone(NewleaguetopShopConfig.items)) do
					if slot10.sellNum == slot5 then
						slot10.serverItemId = tonumber(slot4)

						table.insert(slot0.mNorGoodList, slot10)
					end
				end
			end

			slot0.mShopBuyRecord = slot0.ShopBuyList
			slot0.mShopResetNum = slot0.ShopResetNum

			slot0:refreshUI()

			return 
		end
	})

	return 
end

return slot0
