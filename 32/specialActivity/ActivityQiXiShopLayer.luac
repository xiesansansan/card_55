slot0 = class("ActivityQiXiShopLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled18",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "sc_13.png",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled19",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "effectNode",
				cType = "Node",
				params = {
					pos = {
						x = -430,
						y = -230
					}
				},
				children = {}
			},
			{
				name = "skillBtn",
				cType = "Button",
				params = {
					image = "tb_gn_121.png",
					clickAction = "onSkillShow",
					hide = true,
					pos = {
						x = -328.46,
						y = 63.02
					}
				},
				children = {}
			},
			{
				name = "untitled57",
				cType = "Sprite",
				params = {
					image = "zj_245.png",
					pos = {
						x = -530.8,
						y = 195.53
					}
				},
				children = {}
			},
			{
				name = "attrSp",
				cType = "Scale9Sprite",
				params = {
					image = "c_40.png",
					hide = true,
					pos = {
						x = -427.99,
						y = -265
					},
					size = {
						width = 240,
						height = 48
					}
				},
				children = {
					{
						name = "fashionAttrLab",
						cType = "Label",
						params = {
							fontSize = 18,
							emptyInit = true,
							align = 0,
							isRichText = true,
							text = "Label",
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 130,
								y = 24
							},
							size = {
								width = 240,
								height = 48
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled27",
				cType = "Scale9Sprite",
				params = {
					image = "sc_21.png",
					pos = {
						x = 128.03,
						y = -28.13
					}
				},
				children = {
					{
						name = "untitled53",
						cType = "Sprite",
						params = {
							image = "sc_17.png",
							pos = {
								x = 476.18,
								y = 530
							}
						},
						children = {}
					},
					{
						name = "untitled49",
						cType = "Sprite",
						params = {
							image = "ydqx_30.png",
							pos = {
								x = 463.5,
								y = 560
							}
						},
						children = {}
					},
					{
						name = "untitled50",
						cType = "Sprite",
						params = {
							image = "ydqx_31.png",
							pos = {
								x = 99.4,
								y = 560
							}
						},
						children = {}
					},
					{
						name = "untitled52",
						cType = "Sprite",
						params = {
							image = "ydqx_31.png",
							pos = {
								x = 857.35,
								y = 560
							}
						},
						children = {}
					},
					{
						name = "untitled51",
						cType = "Sprite",
						params = {
							image = "ydqx_32.png",
							pos = {
								x = 77.19,
								y = 117.47
							}
						},
						children = {}
					},
					{
						name = "mGridView",
						cType = "GridView",
						params = {
							createColCb = "onGridAction",
							itemNum = 1,
							selectIndex = 1,
							colCount = 4,
							celHeight = 246,
							pos = {
								x = 477,
								y = 312
							},
							size = {
								width = 770,
								height = 430
							}
						},
						children = {
							{
								name = "mTemplateGrid",
								cType = "TemplateNode",
								custom = {
									{
										value = "untitled44-initParams",
										name = "cardParams",
										type = "string"
									},
									{
										value = "untitled43-text",
										name = "nameText",
										type = "string"
									},
									{
										value = "untitled43-color",
										name = "nameColor",
										type = "string"
									},
									{
										value = "untitled47-goodId",
										name = "goodId",
										type = "string"
									},
									{
										value = "untitled48-modelId",
										name = "costResId",
										type = "string"
									}
								},
								params = {
									pos = {
										x = 360.2,
										y = 208.19
									}
								},
								children = {
									{
										name = "untitled41",
										cType = "Sprite",
										params = {
											image = "sc_26.png",
											pos = {
												x = 0,
												y = 107.43
											}
										},
										children = {}
									},
									{
										name = "untitled42",
										cType = "Sprite",
										params = {
											image = "sc_27.png",
											pos = {
												x = 0,
												y = -7
											}
										},
										children = {}
									},
									{
										name = "untitled43",
										cType = "Label",
										params = {
											fontSize = 20,
											childName = "namelab",
											text = "name",
											color = {
												g = 255,
												r = 255,
												b = 255
											},
											pos = {
												x = 0,
												y = 93.33
											}
										},
										children = {}
									},
									{
										name = "untitled44",
										cType = "CardNode",
										params = {
											allowClick = true,
											initParams = {},
											pos = {
												x = 0,
												y = 30
											}
										},
										children = {}
									},
									{
										name = "untitled45",
										cType = "Label",
										params = {
											fontSize = 16,
											isRichText = true,
											align = 1,
											childName = "buyCountLabel",
											color = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 0,
												y = -27.46
											},
											size = {
												width = 148.15,
												height = 18
											},
											text = TR("剩余购买次数：99")
										},
										children = {}
									},
									{
										name = "untitled48",
										cType = "ResLabel",
										params = {
											fontSize = 20,
											modelId = 1111,
											num = 0,
											childName = "priceLabel",
											outlineColor = {
												g = 24,
												r = 24,
												b = 24
											},
											pos = {
												x = -35.88,
												y = -49.41
											}
										},
										children = {}
									},
									{
										name = "untitled47",
										cType = "Button",
										custom = {
											{
												value = 1,
												name = "goodId",
												type = "integer"
											}
										},
										params = {
											childName = "button",
											image = "c_19.png",
											scale = 0.8,
											clickAction = "onBuyAction",
											pos = {
												x = 0,
												y = -84.29
											},
											titleText = TR("兑 换")
										},
										children = {}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	{
		name = "untitled10",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled11",
				cType = "Button",
				params = {
					clickAction = "onCloseBtn",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled12",
						cType = "Sprite",
						params = {
							image = "ydqx_14.png",
							pos = {
								x = 47,
								y = 4
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "topResNode",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	if RedDotObj:isValid(ModuleSub.eSpecialExchangePoint) then
		RedDotObj:seeRedDot("SpecialExchangeInfo")
	end

	slot0.mActivityId = nil
	slot3 = pairs
	slot4 = Player:getGameData("Push_SpecialActivityInfo").SpecialActivityOpenInfo or {}

	for slot6, slot7 in slot3(slot4) do
		if slot7.SubModuleId == ModuleSub.eQixiExchange then
			slot0.mActivityId = slot7.Id

			break
		end
	end

	slot0.mUseResourceId = nil
	slot0.fashionModelId = nil

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	slot0.requestGetInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.refreshFashionUI = function (slot0)
	slot0.effectNode:removeAllChildren()

	if cc.FileUtils:getInstance():isFileExist(slot2 .. ".skel") then
		slot0.effectNode:addChild(UIWrap.newControl("Effect", {
			isSkewY = true,
			scale = 0.5,
			dataFile = slot2,
			pos = cc.p(0, 0)
		}))
	else
		slot0.effectNode:addChild(UIWrap.newControl("Sprite", {
			scale = 0.8,
			image = slot1.pic .. ".png",
			pos = cc.p(0, 0)
		}))
	end

	slot0.skillBtn:setVisible(slot0.fashionModelId ~= nil)

	if slot1.actAttrStr ~= "" then
		slot0.attrSp:setVisible(true)
		slot0.attrSp:setContentSize((#Utility.analysisStrAttrList(slot1.actAttrStr) <= 3 and cc.size(240, 60)) or cc.size(240, 80))
		slot0.fashionAttrLab:setPositionY(slot0.attrSp:getContentSize().height/2)

		slot5 = ""

		for slot9, slot10 in ipairs(slot3) do
			slot5 = slot5 .. ((Utility.isAttrNeedPercent(slot10.fightattr) and "" .. string.format("%s#8ba857+%s%%#ffffff", FightAttrTypeName[slot10.fightattr], slot10.value/100)) or "" .. string.format("%s#8ba857+%s#ffffff", FightAttrTypeName[slot10.fightattr], slot10.value)) .. "  "
		end

		slot0.fashionAttrLab:setString(TR("%s", slot5))
	end

	return 
end
slot0.onGridAction = function (slot0, slot1, slot2)
	if slot0.mDataList[slot2] == nil then
		return 
	end

	slot5 = slot3.NeedGameResourceList[1]
	slot6, slot7 = Utility.getColorValue(Resource.getColorLv(slot3.ExchaneGameResourceList[1].ResourceId))

	if slot0.mUseResourceId == nil then
		slot0.mUseResourceId = slot5.ResourceId

		slot0.topResNode:resetThirdBtn(3, slot0.mUseResourceId)
	end

	if Resource.getSubType(slot4.ResourceId) == ResourceTypeSub.eFashionDebris then
		slot0.fashionModelId = GoodsModel.items[slot4.ResourceId].outputModelID

		slot0.refreshFashionUI(slot0)
	end

	slot8 = slot0.createLayoutTemplateNode(slot0, "mTemplateGrid", {
		goodId = slot3.Serial,
		cardParams = {
			cardInfo = {
				modelId = slot4.ResourceId,
				num = slot4.Num
			},
			showAttrs = {
				Enums.CardShowAttr.eNum,
				Enums.CardShowAttr.eSynthetic
			}
		},
		nameText = Resource.getName(slot4.ResourceId),
		costResId = slot5.ResourceId,
		nameColor = slot6
	})

	slot8.setPosition(slot8, slot1.getContentSize(slot1).width/2, slot1.getContentSize(slot1).height/2)
	slot1.addChild(slot1, slot8)

	slot8.button.GridIndex = slot2

	slot8.buyCountLabel:setString(TR("剩余兑换次数：%s", slot3.PersonalNum))
	slot8.priceLabel:setString(slot5.Num)
	slot8.button:setEnabled(0 < slot3.PersonalNum)

	return 
end
slot0.onSkillShow = function (slot0, slot1)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.FashionSkillShowLayer",
		data = {
			fashionModelId = slot0.fashionModelId
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onBuyAction = function (slot0, slot1)
	slot2 = nil

	for slot6, slot7 in ipairs(slot0.mDataList) do
		if slot7.Serial == slot1.goodId then
			slot2 = clone(slot7)

			break
		end
	end

	if slot2 == nil then
		return 
	end

	if slot2.PersonalNum <= 0 then
		ui.showFlashView(TR("已无兑换次数！"))

		return 
	end

	slot4 = slot2.ExchaneGameResourceList[1]

	if Resource.isEnough(slot2.NeedGameResourceList[1].ResourceId, slot2.NeedGameResourceList[1].Num) == false then
		return 
	end

	if slot2.PersonalNum <= math.min(math.floor(Resource.getCount(slot3.ResourceId)/slot3.Num), slot1.buyCount or 9999) then
		slot6 = slot2.PersonalNum
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "commonlayer.commBuyGoodSeclectLayer",
		data = {
			info = {
				modelId = slot4.ResourceId,
				goodsNum = slot4.Num,
				sellTypeID = slot3.ResourceId,
				sellNum = slot3.Num,
				maxNum = slot6
			},
			callBack = function (slot0)
				slot0:requestExchange(slot1.Serial, slot0, slot2.GridIndex)

				return 
			end
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onCloseBtn = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "SpecialExchange",
		methodData = {
			slot0.mActivityId
		},
		successCallback = function (slot0)
			slot0.mDataList = slot0.ActivityList

			slot0.mGridView:setItemNum(#slot0.mDataList)

			return 
		end
	})

	return 
end
slot0.requestExchange = function (slot0, slot1, slot2, slot3)
	slot0.socketRequest(slot0, {
		methodName = "Exchange",
		moduleName = "SpecialExchange",
		methodData = {
			slot0.mActivityId,
			slot1,
			slot2
		},
		successCallback = function (slot0)
			slot0.mDataList = {}
			slot0.mDataList = slot0.ActivityList

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			slot0.topResNode:resetThirdBtn(3, slot0.mUseResourceId)
			slot0.mGridView:refreshCell(slot0.mGridView.refreshCell)
			ui.showFlashView(TR("购买成功"))

			return 
		end
	})

	return 
end

return slot0
