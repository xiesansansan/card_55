slot0 = class("ActivityDailyChargeLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false,
		color = cc.c4b(0, 0, 0, 150)
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "MsgBoxBg",
		params = {
			actionCallback = "onRequestActiveInfo",
			posApt = 1,
			sizeApt = 2,
			hideCloseButton = true,
			image = "mrcz_1.png",
			pos = {
				x = 568,
				y = 334
			}
		},
		children = {
			{
				name = "chargeBtn",
				cType = "Button",
				params = {
					image = "mrcz_2.png",
					clickAction = "onGoToRechargeLayer",
					pos = {
						x = 726.33,
						y = 58.72
					}
				},
				children = {}
			},
			{
				name = "chargeNumLabel",
				cType = "Label",
				params = {
					pos = {
						x = 529,
						y = 42.57
					},
					text = TR("今日累计充值：0元")
				},
				children = {}
			},
			{
				name = "mListView",
				cType = "ListView",
				params = {
					direction = false,
					pos = {
						x = 372.7,
						y = 250.94
					},
					size = {
						width = 336,
						height = 60
					}
				},
				children = {
					{
						name = "btnLayout",
						cType = "Layout",
						params = {
							size = {
								width = 90,
								height = 60
							}
						},
						children = {
							{
								name = "untitled8",
								cType = "Button",
								params = {
									image = "mrcz_3.png",
									childName = "btn",
									titleText = "xx",
									pos = {
										x = 45,
										y = 25
									}
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "rewardList",
				cType = "ListView",
				params = {
					direction = false,
					anchor = {
						x = 0.5,
						y = 0.5
					},
					pos = {
						x = 538.6,
						y = 194.79
					},
					size = {
						width = 260,
						height = 80
					}
				},
				children = {
					{
						name = "rewardLayout",
						cType = "Layout",
						params = {
							size = {
								width = 65,
								height = 80
							}
						},
						children = {
							{
								name = "untitled12",
								cType = "CardNode",
								params = {
									scale = 0.75,
									childName = "recardNode",
									allowClick = true,
									pos = {
										x = 32.5,
										y = 40
									}
								},
								children = {}
							}
						}
					}
				}
			},
			{
				name = "untitled13",
				cType = "Button",
				params = {
					image = "c_28.png",
					clickAction = "onCloseBtnClick",
					pos = {
						x = 785.23,
						y = 459.98
					}
				},
				children = {}
			},
			{
				name = "rewardBtn",
				cType = "Button",
				params = {
					image = "c_32.png",
					clickAction = "onRequestReward",
					titleText = "",
					pos = {
						x = 534.54,
						y = 123.58
					}
				},
				children = {}
			},
			{
				name = "timeLabel",
				cType = "Label",
				params = {
					fontSize = 20,
					text = "Label",
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 396.17,
						y = 316.14
					}
				},
				children = {}
			},
			{
				name = "mCheckBox",
				cType = "Checkbox",
				params = {
					normalImage = "c_43.png",
					selectImage = "c_44.png",
					callback = "onNoTipToday",
					pos = {
						x = 400.77,
						y = 0.53
					}
				},
				children = {
					{
						name = "untitled15",
						cType = "Label",
						params = {
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 34.79,
								y = 12.06
							},
							text = TR("今日登陆后不再显示")
						},
						children = {}
					}
				}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.activityId = ActivityObj:getEntityId(ModuleSub.eTimedDayDayCharge)
	slot0.btnList = {}
	slot0.curTag = 0

	if RedDotObj:isValid(ModuleSub.eTimedDayDayChargePoint) then
		RedDotObj:seeRedDot("TimedDayDayCharge")
	end

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.refreshUI = function (slot0)
	slot0.chargeNumLabel:setString(TR("今日累计充值：%d元", slot0.ChargeMoney))

	slot0.mEndTime = ActivityObj:getActivityInfo(ModuleSub.eTimedDayDayCharge)[1].EndDate

	slot0.upDateTime(slot0)

	slot0.mSchelTime = Utility.schedule(slot0, slot0.upDateTime, 1)

	slot0.mCheckBox:setSelected(MqTime.isSameDay(LocalData:getGameDataValue("TimedDayDayCharge") or 0, Player:getCurrentTime()))
	slot0.createBtnList(slot0)

	return 
end
slot0.createBtnList = function (slot0)
	slot0.mListView:removeAllChildren()

	for slot4, slot5 in ipairs(slot0.RewardList) do
		slot6 = slot0.createLayoutTemplateNode(slot0, "btnLayout")

		slot6.btn:setTitleText(TR("%s元", slot5.ChargeNum))

		slot6.btn.tag = slot4
		slot6.btn.ChargeNum = slot5.ChargeNum

		slot6.btn:setClickAction(function ()
			slot0:onClickAct(slot0)

			return 
		end)
		slot6.btn:addChild(slot7)
		table.insert(slot0.btnList, slot6)
		slot0.mListView:pushBackCustomItem(slot6)
	end

	slot0.onClickAct(slot0, 1)

	return 
end
slot0.onClickAct = function (slot0, slot1)
	if slot0.curTag == slot1 then
		return 
	end

	slot0.curTag = slot1

	for slot5, slot6 in ipairs(slot0.btnList) do
		slot6.btn:loadTextures((slot6.btn.tag == slot1 and "mrcz_3.png") or "mrcz_4.png", )
		slot6.btn.titleLabel:setTextColor((slot6.btn.tag == slot1 and cc.c3b(254, 212, 84)) or cc.c3b(112, 76, 49))
	end

	slot0.refreshReward(slot0, slot1)

	return 
end
slot0.refreshReward = function (slot0, slot1)
	slot0.rewardList:removeAllChildren()
	slot0.rewardList:setContentSize(cc.size(math.min(260, #Utility.analysisStrResList(slot3)*65), 80))

	for slot8, slot9 in ipairs(slot4) do
		slot0.createLayoutTemplateNode(slot0, "rewardLayout").recardNode:setCardData(slot9, {
			Enums.CardShowAttr.eNum
		})
		slot0.rewardList:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "rewardLayout"))
	end

	slot0.rewardBtn:setEnabled(not (0 < slot2.DrawNums or (slot2.DrawNums == 0 and slot0.ChargeMoney < slot2.ChargeNum)))
	slot0.rewardBtn:setTitleText((0 < slot2.DrawNums and TR("已领取")) or TR("领取"))

	return 
end
slot0.upDateTime = function (slot0)
	if 0 < slot0.mEndTime - Player:getCurrentTime() then
		slot0.timeLabel:setString(TR("活动倒计时：%s", MqTime.completeFormat(slot1)))
	else
		slot0.timeLabel:setString(TR("00时00分00秒"))

		if slot0.mSchelTime then
			slot0.stopAction(slot0, slot0.mSchelTime)

			slot0.mSchelTime = nil
		end
	end

	return 
end
slot0.onCloseBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onGoToRechargeLayer = function (slot0)
	LayerManager.addLayer({
		name = "recharge.RechargeHomeLayer"
	})

	return 
end
slot0.onNoTipToday = function (slot0, slot1)
	Player:saveGameData("needShowTimedDayDayCharge", true)
	LocalData:saveGameDataValue("TimedDayDayCharge", (slot1.isSelected(slot1) and Player:getCurrentTime()) or 0)

	return 
end
slot0.onRequestActiveInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "TimedDayDayCharge",
		methodData = {
			slot0.activityId
		},
		successCallback = function (slot0)
			slot0.ChargeMoney = slot0.ChargeMoney
			slot0.RewardList = slot0.RewardList

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.onRequestReward = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "Reward",
		moduleName = "TimedDayDayCharge",
		methodData = {
			slot0.activityId,
			slot0.RewardList[slot0.curTag].ChargeNum
		},
		successCallback = function (slot0)
			slot0.RewardList = slot0.RewardList

			slot0:refreshReward(slot0.curTag)
			ui.showFlashReward({
				BaseGetGameResourceList = slot0.BaseGetGameResourceList
			})

			return 
		end
	})

	return 
end

return slot0
