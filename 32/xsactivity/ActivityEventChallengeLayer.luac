slot0 = class("ActivityEventChallengeLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled26",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "xshd_1.png",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled3",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled5",
				cType = "Scale9Sprite",
				params = {
					image = "tc_2.png",
					pos = {
						x = 46.58,
						y = -53.96
					},
					size = {
						width = 935,
						height = 520
					}
				},
				children = {
					{
						name = "mRewardListView",
						cType = "ListView",
						params = {
							direction = true,
							pos = {
								x = 336.5,
								y = 26.13
							},
							size = {
								width = 580,
								height = 465
							}
						},
						children = {
							{
								name = "mTemplateCell",
								cType = "Layout",
								custom = {
									{
										value = "untitled52-text",
										name = "rankText",
										type = "string"
									}
								},
								params = {
									size = {
										width = 580,
										height = 100
									}
								},
								children = {
									{
										name = "untitled43",
										cType = "Scale9Sprite",
										params = {
											image = "c_98.png",
											childName = "bgCellSprite",
											pos = {
												x = 290,
												y = 50
											},
											size = {
												width = 570,
												height = 90
											}
										},
										children = {
											{
												name = "untitled51",
												cType = "Sprite",
												params = {
													image = "xxzy_3.png",
													pos = {
														x = 52,
														y = 45
													}
												},
												children = {}
											},
											{
												name = "untitled52",
												cType = "Label",
												params = {
													fontSize = 30,
													text = "8",
													color = {
														g = 255,
														r = 255,
														b = 255
													},
													outlineColor = {
														g = 37,
														r = 37,
														b = 37
													},
													pos = {
														x = 52.64,
														y = 45
													}
												},
												children = {}
											},
											{
												name = "untitled53",
												cType = "Button",
												params = {
													image = "c_27.png",
													childName = "getBtn",
													pos = {
														x = 499.16,
														y = 55
													},
													titleText = TR("挑战")
												},
												children = {}
											},
											{
												name = "untitled54",
												cType = "ListView",
												params = {
													childName = "listView",
													direction = false,
													swallowTouch = false,
													pos = {
														x = 96.15,
														y = 5.47
													},
													size = {
														width = 340,
														height = 80
													}
												},
												children = {}
											},
											{
												name = "untitled55",
												cType = "Sprite",
												params = {
													childName = "getSprite",
													image = "c_55.png",
													hide = true,
													pos = {
														x = 499,
														y = 55
													}
												},
												children = {}
											},
											{
												name = "untitled56",
												cType = "Label",
												params = {
													fontSize = 17,
													text = "",
													childName = "fapValue",
													color = {
														g = 255,
														r = 255,
														b = 255
													},
													outlineColor = {
														g = 37,
														r = 37,
														b = 37
													},
													pos = {
														x = 499,
														y = 20.75
													}
												},
												children = {}
											}
										}
									}
								}
							}
						}
					},
					{
						name = "mEmptyInfoLabel1",
						cType = "Label",
						params = {
							fontSize = 36,
							hide = true,
							color = {
								g = 65,
								r = 192,
								b = 65
							},
							pos = {
								x = 625.34,
								y = 257.46
							},
							text = TR("暂无任何事件")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled4",
				cType = "Sprite",
				params = {
					image = "xxzy_1.png",
					pos = {
						x = -239.78,
						y = -51.27
					}
				},
				children = {
					{
						name = "mIntroSprite",
						cType = "Sprite",
						params = {
							image = "lh_12201.png",
							scale = 0.7,
							anchor = {
								x = 0.5,
								y = 0
							},
							pos = {
								x = 160.8,
								y = -32.18
							}
						},
						children = {}
					},
					{
						name = "untitled10",
						cType = "Sprite",
						params = {
							image = "xxzy_2.png",
							pos = {
								x = 159.29,
								y = 80.59
							}
						},
						children = {}
					},
					{
						name = "untitled12",
						cType = "Sprite",
						params = {
							image = "xxzy_4.png",
							pos = {
								x = 292.77,
								y = 395.69
							}
						},
						children = {}
					},
					{
						name = "heroName",
						cType = "Label",
						params = {
							pos = {
								x = 292.85,
								y = 401.09
							},
							size = {
								width = 25,
								height = 115
							},
							text = TR("名字")
						},
						children = {}
					},
					{
						name = "mChapterInfoLabel",
						cType = "Label",
						params = {
							fontSize = 16,
							align = 0,
							valign = 0,
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 161.27,
								y = 91.96
							},
							size = {
								width = 310,
								height = 110
							},
							text = TR("描述")
						},
						children = {}
					},
					{
						name = "mThemeLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							outlineColor = {
								g = 37,
								r = 37,
								b = 37
							},
							pos = {
								x = 161.07,
								y = 17.15
							},
							text = TR("禁用阵营")
						},
						children = {}
					}
				}
			},
			{
				name = "untitled7",
				cType = "Scale9Sprite",
				params = {
					image = "xshd_3.png",
					pos = {
						x = -213,
						y = 222.7
					},
					size = {
						width = 400,
						height = 50
					}
				},
				children = {
					{
						name = "mRemainTimeLabel",
						cType = "Label",
						params = {
							text = "22:22:22",
							isRichText = true,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 255,
								r = 255,
								b = 255
							},
							pos = {
								x = 37.16,
								y = 21.06
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled40",
				cType = "Scale9Sprite",
				params = {
					image = "fuli_1.png",
					anchor = {
						x = 0,
						y = 0
					},
					pos = {
						x = -555,
						y = -291
					},
					size = {
						width = 130,
						height = 520
					}
				},
				children = {
					{
						name = "mEmptyInfoLabel",
						cType = "Label",
						params = {
							fontSize = 36,
							hide = true,
							color = {
								g = 65,
								r = 192,
								b = 65
							},
							pos = {
								x = 64.33,
								y = 269.28
							},
							size = {
								width = 36,
								height = 300
							},
							text = TR("暂无任何事件")
						},
						children = {}
					}
				}
			},
			{
				name = "mTopListView",
				cType = "ListView",
				params = {
					margin = 0,
					direction = true,
					pos = {
						x = -550,
						y = -291
					},
					size = {
						width = 120,
						height = 520
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled31",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled34",
				cType = "Button",
				params = {
					image = "c_1.png",
					clickAction = "onCloseBtnClick",
					pos = {
						x = 125.1,
						y = -30.65
					}
				},
				children = {}
			},
			{
				name = "untitled35",
				cType = "Sprite",
				params = {
					image = "xxzy_5.png",
					pos = {
						x = 192.28,
						y = -25.88
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled37",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {
			{
				name = "untitled38",
				cType = "TopResourceNode",
				params = {
					moduleIdList = {
						1111,
						1112,
						1114
					},
					pos = {
						x = -518.84,
						y = -51
					}
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)

	slot0.rewardItemList = {}
	slot0.mCurrChapterId = slot1.currChapterId

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	slot0.mIntroSprite:setTexture("c_58.png")
	slot0.mRemainTimeLabel:setString("")
	slot0.mChapterInfoLabel:setString("")
	slot0.mThemeLabel:setString("")
	slot0.heroName:setString("")

	slot0.mDataList = {}

	slot0.requestGetInfo(slot0)
	slot0.seeTips(slot0)

	return 
end
slot0.seeTips = function (slot0)
	RedDotObj:seeRedDot("EventChallengeReddot")

	return 
end
slot0.refreshUI = function (slot0)
	slot0.mTopListView:removeAllItems()

	slot0.mTopNodeList = {}

	slot0.mEmptyInfoLabel:setVisible(false)
	slot0.mEmptyInfoLabel1:setVisible(false)

	if slot0.mDataList == nil or #slot0.mDataList == 0 then
		slot0.mEmptyInfoLabel:setVisible(true)
		slot0.mEmptyInfoLabel1:setVisible(true)

		return 
	end

	for slot4, slot5 in ipairs(slot0.mDataList) do
		slot6 = cc.size(120, 120)
		slot7 = UIWrap.newControl("Layout", {
			size = slot6
		})
		slot9 = UIWrap.newControl("CardNode", {
			allowClick = true,
			initParams = {
				cardInfo = {
					modelId = EventChallengeChapterModel.items[slot5.EventChapterId].heroHeadPicId
				},
				showAttrs = {}
			},
			pos = cc.p(slot6.width/2, slot6.height/2),
			clickAction = function ()
				if slot0.mCurrChapterId ~= slot1.EventChapterId then
					slot0.mCurrChapterId = slot1.EventChapterId

					slot0:onChangeChapterAction(slot1.EventChapterId)
				end

				return 
			end
		})

		slot9.setRightTextVisible(slot9, false)
		slot7.addChild(slot7, slot9)

		slot7.headerNode = slot9

		slot9.addChild(slot9, slot10)

		slot0.mTopNodeList[slot5.EventChapterId] = slot7

		slot0.mTopListView:pushBackCustomItem(slot7)
	end

	if slot0.mCurrChapterId == nil then
		slot0.mCurrChapterId = slot0.mDataList[1].EventChapterId
	end

	slot0.onChangeChapterAction(slot0, slot0.mCurrChapterId)

	return 
end
slot0.reloadRewardList = function (slot0)
	slot0.needFap = 0
	slot1 = {
		Done = 3,
		CanReward = 1,
		NeedFight = 2
	}
	slot2 = slot0.getChapterInfo(slot0, slot0.mCurrChapterId)

	function slot3(slot0)
		if slot0.IsFinish == true or slot0.modelId < slot0.CurrentNodeId then
			return slot1.Done
		end

		if slot0.CurrentNodeId == slot0.modelId and slot0.IsPass == true then
			return slot1.CanReward
		end

		return slot1.NeedFight
	end

	slot4 = {}

	for slot8, slot9 in pairs(EventChallengeNodeModel.items) do
		if slot9.chapterModelId == slot0.mCurrChapterId then
			slot10 = clone(slot9)
			slot10.state = slot3(slot10)

			table.insert(slot4, slot10)
		end
	end

	table.sort(slot4, function (slot0, slot1)
		if slot0.state ~= slot1.state then
			return slot0.state < slot1.state
		end

		return slot0.modelId < slot1.modelId
	end)
	slot0.mRewardListView:removeAllItems()

	for slot8, slot9 in ipairs(slot4) do
		slot11 = slot0.createLayoutTemplateNode(slot0, "mTemplateCell", {
			rankText = slot9.modelId%(slot9.chapterModelId*10)
		})

		for slot15, slot16 in ipairs(Utility.analysisStrResList(slot9.outPutStr)) do
			slot17 = UIWrap.newControl("Layout", {
				size = cc.size(80, 90)
			})
			slot18 = UIWrap.newControl("CardNode", {
				allowClick = true,
				initParams = {
					cardInfo = {
						modelId = slot16.resourceId,
						num = slot16.num
					},
					showAttrs = {
						Enums.CardShowAttr.eNum
					}
				},
				pos = cc.p(40, 45)
			})

			slot18.setScale(slot18, 0.9)
			slot17.addChild(slot17, slot18)
			slot11.bgCellSprite.listView:pushBackCustomItem(slot17)

			if slot16.resourceId == ResourceTypeSub.eExp and PlayerConfig.items[1].noEnjoyAnyExpAddsLv < PlayerAttrObj:getPlayerAttrByName("Lv") and PlayerAttrObj:getPlayerAttrByName("WorldLvAddR") and 0 < slot19 then
				slot18.addChild(slot18, UIWrap.newControl("Label", {
					fontSize = 15,
					text = TR("经验+%s%%", slot19*100),
					color = cc.c3b(55, 255, 64),
					anchor = cc.p(1, 1),
					outlineColor = cc.c3b(51, 42, 24),
					pos = cc.p(85, 88)
				}))
			end
		end

		if slot9.state == slot1.Done then
			slot11.bgCellSprite.getBtn:setVisible(false)
			slot11.bgCellSprite.getSprite:setVisible(true)
		elseif slot9.state == slot1.CanReward then
			slot11.bgCellSprite.getBtn:setTitleText(TR("领 取"))
			slot11.bgCellSprite.getBtn:loadTextures("c_32.png", "c_32.png")

			slot12 = UIWrap.newControl("Effect", {
				loop = true,
				dataFile = "effect_ui_anniu"
			})

			slot12.setPosition(slot12, 3, 0)
			slot11.bgCellSprite.getBtn:addChild(slot12)
			slot11.bgCellSprite.getBtn:setClickAction(function ()
				if slot0.EndTime < Player:getCurrentTime() then
					ui.showFlashView(TR("当前侠客活动已结束"))
				else
					slot1:requestReceiveReward(slot0.EventChapterId, slot0.CurrentNodeId)
				end

				return 
			end)
		else
			if slot0.needFap == 0 then
				slot0.needFap = slot9.fap

				slot11.bgCellSprite.fapValue:setString(TR("推荐战力:%s", Utility.numberWithUnit(slot9.fap)))
			end

			slot11.bgCellSprite.getBtn:setTitleText(TR("挑战"))
			slot11.bgCellSprite.getBtn:setClickAction(function ()
				if slot0.EndTime < Player:getCurrentTime() then
					ui.showFlashView(TR("当前侠客活动已结束"))
				else
					slot1:fightToNode(slot0.EventChapterId, slot2.modelId, slot0.FormationInfo)
				end

				return 
			end)
			slot11.bgCellSprite.getBtn:setEnabled(slot9.modelId <= slot2.CurrentNodeId)
		end

		slot0.mRewardListView:pushBackCustomItem(slot11)
		slot11.bgCellSprite.fapValue:setVisible(slot0.needFap ~= 0)
	end

	return 
end
slot0.getRestoreData = function (slot0)
	return {
		currChapterId = slot0.mCurrChapterId
	}
end
slot0.onChangeChapterAction = function (slot0, slot1)
	for slot5, slot6 in pairs(slot0.mTopNodeList) do
		slot6.headerNode:setSelected(slot5 == slot1)
	end

	slot0.heroName:setString(TR("%s", HeroModel.items[EventChallengeChapterModel.items[slot1].heroHeadPicId].name))
	slot0.mIntroSprite:setTexture(HeroModel.items[EventChallengeChapterModel.items[slot1].heroHeadPicId].drawingPicA .. ".png")
	slot0.mChapterInfoLabel:setString(EventChallengeChapterModel.items[slot1].intro)
	slot0.mThemeLabel:setString(Utility.formatFightLimitTheme(EventChallengeChapterModel.items[slot1].forbiddenCamp, EventChallengeChapterModel.items[slot1].forbiddenJob, EventChallengeChapterModel.items[slot1].forbiddenSex))

	if slot0.getChapterInfo(slot0, slot1) == nil then
		return 
	end

	slot0.mRemainTimeLabel:stopAllActions()
	slot0.mRemainTimeLabel:setString("")
	Utility.schedule(slot0.mRemainTimeLabel, function ()
		if 0 < slot0.EndTime - Player:getCurrentTime() then
			slot1.mRemainTimeLabel:setString(TR("剩余时间 #FFE748%s", MqTime.formatAsDay(slot0)))
		else
			slot1.mRemainTimeLabel:setString("#FFE748" .. TR("当前侠客活动已结束"))
			slot1.mRemainTimeLabel.setString.mRemainTimeLabel:stopAllActions()
		end

		return 
	end, 0.5)
	slot0.reloadRewardList(slot0)

	return 
end
slot0.getChapterInfo = function (slot0, slot1)
	slot2 = nil

	for slot6, slot7 in ipairs(slot0.mDataList) do
		if slot7.EventChapterId == slot1 then
			slot2 = clone(slot7)

			break
		end
	end

	return slot2
end
slot0.fightToNode = function (slot0, slot1, slot2, slot3)
	slot4 = {}
	slot5 = {}
	slot6 = 0

	for slot11, slot12 in ipairs(string.split(tostring(EventChallengeChapterModel.items[slot1].forbiddenCamp), ",")) do
		if 0 < (tonumber(slot12) or 0) then
			table.insert(slot4, slot13)
		end
	end

	for slot11, slot12 in ipairs(string.split(tostring(slot7.forbiddenJob), ",")) do
		if 0 < (tonumber(slot12) or 0) then
			table.insert(slot5, slot13)
		end
	end

	ui.showCampReady({
		noNeedVit = false,
		callModelSub = ModuleSub.eEventChallenge,
		currSlotString = slot3,
		ignoreCampList = slot4,
		ignoreProfessionList = slot5,
		ignoreSexId = tonumber(slot7.forbiddenSex),
		mercenaryList = MercenaryObj:getMercenaryIdByModuleId(ModuleSub.eEventChallenge),
		callback = function (slot0)
			slot0:requestGetChallengeInfo(slot0.requestGetChallengeInfo, slot0, table.concat(slot0, ","))

			return 
		end
	})

	return 
end
slot0.onCloseBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetAllEventInfo",
		moduleName = "EventChallenge",
		methodData = {},
		successCallback = function (slot0)
			slot1 = {}

			for slot5, slot6 in pairs(slot0) do
				table.insert(slot1, slot6)
			end

			table.sort(slot1, function (slot0, slot1)
				if slot0.IsFinish ~= slot1.IsFinish then
					return slot0.IsFinish == false
				end

				return slot0.EventChapterId < slot1.EventChapterId
			end)

			slot0.mDataList = slot1

			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestGetChallengeInfo = function (slot0, slot1, slot2, slot3)
	slot0.socketRequest(slot0, {
		methodName = "GetChallengeInfo",
		moduleName = "EventChallenge",
		methodData = {
			slot1,
			slot2,
			slot3
		},
		successCallback = function (slot0)
			require("common.BattleEntry"):StartBattle({
				fightInfo = slot0.FightInfo,
				extraData = {
					chapterId = slot0,
					nodeId = require("common.BattleEntry").StartBattle
				}
			})

			return 
		end
	})

	return 
end
slot0.requestReceiveReward = function (slot0, slot1, slot2)
	slot0.socketRequest(slot0, {
		methodName = "GetNodeReward",
		moduleName = "EventChallenge",
		methodData = {
			slot1,
			slot2
		},
		successCallback = function (slot0)
			function slot1(slot0)
				for slot4, slot5 in ipairs(slot0.mDataList) do
					if slot5.EventChapterId == slot0.EventChapterId then
						slot5.CurrentNodeId = slot0.CurrentNodeId
						slot5.IsPass = slot0.IsPass
						slot5.IsFinish = slot0.IsFinish

						break
					end
				end

				return 
			end

			slot2 = pairs
			slot3 = slot0.EventChallenge or {}

			for slot5, slot6 in slot2(slot3) do
				slot1(slot6)
			end

			slot0:reloadRewardList()
			ui.showFlashReward({
				BaseGetGameResourceList = slot0.BaseGetGameResourceList
			})
			PlayerAttrObj:checkLvUp()

			return 
		end
	})

	return 
end

return slot0
