slot0 = class("ActivityJlbzLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "FileLayer",
		params = {
			onlyEditer = true,
			file = "xsactivity/XSActivityMainLayer.lua"
		},
		children = {}
	},
	{
		name = "untitled63",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "jlmz_10.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled2",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled3",
				cType = "Button",
				params = {
					clickAction = "onRuleCallback",
					image = "c_3.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 275,
						y = -5
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled4",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "untitled44",
				cType = "Sprite",
				params = {
					image = "jlmz_9.png",
					pos = {
						x = -341.73,
						y = -0.65
					}
				},
				children = {}
			},
			{
				name = "untitled45",
				cType = "Scale9Sprite",
				params = {
					image = "jlmz_3.png",
					pos = {
						x = 138.27,
						y = 87.33
					}
				},
				children = {}
			},
			{
				name = "untitled46",
				cType = "Scale9Sprite",
				params = {
					image = "jlmz_4.png",
					pos = {
						x = 140.85,
						y = -145.13
					}
				},
				children = {}
			},
			{
				name = "untitled47",
				cType = "Scale9Sprite",
				params = {
					image = "c_118.png",
					pos = {
						x = -111.68,
						y = 226.08
					},
					size = {
						width = 300,
						height = 49.29
					}
				},
				children = {
					{
						name = "untitled48",
						cType = "Label",
						params = {
							pos = {
								x = 84.54,
								y = 24
							},
							text = TR("活动倒计时：")
						},
						children = {}
					},
					{
						name = "mTimeLabel",
						cType = "Label",
						params = {
							text = "Label",
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 199,
								r = 223,
								b = 42
							},
							pos = {
								x = 145.54,
								y = 24
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled50",
				cType = "Label",
				params = {
					fontSize = 20,
					pos = {
						x = 245.08,
						y = 216.54
					},
					text = TR("钥匙一轮最多获得10个，请及时收取")
				},
				children = {}
			},
			{
				name = "untitled51",
				cType = "Button",
				params = {
					image = "tb_gn_201.png",
					clickAction = "onPreViewCallback",
					pos = {
						x = 492.75,
						y = 193.93
					}
				},
				children = {}
			},
			{
				name = "mBoxParent",
				cType = "Node",
				params = {
					pos = {
						x = -228.11,
						y = -45.7
					}
				},
				children = {}
			},
			{
				name = "mRefreshBtn",
				cType = "Button",
				params = {
					image = "c_27.png",
					clickAction = "onRefreshCallback",
					pos = {
						x = 400,
						y = -116.02
					},
					titleText = TR("刷新宝藏")
				},
				children = {}
			},
			{
				name = "mOpenBtn",
				cType = "Button",
				params = {
					image = "c_32.png",
					clickAction = "onOpenCallback",
					pos = {
						x = 400,
						y = -200.02
					},
					titleText = TR("放入箱子")
				},
				children = {
					{
						name = "untitled66",
						cType = "RedDot",
						params = {
							subKey = "RewardBox",
							moduleId = 13101
						},
						children = {}
					}
				}
			},
			{
				name = "untitled62",
				cType = "Sprite",
				params = {
					image = "db_50075.png",
					pos = {
						x = 382.38,
						y = -159.71
					}
				},
				children = {}
			},
			{
				name = "mKeyNumLabel",
				cType = "Label",
				params = {
					text = "X0",
					anchor = {
						x = 0,
						y = 0.5
					},
					pos = {
						x = 403.86,
						y = -161.49
					}
				},
				children = {}
			},
			{
				name = "untitled58",
				cType = "Scale9Sprite",
				params = {
					image = "jyt_33.png",
					pos = {
						x = 248.59,
						y = -279.93
					},
					size = {
						width = 390,
						height = 22
					}
				},
				children = {}
			},
			{
				name = "progress",
				cType = "ProgressBar",
				params = {
					maxValue = 1,
					currValue = 100,
					normalImage = "jyt_34.png",
					pos = {
						x = 241.32,
						y = -282.09
					},
					size = {
						width = 350,
						height = 15
					}
				},
				children = {}
			},
			{
				name = "progressLabel",
				cType = "Label",
				params = {
					fontSize = 18,
					text = "Label",
					pos = {
						x = 242.59,
						y = -281.92
					}
				},
				children = {}
			},
			{
				name = "mRechargeHintLabel",
				cType = "Label",
				params = {
					text = "Label",
					anchor = {
						x = 0,
						y = 0
					},
					pos = {
						x = 87.12,
						y = -267.03
					}
				},
				children = {}
			},
			{
				name = "untitled60",
				cType = "Button",
				params = {
					image = "jlmz_6.png",
					clickAction = "onCharge",
					pos = {
						x = 493.05,
						y = -279.62
					}
				},
				children = {}
			},
			{
				name = "mRefreshUseLabel",
				cType = "Label",
				params = {
					text = "",
					isRichText = true,
					pos = {
						x = 403.86,
						y = -77.49
					}
				},
				children = {}
			},
			{
				name = "mNextDoubleLabel",
				cType = "Label",
				params = {
					hide = true,
					pos = {
						x = 138.7,
						y = 73.18
					},
					text = TR("下次奖励翻倍")
				},
				children = {}
			},
			{
				name = "flashSprite",
				cType = "Scale9Sprite",
				params = {
					image = "c_112.png",
					delayInit = true,
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled65",
						cType = "CardNode",
						params = {
							childName = "card",
							allowClick = false,
							pos = {
								x = 304,
								y = 74
							}
						},
						children = {}
					}
				}
			},
			{
				name = "mResetBtn",
				cType = "Button",
				params = {
					image = "jlmz_12.png",
					clickAction = "onReset",
					pos = {
						x = 16.25,
						y = -285.03
					}
				},
				children = {}
			},
			{
				name = "mResetTimeLabel",
				cType = "Label",
				params = {
					fontSize = 18,
					emptyInit = true,
					isRichText = true,
					anchor = {
						x = 0,
						y = 0
					},
					pos = {
						x = -393.71,
						y = -309.72
					},
					text = TR("重置次数恢复倒计时：")
				},
				children = {}
			},
			{
				name = "mResetCountLabel",
				cType = "Label",
				params = {
					fontSize = 18,
					emptyInit = true,
					anchor = {
						x = 0,
						y = 0
					},
					pos = {
						x = 77.17,
						y = -316.04
					},
					text = TR("剩余重置次数：")
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mEndTime = 0
	slot0.mIsPutIn = false
	slot0.mOpenNum = 0
	slot0.mNeedNum = 0
	slot0.mReceviedRewardList = {}
	slot0.mBaseRewardList = {}
	slot0.mReceviedBoxList = {}
	slot0.mUseDiamond = 0
	slot0.mIsNextDouble = false
	slot0.mDoubleRewardId = -1
	slot0.mHadNum = 0

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	slot0.requestGetInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.onRuleCallback = function (slot0)
	ui.showRuleMsg({
		titleText = TR("金龙秘宝"),
		textList = {
			TR("1.九种物品和下次双倍共十种奖励可以抽取，使用刷新宝藏可以刷新想要的宝藏。"),
			TR("2.确定宝藏之后，将奖励放入宝箱，点击箱子开始抽取，放入宝箱后不能再刷新。"),
			TR("3.开启宝箱需要钥匙，每充值一定金额，都会获得一把钥匙，单笔充值最多获得10把钥匙。"),
			TR("4.一轮宝藏最多获得10把钥匙，10个宝箱开完之后开启下一轮。"),
			TR("5.抽取到下次双倍后下次奖励翻倍，下次双倍如果最后被抽到，那么在抽完九次后会自动刷新下一轮。")
		}
	})

	return 
end
slot0.onCharge = function (slot0)
	LayerManager.addLayer({
		name = "recharge.RechargeHomeLayer"
	})

	return 
end
slot0.onReset = function (slot0)
	if 0 < slot0.mOpenNum then
		ui.showFlashView(TR("请先使用完所有宝藏钥匙！"))

		return 
	end

	ui.showMessageBox({
		titleText = TR("提示"),
		text = TR("重置后金龙宝藏整体重置（累计充值，奖励选择），是否确认重置？"),
		okCallback = function ()
			slot0:requestReset()

			return 
		end,
		cancelCallback = function ()
			return 
		end
	})

	return 
end
slot0.onRefreshCallback = function (slot0)
	if slot0.mIsPutIn then
		ui.showFlashView(TR("宝藏已放入箱子不能刷新"))

		return 
	end

	if not Resource.isEnough(ResourceTypeSub.eDiamond, slot0.mUseDiamond) then
		return 
	end

	ui.showMessageBox({
		titleText = TR("提示"),
		text = TR("是否确认花费#c04141%s#45220d元宝刷新宝藏", slot0.mUseDiamond),
		okCallback = function (slot0)
			slot0:requestRefreshReward()

			return 
		end
	})

	return 
end
slot0.onOpenCallback = function (slot0)
	if slot0.mIsPutIn then
		ui.showFlashView(TR("宝藏已放入箱子"))

		return 
	end

	slot0.PutBox(slot0)

	return 
end
slot0.onPreViewCallback = function (slot0)
	if slot0.mViewRewardsInfo then
		LayerManager.addLayer({
			cleanUp = false,
			name = "xsactivity.ActivityJlbzPreviewLayer",
			data = {
				viewRewardsInfo = slot0.mViewRewardsInfo
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	else
		slot0.requestViewRewards(slot0)
	end

	return 
end
slot0.refreshBoxRewardShow = function (slot0)
	slot0.mBoxParent:removeAllChildren()

	slot2 = cc.p(365, 85)
	slot3 = {}

	for slot7, slot8 in ipairs(slot1) do
		slot9 = nil

		if not slot0.mIsPutIn or slot0.mReceviedBoxList[slot7] then
			slot10 = UIWrap.newControl("Sprite", {
				image = "jlmz_2.png"
			})

			slot10.setAnchorPoint(slot10, cc.p(0.5, 0))
			slot10.setPosition(slot10, slot8)
			slot0.mBoxParent:addChild(slot10)

			slot9 = slot10
		else
			slot10 = UIWrap.newControl("Button", {
				image = "jlmz_1.png",
				pos = slot8,
				clickAction = function (slot0)
					if slot0.mOpenNum < 1 then
						ui.showFlashView(TR("钥匙不足"))

						return 
					end

					slot0:requestGetReward(slot0.requestGetReward, slot2[slot0.requestGetReward])

					return 
				end
			})

			slot10.setAnchorPoint(slot10, cc.p(0.5, 0))
			slot0.mBoxParent:addChild(slot10)

			slot9 = slot10

			ui.setWaveAnimation(slot10, 3)
		end

		table.insert(slot3, slot9)
	end

	slot4 = {}
	slot5 = 5
	slot6 = 0

	for slot10, slot11 in pairs(slot0.mBaseRewardList) do
		slot12, slot13 = nil

		if slot11 ~= "" then
			slot12 = UIWrap.newControl("CardNode", {
				allowClick = true,
				scale = 0.8,
				initParams = {
					cardInfo = Utility.analysisStrResList(slot11)[1],
					showAttrs = {
						Enums.CardShowAttr.eBorder,
						Enums.CardShowAttr.eNum
					}
				}
			})

			if slot0.mRewardFrameInfo[slot10] then
				slot12.setLiubian(slot12, "effect_ui_touxiangkuang", ({
					"cheng",
					"hong",
					"jinse",
					"zuanshi"
				})[slot0.mRewardFrameInfo[slot10]])
			end
		else
			UIWrap.newControl("CardNode", {
				scale = 0.8,
				allowClick = false
			}):setExtraImg("jlmz_11.png")
		end

		slot12.setScale(slot12, 0.85)
		slot12.setPosition(slot12, slot6%slot5*100 + 80, math.floor(slot6/slot5)*85 - -55)
		slot0.mBoxParent:addChild(slot12)

		slot16 = UIWrap.newControl("Sprite", {
			image = "jlmz_5.png"
		})

		slot16.setPosition(slot16, slot12.getContentSize(slot12).width*0.5, slot12.getContentSize(slot12).height - 10)
		slot12.addChild(slot12, slot16, 100)

		slot12.notOpenSprite = slot16

		if slot0.mIsPutIn and not slot0.mReceviedRewardList[slot10] then
			slot12.setGray(slot12, true)
		end

		slot16.setVisible(slot16, slot0.mIsPutIn and not slot0.mReceviedRewardList[slot10])

		if tostring(slot0.mDoubleRewardId) == slot10 then
			slot17 = UIWrap.newControl("Sprite", {
				image = "jhmz_11.png"
			})

			slot17.setPosition(slot17, slot12.getContentSize(slot12).width - 15, slot12.getContentSize(slot12).height - 15)
			slot12.addChild(slot12, slot17)
		end

		slot6 = slot6 + 1
		slot12.moveFun = function (slot0, slot1)
			slot2 = {
				Enums.CardShowAttr.eBorder,
				Enums.CardShowAttr.eNum
			}
			slot3 = UIWrap.newControl("CardNode", {
				scale = 0.8,
				allowClick = false
			})

			if slot0 then
				slot3.setCardData(slot3, slot0, slot2)
			else
				slot3.setExtraImg(slot3, "jlmz_11.png")
			end

			slot3.setScale(slot3, 0.85)
			slot3.setPosition(slot3, slot1*100 + 80, slot2*85 - -55)
			slot3.mBoxParent:addChild(slot3)
			slot0.setGray(slot0, true)
			slot0.setGray.notOpenSprite:setVisible(true)
			slot3.runAction(slot3, cc.Sequence:create(slot4, slot5))

			return 
		end

		table.insert(slot4, slot12)
	end

	slot0.mBoxParent.playAnimation = function ()
		slot4.mBoxParent:runAction(cc.Sequence:create(slot4, slot5, cc.CallFunc:create(function (slot0)
			for slot4, slot5 in ipairs(slot0) do
				slot5.moveFun(slot5, slot1)
			end

			return 
		end), cc.DelayTime:create(slot1), cc.CallFunc:create(function (slot0)
			for slot4, slot5 in pairs(slot0) do
				slot5.setTexture(slot5, "jlmz_1.png")
				slot5.runAction(slot5, cc.Sequence:create(slot7))
			end

			return 
		end), cc.DelayTime:create(slot2), cc.CallFunc:create(function (slot0)
			for slot4, slot5 in ipairs(slot0) do
				slot5.runAction(slot5, cc.MoveTo:create(slot1, slot2[slot4]))
			end

			return 
		end)))

		return 0.5 + 0.5 + 0.55 + 0.5
	end

	return 
end
slot0.PutBox = function (slot0)
	ui.addTouchEvent({
		node = cc.Layer:create()
	})
	slot0.addChild(slot0, slot2, 10)
	Utility.performWithDelay(slot0, function ()
		slot0:removeFromParent()
		slot0:requestPutBox()

		return 
	end, slot0.mBoxParent.playAnimation())

	return 
end
slot0.createDoubleFlash = function (slot0)
	slot0.createUISubTree(slot0, "flashSprite")
	slot0.flashSprite.card:setExtraImg("jlmz_11.png")
	slot0.flashSprite:runAction(cc.Sequence:create({
		cc.ScaleTo:create(0.1, 1.5),
		cc.ScaleTo:create(0.1, 1),
		cc.MoveBy:create(slot0.mMoveTime or 1.3, cc.p(0, 50)),
		cc.CallFunc:create(function (slot0)
			if not tolua.isnull(slot0) then
				slot0.removeFromParent(slot0)
			end

			return 
		end)
	}))

	return 
end
slot0.createUpdateTime = function (slot0)
	if slot0.mSchelTime then
		slot0.mTimeLabel:stopAction(slot0.mSchelTime)

		slot0.mSchelTime = nil
	end

	slot0.mSchelTime = Utility.schedule(slot0.mTimeLabel, function ()
		if 0 < slot0.mEndTime - Player:getCurrentTime() then
			slot0.mTimeLabel:setString(MqTime.formatAsDay(slot0))
		else
			slot0.mTimeLabel:setString("00:00:00")

			if slot0.mSchelTime then
				slot0:stopAction(slot0.mSchelTime)

				slot0.mSchelTime = nil
			end
		end

		return 
	end, 1)

	return 
end
slot0.createResetUpdateTime = function (slot0)
	if slot0.mResetTimeLabel.updateTime then
		slot0.mTimeLabel:stopAction(slot0.mResetTimeLabel.updateTime)

		slot0.mResetTimeLabel.updateTime = nil
	end

	slot0.mResetTimeLabel.updateTime = Utility.schedule(slot0.mResetTimeLabel, function ()
		if 0 < slot0.mResetTime - Player:getCurrentTime() then
			slot0.mResetTimeLabel:setString(TR("重置次数恢复 #8ba857%s", MqTime.formatAsDay(slot0)))
		else
			slot0.mResetTimeLabel:setString("00:00:00")

			if slot0.mResetTimeLabel.updateTime then
				slot0:stopAction(slot0.mResetTimeLabel.updateTime)

				slot0.mResetTimeLabel.updateTime = nil
			end

			Utility.performWithDelay(slot0, function ()
				slot0:requestGetInfo()

				return 
			end, 1)
		end

		return 
	end, 1)

	return 
end
slot0.refreshUI = function (slot0)
	if slot0.mIsPutIn then
		slot0.mOpenBtn:setEnabled(false)
		slot0.mOpenBtn:setTitleText(TR("已放入"))
		slot0.mRefreshBtn:setEnabled(false)
	else
		slot0.mOpenBtn:setEnabled(true)
		slot0.mOpenBtn:setTitleText(TR("放入箱子"))
		slot0.mRefreshBtn:setEnabled(true)
	end

	slot0.refreshBoxRewardShow(slot0)
	slot0.mKeyNumLabel:setString(string.format("X %d", slot0.mOpenNum))
	slot0.mRefreshUseLabel:setString(string.format("{%s}%s", Resource.getDaibiImg(ResourceTypeSub.eDiamond), slot0.mUseDiamond))
	slot0.mNextDoubleLabel:setVisible(slot0.mIsNextDouble)

	if slot0.mChargeInfos[slot0.mHadNum + 1] then
		slot0.progress:setMaxValue(slot1)
		slot0.progress:setCurrValue(slot2)
		slot0.progressLabel:setString(string.format("%s/%s", slot1 - slot0.mNeedNum, slot1))
	else
		slot0.progress:setMaxValue(slot2)
		slot0.progress:setCurrValue(slot2)
		slot0.progressLabel:setString(string.format("%s/%s", slot0.mChargeInfos[slot0.mHadNum], ))
	end

	if slot1 then
		slot0.mRechargeHintLabel:setString(TR("再充值%d元可获得一个钥匙", slot0.mNeedNum))
	else
		slot0.mRechargeHintLabel:setString(TR("已获得本轮所有钥匙"))
	end

	slot0.createUpdateTime(slot0)
	slot0.createResetUpdateTime(slot0)
	slot0.mResetBtn:setEnabled(0 < slot0.mResetCount)
	slot0.mResetCountLabel:setString(TR("剩余重置次数：%s", (0 < slot0.mResetCount and slot0.mResetCount) or 0))

	return 
end
slot0.refreshData = function (slot0, slot1)
	slot0.mEndTime = slot1.EndTime
	slot0.mUseDiamond = slot1.RefreshConsume
	slot0.mOpenNum = slot1.Num
	slot0.mIsPutIn = slot1.IsPutIn
	slot0.mNeedNum = slot1.NeedNum
	slot0.mReceviedBoxList = table.keys(slot1.BoxInfo or {})
	slot0.mReceviedRewardList = table.values(slot1.BoxInfo or {})
	slot0.mBaseRewardList = slot1.BaseRecord
	slot0.mIsNextDouble = slot1.NextIsDouble
	slot0.mDoubleRewardId = slot1.DoubleRewardId
	slot0.mRewardLevelIdInfo = slot1.RewardLevelIdInfo
	slot0.mRewardFrameInfo = slot1.RewardFrameInfo
	slot0.mResetTime = slot1.NextResetTime
	slot0.mResetCount = slot1.ResetCount
	slot0.mReceviedBoxList = {}
	slot3 = 0

	for slot7, slot8 in pairs(slot2) do
		slot0.mReceviedBoxList[tonumber(slot8)] = true
		slot3 = slot3 + 1
	end

	slot0.mReceviedRewardList = {}

	for slot8, slot9 in pairs(slot4) do
		slot0.mReceviedRewardList[tostring(slot9)] = true
	end

	if slot1.ChargeInfos then
		slot0.mChargeInfos = {}

		for slot8, slot9 in ipairs(slot1.ChargeInfos) do
			slot0.mChargeInfos[slot8] = slot9.ChargeNum
		end
	end

	slot0.mHadNum = slot3 + slot0.mOpenNum

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {},
		successCallback = function (slot0)
			slot0:refreshData(slot0)
			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestRefreshReward = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "RefreshReward",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {},
		successCallback = function (slot0)
			slot0:refreshData(slot0)
			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestGetReward = function (slot0, slot1, slot2)
	slot0.socketRequest(slot0, {
		methodName = "GetReward",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			if slot0.NextIsDouble then
				slot0:createDoubleFlash()
			else
				ui.showFlashReward(slot0)
			end

			slot0:refreshData(slot0)
			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestPutBox = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "PutInReward",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {},
		successCallback = function (slot0)
			slot0:refreshData(slot0)
			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestViewRewards = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "ViewRewards",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {},
		successCallback = function (slot0)
			slot0.mViewRewardsInfo = slot0

			LayerManager.addLayer({
				cleanUp = false,
				name = "xsactivity.ActivityJlbzPreviewLayer",
				data = {
					viewRewardsInfo = slot0.mViewRewardsInfo
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})

			return 
		end
	})

	return 
end
slot0.requestReset = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "Reset",
		moduleName = "TimedGoldenDragonTreasure",
		methodData = {},
		successCallback = function (slot0)
			slot0:refreshData(slot0)
			slot0:refreshUI()

			return 
		end
	})

	return 
end

return slot0
