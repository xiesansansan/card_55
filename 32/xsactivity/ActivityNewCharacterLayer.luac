slot0 = class("ActivityNewCharacterLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled18",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "kfkh_1.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled14",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "heroSp",
				cType = "Sprite",
				params = {
					image = "kfkh_11.png",
					hide = true,
					pos = {
						x = -360.88,
						y = -24.44
					}
				},
				children = {}
			},
			{
				name = "untitled70",
				cType = "Sprite",
				params = {
					image = "kfkh_10.png",
					pos = {
						x = -477.08,
						y = -62.98
					}
				},
				children = {}
			},
			{
				name = "untitled15",
				cType = "Scale9Sprite",
				params = {
					image = "kfkh_2.png",
					pos = {
						x = 160,
						y = 0
					}
				},
				children = {
					{
						name = "untitled85",
						cType = "Sprite",
						params = {
							rotationAngle = 90,
							image = "c_11.png",
							pos = {
								x = 217,
								y = 222
							}
						},
						children = {}
					},
					{
						name = "untitled84",
						cType = "Scale9Sprite",
						params = {
							image = "grxx_1.png",
							anchor = {
								x = 0,
								y = 1
							},
							capInsets = {
								x = 100,
								height = 20,
								width = 100,
								y = 100
							},
							pos = {
								x = 220,
								y = 380
							},
							size = {
								width = 540,
								height = 350
							}
						},
						children = {}
					},
					{
						name = "mTaskTabView",
						cType = "TabView",
						params = {
							onSelectChange = "onTaskChange",
							lightedImage = "c_30.png",
							direction = false,
							delayInit = true,
							normalImage = "c_31.png",
							btnInfos = {
								{
									title = "Test"
								}
							},
							pos = {
								x = 235,
								y = 385
							},
							size = {
								width = 510,
								height = 50
							},
							titleOffset = {
								x = 0.5,
								y = 0.55
							}
						},
						children = {}
					},
					{
						name = "daysTabSp",
						cType = "Sprite",
						params = {
							image = "kfkh_3.png",
							pos = {
								x = 132.37,
								y = 225
							}
						},
						children = {
							{
								name = "dayTabListView",
								cType = "ListView",
								params = {
									margin = 3.1,
									direction = true,
									anchor = {
										x = 0,
										y = 1
									},
									pos = {
										x = 5,
										y = 412
									},
									size = {
										width = 200,
										height = 415
									}
								},
								children = {
									{
										name = "dayItem",
										cType = "Layout",
										custom = {
											{
												value = "untitled33-subKey",
												name = "redDotKey",
												type = "string"
											},
											{
												value = "untitled32-titleText",
												name = "dayText",
												type = "string"
											}
										},
										params = {
											size = {
												width = 200,
												height = 55
											}
										},
										children = {
											{
												name = "untitled34",
												cType = "Sprite",
												params = {
													hide = true,
													image = "kfkh_4.png",
													childName = "curSprite",
													anchor = {
														x = 0,
														y = 0.5
													},
													pos = {
														x = 7,
														y = 27.5
													}
												},
												children = {}
											},
											{
												name = "untitled32",
												cType = "Button",
												params = {
													image = "c_pure.png",
													swallowTouch = false,
													childName = "tabBtn",
													pos = {
														x = 82,
														y = 27.5
													},
													size = {
														width = 160,
														height = 55
													},
													titleText = TR("第一日")
												},
												children = {
													{
														name = "untitled33",
														cType = "RedDot",
														params = {
															subKey = "",
															moduleId = 6001,
															offset = {
																x = 0.9,
																y = 0.7
															}
														},
														children = {}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					{
						name = "untitled36",
						cType = "ScrollView",
						params = {
							pos = {
								x = 220,
								y = 25
							},
							size = {
								width = 530,
								height = 350
							}
						},
						children = {
							{
								name = "mTableView",
								cType = "TableView",
								params = {
									numOfCellsFunc = "onCellNum",
									isVertical = true,
									cellUpdateFunc = "onCellRefresh",
									cellSizeFunc = "onCellSize",
									cellFillFunc = "onCellCreate",
									pos = {
										x = 0,
										y = 0
									},
									size = {
										width = 530,
										height = 350
									}
								},
								children = {
									{
										name = "TaskTemNode",
										cType = "TemplateNode",
										custom = {
											{
												value = "untitled60-text",
												name = "strTaskIntro",
												type = "string"
											}
										},
										params = {
											pos = {
												x = 0,
												y = -110
											},
											size = {
												width = 530,
												height = 110
											}
										},
										children = {
											{
												name = "untitled55",
												cType = "Scale9Sprite",
												params = {
													image = "c_95.png",
													pos = {
														x = 265,
														y = 55
													},
													size = {
														width = 530,
														height = 110
													}
												},
												children = {}
											},
											{
												name = "untitled56",
												cType = "ListView",
												params = {
													childName = "rewardListView",
													direction = false,
													swallowTouch = false,
													pos = {
														x = 10,
														y = 6
													},
													size = {
														width = 400,
														height = 70
													}
												},
												children = {
													{
														name = "CardLayout",
														cType = "Layout",
														custom = {
															{
																value = "untitled58-initParams",
																name = "cardData",
																type = "string"
															}
														},
														params = {
															pos = {
																z = 0,
																x = 9.51,
																y = 1.5
															},
															size = {
																width = 80,
																height = 70
															}
														},
														children = {
															{
																name = "untitled58",
																cType = "CardNode",
																params = {
																	scale = 0.8,
																	allowClick = true,
																	initParams = {},
																	pos = {
																		x = 40,
																		y = 35
																	}
																},
																children = {}
															}
														}
													},
													{
														name = "taskPointItem",
														cType = "Layout",
														custom = {
															{
																value = "untitled103-text",
																name = "num",
																type = "string"
															}
														},
														params = {
															size = {
																width = 80,
																height = 70
															}
														},
														children = {
															{
																name = "untitled101",
																cType = "Sprite",
																params = {
																	scale = 0.8,
																	image = "c_13.png",
																	pos = {
																		x = 40,
																		y = 35
																	}
																},
																children = {
																	{
																		name = "untitled102",
																		cType = "Sprite",
																		params = {
																			scale = 0.9,
																			image = "xshd_59.png",
																			pos = {
																				x = 39.22,
																				y = 40.87
																			}
																		},
																		children = {}
																	},
																	{
																		name = "untitled103",
																		cType = "Label",
																		params = {
																			fontSize = 16,
																			text = "888",
																			childName = "pointNum",
																			anchor = {
																				x = 1,
																				y = 0.5
																			},
																			color = {
																				g = 255,
																				r = 255,
																				b = 255
																			},
																			outlineColor = {
																				g = 37,
																				r = 37,
																				b = 37
																			},
																			pos = {
																				x = 73,
																				y = 14
																			}
																		},
																		children = {}
																	}
																}
															}
														}
													}
												}
											},
											{
												name = "untitled59",
												cType = "Button",
												params = {
													image = "c_32.png",
													childName = "getBtn",
													pos = {
														x = 465,
														y = 40
													},
													titleText = TR("领 取")
												},
												children = {}
											},
											{
												name = "untitled60",
												cType = "Label",
												params = {
													childName = "taskLabel",
													text = "Label",
													anchor = {
														x = 0,
														y = 0.5
													},
													pos = {
														x = 17,
														y = 94
													}
												},
												children = {}
											},
											{
												name = "untitled61",
												cType = "Label",
												params = {
													text = "Label",
													childName = "progLabel",
													hide = true,
													anchor = {
														x = 1,
														y = 0.5
													},
													pos = {
														x = 520,
														y = 94
													}
												},
												children = {}
											}
										}
									},
									{
										name = "ExchangeTemNode",
										cType = "TemplateNode",
										custom = {
											{
												value = "untitled82-text",
												name = "strDiscount",
												type = "string"
											},
											{
												value = "untitled80-text",
												name = "strVipNeed",
												type = "string"
											}
										},
										params = {
											pos = {
												x = 0,
												y = -330
											},
											size = {
												width = 629,
												height = 110
											}
										},
										children = {
											{
												name = "untitled75",
												cType = "Scale9Sprite",
												params = {
													image = "c_95.png",
													pos = {
														x = 265,
														y = 55
													},
													size = {
														width = 530,
														height = 110
													}
												},
												children = {}
											},
											{
												name = "untitled76",
												cType = "ListView",
												params = {
													childName = "rewardListView1",
													direction = false,
													swallowTouch = false,
													pos = {
														x = 13,
														y = 10
													},
													size = {
														width = 160,
														height = 70
													}
												},
												children = {
													{
														name = "cardItem",
														cType = "Layout",
														custom = {
															{
																value = "untitled87-initParams",
																name = "cardData",
																type = "string"
															}
														},
														params = {
															pos = {
																z = 0,
																x = 9.51,
																y = 1.5
															},
															size = {
																width = 80,
																height = 70
															}
														},
														children = {
															{
																name = "untitled87",
																cType = "CardNode",
																params = {
																	scale = 0.8,
																	allowClick = true,
																	initParams = {},
																	pos = {
																		x = 40,
																		y = 35
																	}
																},
																children = {}
															}
														}
													}
												}
											},
											{
												name = "untitled79",
												cType = "Sprite",
												params = {
													image = "c_23.png",
													pos = {
														x = 200,
														y = 45
													}
												},
												children = {}
											},
											{
												name = "untitled78",
												cType = "ListView",
												params = {
													childName = "rewardListView2",
													direction = false,
													swallowTouch = false,
													pos = {
														x = 230,
														y = 10
													},
													size = {
														width = 160,
														height = 70
													}
												},
												children = {
													{
														name = "exchangePointItem",
														cType = "Layout",
														custom = {
															{
																value = "untitled111-text",
																name = "num",
																type = "string"
															}
														},
														params = {
															size = {
																width = 80,
																height = 70
															}
														},
														children = {
															{
																name = "untitled109",
																cType = "Sprite",
																params = {
																	scale = 0.8,
																	image = "c_13.png",
																	pos = {
																		x = 40,
																		y = 35
																	}
																},
																children = {
																	{
																		name = "untitled110",
																		cType = "Sprite",
																		params = {
																			scale = 0.9,
																			image = "xshd_59.png",
																			pos = {
																				x = 39.22,
																				y = 40.87
																			}
																		},
																		children = {}
																	},
																	{
																		name = "untitled111",
																		cType = "Label",
																		params = {
																			fontSize = 16,
																			text = "888",
																			childName = "pointNum",
																			anchor = {
																				x = 1,
																				y = 0.5
																			},
																			color = {
																				g = 255,
																				r = 255,
																				b = 255
																			},
																			outlineColor = {
																				g = 37,
																				r = 37,
																				b = 37
																			},
																			pos = {
																				x = 73,
																				y = 14
																			}
																		},
																		children = {}
																	}
																}
															}
														}
													}
												}
											},
											{
												name = "untitled77",
												cType = "Button",
												params = {
													image = "c_32.png",
													childName = "exchangeBtn",
													pos = {
														x = 465,
														y = 35
													},
													titleText = TR("兑 换")
												},
												children = {}
											},
											{
												name = "untitled80",
												cType = "Label",
												params = {
													childName = "needVipLabel",
													anchor = {
														x = 0,
														y = 0.5
													},
													color = {
														g = 255,
														r = 255,
														b = 255
													},
													pos = {
														x = 6,
														y = 94
													},
													text = TR("兑换需达到：会员0")
												},
												children = {}
											},
											{
												name = "untitled81",
												cType = "Label",
												params = {
													fontSize = 18,
													childName = "remainLabel",
													color = {
														g = 37,
														r = 37,
														b = 37
													},
													pos = {
														x = 465,
														y = 68
													},
													text = TR("剩余次数：0")
												},
												children = {}
											},
											{
												name = "untitled82",
												cType = "BadgeText",
												params = {
													fontRotation = -45,
													image = "c_88.png",
													childName = "discountBTLabel",
													text = "",
													anchor = {
														x = 1,
														y = 1
													},
													fontColor = {
														g = 199,
														r = 223,
														b = 42
													},
													fontPos = {
														x = 18,
														y = 35
													},
													pos = {
														x = 60,
														y = 82
													}
												},
												children = {}
											}
										}
									},
									{
										name = "LoginTemNode",
										cType = "TemplateNode",
										custom = {
											{
												value = "untitled40-image",
												name = "dayPic",
												type = "string"
											}
										},
										params = {
											pos = {
												x = 0,
												y = -220
											},
											size = {
												width = 530,
												height = 110
											}
										},
										children = {
											{
												name = "untitled39",
												cType = "Scale9Sprite",
												params = {
													image = "c_98.png",
													pos = {
														x = 265,
														y = 55
													},
													size = {
														width = 530,
														height = 110
													}
												},
												children = {}
											},
											{
												name = "untitled40",
												cType = "Sprite",
												params = {
													image = "xshd_17.png",
													pos = {
														x = 60,
														y = 55
													}
												},
												children = {}
											},
											{
												name = "untitled41",
												cType = "ListView",
												params = {
													childName = "rewardListView",
													direction = false,
													swallowTouch = false,
													pos = {
														x = 110,
														y = 10
													},
													size = {
														width = 290,
														height = 90
													}
												},
												children = {
													{
														name = "RewardLayout",
														cType = "Layout",
														custom = {
															{
																value = "untitled43-initParams",
																name = "cardData",
																type = "string"
															}
														},
														params = {
															size = {
																width = 100,
																height = 90
															}
														},
														children = {
															{
																name = "untitled43",
																cType = "CardNode",
																params = {
																	allowClick = true,
																	initParams = {},
																	pos = {
																		x = 50,
																		y = 45
																	}
																},
																children = {}
															}
														}
													},
													{
														name = "loginPointItem",
														cType = "Layout",
														custom = {
															{
																value = "untitled107-text",
																name = "num",
																type = "string"
															}
														},
														params = {
															size = {
																width = 100,
																height = 90
															}
														},
														children = {
															{
																name = "untitled105",
																cType = "Sprite",
																params = {
																	image = "c_13.png",
																	pos = {
																		x = 50,
																		y = 45
																	}
																},
																children = {
																	{
																		name = "untitled106",
																		cType = "Sprite",
																		params = {
																			image = "xshd_59.png",
																			pos = {
																				x = 39.22,
																				y = 40.87
																			}
																		},
																		children = {}
																	},
																	{
																		name = "untitled107",
																		cType = "Label",
																		params = {
																			fontSize = 16,
																			text = "888",
																			childName = "pointNum",
																			anchor = {
																				x = 1,
																				y = 0.5
																			},
																			color = {
																				g = 255,
																				r = 255,
																				b = 255
																			},
																			outlineColor = {
																				g = 37,
																				r = 37,
																				b = 37
																			},
																			pos = {
																				x = 73,
																				y = 14
																			}
																		},
																		children = {}
																	}
																}
															}
														}
													}
												}
											},
											{
												name = "untitled44",
												cType = "Button",
												params = {
													image = "c_32.png",
													childName = "getBtn",
													pos = {
														x = 465,
														y = 55
													},
													titleText = TR("领 取")
												},
												children = {}
											}
										}
									}
								}
							}
						}
					},
					{
						name = "mProgressBar",
						cType = "ProgressBar",
						params = {
							normalImage = "kfkh_9.png",
							bgImage = "kfkh_8.png",
							currValue = 0,
							pos = {
								x = 410,
								y = 490
							}
						},
						children = {}
					},
					{
						name = "untitled64",
						cType = "Sprite",
						params = {
							image = "kfkh_7.png",
							pos = {
								x = 110,
								y = 490
							}
						},
						children = {
							{
								name = "curScoreLab",
								cType = "Label",
								params = {
									text = "100",
									pos = {
										x = 41.5,
										y = 42
									}
								},
								children = {}
							},
							{
								name = "untitled68",
								cType = "Label",
								params = {
									pos = {
										x = 41.5,
										y = 15
									},
									text = TR("当前积分")
								},
								children = {}
							}
						}
					},
					{
						name = "mProgRewardParent",
						cType = "Node",
						params = {
							pos = {
								x = 115,
								y = 490
							}
						},
						children = {
							{
								name = "RewardTemNode",
								cType = "TemplateNode",
								params = {
									pos = {
										x = 100,
										y = 10
									}
								},
								children = {
									{
										name = "untitled83",
										cType = "Button",
										params = {
											childName = "rewardBox",
											image = "jlmz_1.png",
											scale = 0.7,
											clickAction = "onGetProgReward",
											pos = {
												x = 0,
												y = 10
											}
										},
										children = {}
									},
									{
										name = "untitled27",
										cType = "CardNode",
										params = {
											scale = 0.7,
											clickAction = "onGetProgReward",
											childName = "card",
											allowClick = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									},
									{
										name = "untitled28",
										cType = "Sprite",
										params = {
											childName = "receivedSprite",
											scale = 0.6,
											hide = true,
											image = "c_55.png",
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									},
									{
										name = "untitled29",
										cType = "Label",
										params = {
											fontSize = 20,
											childName = "progLabel",
											text = "10",
											pos = {
												x = 0,
												y = -40
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			},
			{
				name = "untitled72",
				cType = "Label",
				params = {
					pos = {
						x = 295,
						y = -300
					},
					text = TR("活动倒计时：")
				},
				children = {}
			},
			{
				name = "mTimeLabel",
				cType = "Label",
				params = {
					text = "Label",
					anchor = {
						x = 0,
						y = 0.5
					},
					color = {
						g = 199,
						r = 223,
						b = 42
					},
					pos = {
						x = 360,
						y = -300
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled10",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled73",
				cType = "Button",
				params = {
					image = "c_3.png",
					clickAction = "onRuleBtn",
					pos = {
						x = 280.91,
						y = -26.67
					}
				},
				children = {}
			},
			{
				name = "untitled11",
				cType = "Button",
				params = {
					clickAction = "onCloseAction",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled12",
						cType = "Sprite",
						params = {
							image = "kfkh_12.png",
							pos = {
								x = 47,
								y = 4
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled13",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mActivityId = ActivityObj:getEntityId(ModuleSub.eCharacter)
	slot0.mSelectDay = slot1.selectDay
	slot0.mTaskTag = slot1.taskTag

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	slot0.requestGetInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.refreshUI = function (slot0)
	slot0.createTimeUpdate(slot0)
	slot0.refreshProgress(slot0)
	slot0.heroSp:setVisible(true)
	slot0.heroSp:setTexture(HeroModel.items[12013202].drawingPicA .. ".png")

	return 
end
slot0.createTimeUpdate = function (slot0)
	if slot0.mTimeLabel.timeUpdate then
		slot0.mTimeLabel:stopAction(slot0.mTimeLabel.timeUpdate)

		slot0.mTimeLabel.timeUpdate = nil
	end

	slot0.mTimeLabel.timeUpdate = Utility.schedule(slot0.mTimeLabel, function ()
		if 0 < slot0.mTotalInfo.EndTime - Player:getCurrentTime() then
			slot0.mTimeLabel:setString(MqTime.completeFormat(slot0))
		else
			slot0.mTimeLabel:setString(TR("活动已结束"))
			slot0.mTimeLabel:stopAction(slot0.mTimeLabel.timeUpdate)

			slot0.mTimeLabel.timeUpdate = nil
		end

		return 
	end, 1)

	return 
end
slot0.refreshProgress = function (slot0)
	slot0.curScoreLab:setString(TR("%s", slot0.mTotalInfo.TotalPoint))
	slot0.mProgRewardParent:removeAllChildren()

	slot1 = string.split(slot0.mTotalInfo.GetBoxIdStr, ",")
	slot4 = slot0.mTotalInfo.BoxConfig[#slot0.mTotalInfo.BoxConfig].Condition
	slot5 = (slot0.mProgressBar:getContentSize().width - 60)/#slot0.mTotalInfo.BoxConfig

	for slot9, slot10 in ipairs(slot0.mTotalInfo.BoxConfig) do
		slot11 = slot0.createLayoutTemplateNode(slot0, "RewardTemNode")

		slot11.setPosition(slot11, slot9*slot5, 0)
		slot0.mProgRewardParent:addChild(slot11)

		slot11.card.index = slot9
		slot11.rewardBox.index = slot9

		slot11.rewardBox:setVisible(1 < #(Utility.analysisStrResList(slot10.Reward) or {}))
		slot11.card:setVisible(slot13 == 1)

		if slot10.Level and slot10.Level ~= 0 then
			slot11.card:setCardData({}, {
				Enums.CardShowAttr.eNum,
				Enums.CardShowAttr.eStar
			}, slot14)

			for slot18, slot19 in pairs(slot11.card:getAttrCtrl(Enums.CardShowAttr.eRightText)) do
				slot19.setVisible(slot19, false)
			end

			if slot11.card:getAttrCtrl(Enums.CardShowAttr.eDebris).sprite ~= nil then
				slot11.card:getAttrCtrl(Enums.CardShowAttr.eDebris).sprite:setVisible(false)
			end
		else
			slot11.card:setCardData(slot12[1], {
				Enums.CardShowAttr.eNum
			})
		end

		if table.indexof(slot1, tostring(slot10.Id)) then
			slot11.receivedSprite:setVisible(true)
			slot11.card:setGray()
			slot11.rewardBox:loadTextures("jlmz_2.png", "jlmz_2.png")
		else
			slot11.receivedSprite:setVisible(false)

			if slot10.Condition <= slot0.mTotalInfo.TotalPoint then
				ui.setWaveAnimation(slot11.card)
				ui.setWaveAnimation(slot11.rewardBox)
			end
		end

		slot11.progLabel:setString(string.format("%s", slot10.Condition))
	end

	slot6 = 0
	slot7 = 0

	if slot4 <= slot0.mTotalInfo.TotalPoint then
		slot6 = slot2
	else
		for slot11, slot12 in ipairs(slot0.mTotalInfo.BoxConfig) do
			if slot0.mTotalInfo.TotalPoint <= slot12.Condition then
				slot6 = slot12.Id - 1 + (slot0.mTotalInfo.TotalPoint - slot7)/(slot12.Condition - slot7)

				break
			end

			slot7 = slot12.Condition
		end
	end

	slot0.mProgressBar:setMaxValue(slot2)
	slot0.mProgressBar:setCurrValue(slot6)

	return 
end
slot0.createDayTab = function (slot0)
	slot0.dayTabListView:removeAllChildren()

	slot0.mDayItemList = {}

	for slot4 = 1, slot0.mTotalInfo.TotalDay, 1 do
		slot0.dayTabListView:pushBackCustomItem(slot5)
		slot0.createLayoutTemplateNode(slot0, "dayItem", {
			dayText = TR("第%s天", Utility.getChineseNum(slot4)),
			redDotKey = string.format("Day_%d", slot4)
		}).curSprite:setVisible(slot4 == slot0.mTotalInfo.Day)
		slot5.tabBtn:setClickAction(function ()
			if slot1.mTotalInfo.Day < slot0 then
				ui.showFlashView(TR("暂未开启！"))
			else
				slot1:selectOneDay(slot1.selectOneDay)
			end

			return 
		end)

		slot5.currDay = slot4

		table.insert(slot0.mDayItemList, slot5)
	end

	slot0.selectOneDay(slot0)

	return 
end
slot0.refreshDayTab = function (slot0)
	for slot4, slot5 in pairs(slot0.mDayItemList) do
		slot5.curSprite:setVisible(slot5.currDay == slot0.mSelectDay)
	end

	return 
end
slot0.selectOneDay = function (slot0, slot1)
	if slot1 ~= nil and slot1 == slot0.mSelectDay then
		return 
	end

	slot0.mSelectDay = slot1 or slot0.mSelectDay or slot0.mTotalInfo.Day

	ui.setListviewItemShow(slot0.dayTabListView, slot0.mSelectDay)
	slot0.createTaskTabview(slot0, slot0.mSelectDay)
	slot0.refreshDayTab(slot0)

	return 
end
slot0.createTaskTabview = function (slot0, slot1)
	if not tolua.isnull(slot0.mTaskTabView) then
		slot0.mTaskTabView:removeFromParent()

		slot0.mTaskTabView = nil
	end

	slot2 = {}
	slot3 = false

	for slot7, slot8 in ipairs(slot0.mTotalInfo.Task[slot1]) do
		if slot8.EnumId ~= 36 then
			slot9 = ""

			if slot8.Title then
				slot9 = slot8.Title
			elseif slot8.List[1].Title then
				slot9 = slot8.List[1].Title
			end

			table.insert(slot2, {
				tag = slot7,
				title = slot9
			})

			if slot0.mTaskTag ~= nil and slot7 == slot0.mTaskTag then
				slot3 = true
			end
		end
	end

	slot0.mTaskTag = (slot3 and slot0.mTaskTag) or slot2[#slot2].tag

	slot0.createUISubTree(slot0, "mTaskTabView", function (slot0, slot1)
		slot1.btnInfos = slot0
		slot1.selectTag = slot1.mTaskTag

		return 
	end)

	for slot7, slot8 in pairs(slot0.mTaskTabView:getTabBtns()) do
		slot9 = slot1 .. "_" .. slot0.mTotalInfo.Task[slot1][slot7].EnumId

		if slot0.mTotalInfo.Task[slot1][slot7].EnumId == 20 then
			slot9 = "Day_" .. slot0.mTotalInfo.Task[slot1][slot7].EnumId
		end

		if slot0.mTotalInfo.Task[slot1][slot7].EnumId == 21 then
			slot9 = string.format("Day_" .. slot1 .. "_%d", slot0.mTotalInfo.Task[slot1][slot7].EnumId)
		end

		slot8.addChild(slot8, UIWrap.newControl("RedDot", {
			moduleId = ModuleSub.eCharacterPoint,
			subKey = slot9
		}))
	end

	return 
end
slot0.refreshChargeData = function (slot0)
	slot1 = string.split(slot0.mTotalInfo.RewardChargeIdStr, ",")

	function slot2(slot0)
		slot1 = false

		for slot5, slot6 in pairs(slot0) do
			if tonumber(slot6) == slot0 then
				slot1 = true

				break
			end
		end

		return slot1
	end

	slot0.mChargeInfo = nil

	for slot6, slot7 in pairs(slot0.mTotalInfo.Task[slot0.mSelectDay]) do
		if slot7.ChargeType ~= nil and slot7.ChargeType == 1 and slot7.List[slot0.mSelectDay] then
			slot0.mChargeInfo = slot7.List[slot0.mSelectDay] or {}
			slot0.mChargeInfo.ChargeType = 1
			slot0.mChargeInfo.showStr = slot7.List[slot0.mSelectDay] or {}.Description
			slot0.mChargeInfo.canGetReward = slot7.List[slot0.mSelectDay] or {}.TotalCharge <= slot0.mTotalInfo.ChargeNum
			slot0.mChargeInfo.receivedReward = slot2(slot7.List[slot0.mSelectDay] or {}.Id)
		end
	end

	return 
end
slot0.refreshTaskList = function (slot0)
	slot0.refreshChargeData(slot0)

	slot0.mTaskData = slot0.sortTaskData(slot0, slot0.mTotalInfo.Task[slot0.mSelectDay][slot0.mTaskTag])

	slot0.mTableView:reloadData()
	slot0.mTableView:jumpToTop()

	return 
end
slot0.sortTaskData = function (slot0, slot1)
	slot2 = {}

	if slot1.LoginType ~= nil and slot1.LoginType == 1 then
		slot3 = string.split(slot1.LoginDaysStr, ",")
		slot4 = string.split(slot1.RewardDaysStr, ",")

		for slot8, slot9 in ipairs(slot2) do
			slot9.alreadyReward = table.indexof(slot4, tostring(slot9.Day)) ~= false
			slot9.canGetReward = table.indexof(slot3, tostring(slot9.Day)) ~= false
		end

		table.sort(slot2, function (slot0, slot1)
			if slot0.alreadyReward ~= slot1.alreadyReward then
				return slot0.alreadyReward == false
			end

			if slot0.canGetReward ~= slot1.canGetReward then
				return slot0.canGetReward == true
			end

			return slot0.Day < slot1.Day
		end)
	elseif slot1.ExchangeType ~= nil and slot1.ExchangeType == 1 then
		slot3 = PlayerAttrObj:getPlayerAttrByName("Vip")

		table.sort(clone(slot1.List), function (slot0, slot1)
			if slot0.ExchangeCount == 0 and 0 < slot1.ExchangeCount then
				return false
			end

			if 0 < slot0.ExchangeCount and slot1.ExchangeCount == 0 then
				return true
			end

			return slot0.Id < slot1.Id
		end)
	elseif slot1.ChallengeType ~= nil and slot1.ChallengeType == 1 then
		for slot6, slot7 in ipairs(slot2) do
			slot7.showStr = TR("通关第%s关", slot7.LevelId)
			slot7.canGetReward = slot1.CurrentChallengeNodeId == slot7.LevelId and slot1.IsPass == 1
			slot7.receivedReward = slot7.LevelId < slot1.CurrentChallengeNodeId or slot1.CurrentChallengeNodeId == 0
		end

		table.sort(slot2, function (slot0, slot1)
			if slot0.receivedReward ~= slot1.receivedReward then
				return slot0.receivedReward == false
			end

			if slot0.canGetReward ~= slot1.canGetReward then
				return slot0.canGetReward == true
			end

			return slot0.LevelId < slot1.LevelId
		end)
	else
		for slot6, slot7 in ipairs(slot2) do
			slot7.showStr = string.format(slot7.Description, slot7.Condition)
			slot7.canGetReward = slot7.MaxValue <= slot7.CurrentValue

			if slot1.IsRankType ~= nil and slot1.IsRankType == 1 then
				slot7.canGetReward = slot7.CurrentValue <= slot7.MaxValue
			end

			slot7.receivedReward = slot7.IsGetReward
		end

		table.sort(slot2, function (slot0, slot1)
			if slot0.receivedReward ~= slot1.receivedReward then
				return slot0.receivedReward == false
			end

			if slot0.canGetReward ~= slot1.canGetReward then
				return slot0.canGetReward == true
			end

			return slot0.TaskId < slot1.TaskId
		end)
	end

	if slot1.ExchangeType ~= nil and slot1.ExchangeType == 1 and slot0.mChargeInfo then
		table.insert(slot2, 1, slot0.mChargeInfo)
	end

	return slot2
end
slot0.dealRewardResponseData = function (slot0, slot1)
	slot0.mTotalInfo = slot1.CharacterInfo

	slot0.refreshProgress(slot0)
	slot0.refreshDayTab(slot0)
	slot0.refreshTaskList(slot0)

	if slot1.BaseGetGameResourceList ~= nil then
		ui.showFlashReward({
			BaseGetGameResourceList = slot1.BaseGetGameResourceList
		})
	end

	PlayerAttrObj:checkLvUp()

	return 
end
slot0.createTaskItem = function (slot0, slot1, slot2)
	slot1.removeAllChildren(slot1)

	slot3 = slot0.mTaskData[slot2 + 1]
	slot5 = nil

	if slot0.mTotalInfo.Task[slot0.mSelectDay][slot0.mTaskTag].LoginType ~= nil and slot4.LoginType == 1 then
		slot5 = slot0.createLayoutTemplateNode(slot0, "LoginTemNode", {
			dayPic = ({
				"xshd_17.png",
				"xshd_18.png",
				"xshd_19.png",
				"xshd_20.png",
				"xshd_21.png",
				"xshd_22.png",
				"xshd_23.png"
			})[slot3.Day]
		})

		for slot10, slot11 in ipairs(Utility.analysisStrResList(slot3.Reward)) do
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "RewardLayout", {
				cardData = {
					cardInfo = slot11,
					showAttrs = {
						Enums.CardShowAttr.eNum,
						Enums.CardShowAttr.eStar
					}
				}
			}))
		end

		if slot3.TaskPoint and 0 < slot3.TaskPoint then
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "loginPointItem", {
				num = slot3.TaskPoint
			}))
		end

		if slot3.alreadyReward == true then
			slot5.getBtn:setEnabled(false)
			slot5.getBtn:loadTextures("c_55.png", "c_55.png")
			slot5.getBtn:setTitleText("")
		else
			slot5.getBtn:setTitleText(TR("领 取"))
			slot5.getBtn:loadTextures("c_32.png", "c_32.png")
			slot5.getBtn:setEnabled(slot3.canGetReward)
			slot5.getBtn:setClickAction(function ()
				slot0:requestGetLoginReward(slot1.Day)

				return 
			end)
		end
	elseif slot4.ExchangeType ~= nil and slot4.ExchangeType == 1 then
		if slot3.ChargeType ~= nil and slot3.ChargeType == 1 then
			slot5 = slot0.createLayoutTemplateNode(slot0, "TaskTemNode", {
				strTaskIntro = slot3.showStr
			})

			for slot9, slot10 in ipairs(Utility.analysisStrResList(slot3.Reward)) do
				slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "CardLayout", {
					cardData = {
						cardInfo = slot10,
						showAttrs = {
							Enums.CardShowAttr.eNum,
							Enums.CardShowAttr.eStar
						}
					}
				}))
			end

			if slot3.TaskPoint and 0 < slot3.TaskPoint then
				slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "taskPointItem", {
					num = slot3.TaskPoint
				}))
			end

			slot6 = false

			for slot11, slot12 in pairs(slot7) do
				if tonumber(slot12) == slot3.Id then
					slot6 = true

					break
				end
			end

			if slot3.receivedReward == true then
				slot5.getBtn:setEnabled(false)
				slot5.getBtn:loadTextures("c_55.png", "c_55.png")
				slot5.getBtn:setTitleText("")
			else
				slot5.progLabel:setVisible(true)
				slot5.progLabel:setString(TR("%s/%s", slot0.mTotalInfo.ChargeNum, slot3.TotalCharge))

				if slot3.canGetReward then
					slot5.getBtn:loadTextures("c_32.png", "c_32.png")
					slot5.getBtn:setEnabled(true)
					slot5.getBtn:setTitleText(TR("领 取"))
					slot5.getBtn:setClickAction(function ()
						slot0:requestGetChargeReward(slot1.Id)

						return 
					end)
				else
					slot5.getBtn:loadTextures("c_32.png", "c_32.png")
					slot5.getBtn:setEnabled(true)
					slot5.getBtn:setTitleText(TR("充 值"))
					slot5.getBtn:setClickAction(function ()
						LayerManager.addLayer({
							name = "recharge.RechargeHomeLayer"
						})

						return 
					end)
				end
			end
		else
			slot7 = PlayerAttrObj:getPlayerAttrByName("Vip")

			slot0.createLayoutTemplateNode(slot0, "ExchangeTemNode", {
				strDiscount = TR("%s折", slot3.Discount/10),
				strVipNeed = TR("兑换需达到会员%s", slot3.VipLv)
			}).discountBTLabel:setScale(0.8)
			slot0.createLayoutTemplateNode(slot0, "ExchangeTemNode", {
				strDiscount = TR("%s折", slot3.Discount/10),
				strVipNeed = TR("兑换需达到会员%s", slot3.VipLv)
			}).discountBTLabel:setPositionX(48)
			slot0.createLayoutTemplateNode(slot0, "ExchangeTemNode", {
				strDiscount = TR("%s折", slot3.Discount/10),
				strVipNeed = TR("兑换需达到会员%s", slot3.VipLv)
			}).discountBTLabel:setVisible(0 < slot3.Discount/10 and slot3.Discount/10 < 10)

			for slot11, slot12 in ipairs(Utility.analysisStrResList(slot3.ConsumeResource)) do
				slot5.rewardListView1:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "cardItem", {
					cardData = {
						cardInfo = slot12,
						showAttrs = {
							Enums.CardShowAttr.eNum,
							Enums.CardShowAttr.eStar
						}
					}
				}))
			end

			for slot11, slot12 in ipairs(Utility.analysisStrResList(slot3.SellResource)) do
				slot5.rewardListView2:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "cardItem", {
					cardData = {
						cardInfo = slot12,
						showAttrs = {
							Enums.CardShowAttr.eNum,
							Enums.CardShowAttr.eStar
						}
					}
				}))
			end

			if slot3.TaskPoint and 0 < slot3.TaskPoint then
				slot5.rewardListView2:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "exchangePointItem", {
					num = slot3.TaskPoint
				}))
			end

			slot5.remainLabel:setString(TR("剩余次数:%s", slot3.ExchangeCount))
			slot5.exchangeBtn:setEnabled(0 < slot3.ExchangeCount)
			slot5.exchangeBtn:setClickAction(function ()
				if slot0.VipLv ~= nil and PlayerAttrObj:getPlayerAttrByName("Vip") < slot0.VipLv then
					ui.showFlashView(TR("需要会员%s才能兑换该商品", slot0.VipLv))

					return 
				end

				for slot3, slot4 in ipairs(Utility.analysisStrResList(slot0.ConsumeResource)) do
					if Resource.isEnough(slot4.resourceId, slot4.num) == false then
						return 
					end
				end

				slot1:requestExchange(slot0.Id)

				return 
			end)
		end
	elseif slot4.ChallengeType ~= nil and slot4.ChallengeType == 1 then
		slot5 = slot0.createLayoutTemplateNode(slot0, "TaskTemNode", {
			strTaskIntro = slot3.showStr
		})

		for slot9, slot10 in ipairs(Utility.analysisStrResList(slot3.Reward)) do
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "CardLayout", {
				cardData = {
					cardInfo = slot10,
					showAttrs = {
						Enums.CardShowAttr.eNum,
						Enums.CardShowAttr.eStar
					}
				}
			}))
		end

		if slot3.TaskPoint and 0 < slot3.TaskPoint then
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "taskPointItem", {
				num = slot3.TaskPoint
			}))
		end

		if slot3.receivedReward == true then
			slot5.getBtn:setEnabled(false)
			slot5.getBtn:loadTextures("c_55.png", "c_55.png")
			slot5.getBtn:setTitleText("")
		elseif data.CurrentChallengeNodeId < slot3.LevelId then
			slot5.getBtn:loadTextures("c_32.png", "c_32.png")
			slot5.getBtn:setEnabled(false)
			slot5.getBtn:setTitleText(TR("挑 战"))
		else
			slot5.getBtn:loadTextures("c_32.png", "c_32.png")
			slot5.getBtn:setEnabled(true)
			slot5.getBtn:setTitleText((data.IsPass == 1 and TR("领 取")) or TR("挑 战"))
			slot5.getBtn:setClickAction(function ()
				if data.IsPass == 1 then
					slot0:requestGetFightReward(slot1.LevelId)
				else
					ui.showCampReady({
						callModelSub = ModuleSub.eCharacter,
						callback = function (slot0)
							if Resource.isEnough(ResourceTypeSub.eVit, Utility.calcNeedVitOfFormation(slot0)) == false then
								return 
							end

							slot0:requestGetFightInfo(slot1.LevelId, table.concat(slot0, ","))

							return 
						end
					})
				end

				return 
			end)
		end
	else
		slot5 = slot0.createLayoutTemplateNode(slot0, "TaskTemNode", {
			strTaskIntro = slot3.showStr
		})

		for slot9, slot10 in ipairs(Utility.analysisStrResList(slot3.Reward)) do
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "CardLayout", {
				cardData = {
					cardInfo = slot10,
					showAttrs = {
						Enums.CardShowAttr.eNum,
						Enums.CardShowAttr.eStar
					}
				}
			}))
		end

		if slot3.TaskPoint and 0 < slot3.TaskPoint then
			slot5.rewardListView:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "taskPointItem", {
				num = slot3.TaskPoint
			}))
		end

		if slot3.receivedReward == true then
			slot5.getBtn:setEnabled(false)
			slot5.getBtn:loadTextures("c_55.png", "c_55.png")
			slot5.getBtn:setTitleText("")
		else
			slot5.getBtn:setTitleText(TR("领 取"))
			slot5.getBtn:loadTextures("c_32.png", "c_32.png")
			slot5.getBtn:setEnabled(slot3.canGetReward)
			slot5.getBtn:setClickAction(function ()
				slot0:requestGetTaskReward(slot1.TaskId)

				return 
			end)

			if not slot3.canGetReward and slot4.ModelId ~= 0 then
				slot5.getBtn:setTitleText(TR("前 往"))
				slot5.getBtn:loadTextures("c_32.png", "c_32.png")
				slot5.getBtn:setEnabled(true)
				slot5.getBtn:setClickAction(function ()
					if Utility.moduleIsOpen(slot0.ModelId, true) then
						LayerManager.showModuleLayer(slot0.ModelId)
					end

					return 
				end)
			end
		end

		slot5.progLabel:setVisible(true)

		if slot4.IsRankType ~= nil and slot4.IsRankType == 1 then
			slot5.progLabel:setString(TR("当前排名:%s", slot3.CurrentValue))
		else
			slot5.progLabel:setString(string.format("%s/%s", Utility.numberWithUnit(slot3.CurrentValue), Utility.numberWithUnit(slot3.MaxValue)))
		end
	end

	slot5.setPosition(slot5, 0, 0)
	slot1.addChild(slot1, slot5)

	return 
end
slot0.onCellSize = function (slot0)
	return 530, 110
end
slot0.onCellNum = function (slot0)
	return #slot0.mTaskData
end
slot0.onCellCreate = function (slot0, slot1, slot2)
	slot0.createTaskItem(slot0, slot1, slot2)

	return 
end
slot0.onCellRefresh = function (slot0, slot1, slot2)
	slot0.createTaskItem(slot0, slot1, slot2)

	return 
end
slot0.onCloseAction = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onGetProgReward = function (slot0, slot1)
	slot3 = Utility.analysisStrResList(slot0.mTotalInfo.BoxConfig[slot1.index].Reward) or {}
	slot4 = string.split(slot0.mTotalInfo.GetBoxIdStr, ",")

	if slot2.Condition <= slot0.mTotalInfo.TotalPoint and not table.indexof(slot4, tostring(slot2.Id)) then
		slot0.requestGetBoxReward(slot0, slot2.Id)
	elseif 1 < #slot3 then
		LayerManager.addLayer({
			cleanUp = false,
			name = "commonlayer.DlgRewardShowLayer",
			data = {
				title = TR("奖励预览"),
				rewardStr = slot2.Reward
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	else
		slot1.defaultCardClick()
	end

	return 
end
slot0.onTaskChange = function (slot0, slot1)
	slot0.mTaskTag = slot1

	slot0.refreshTaskList(slot0)

	if slot0.mTotalInfo.Task[slot0.mSelectDay][slot1].EnumId == 21 and RedDotObj:isValid(ModuleSub.eCharacterPoint, string.format("Day_%d_21", slot0.mSelectDay)) then
		RedDotObj:seeRedDot("CharacterPoint_21", slot0.mSelectDay)
	end

	return 
end
slot0.onRuleBtn = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1.完成每日任务即可获得积分，积分累计到一定时可以获得累计奖励。"),
			TR("2.每日登录游戏可以领取登录奖励。"),
			TR("3.连续购买芷若升红便可将周芷若升为传奇侠客。")
		}
	})

	return 
end
slot0.requestGetInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId
		},
		successCallback = function (slot0)
			slot0.mTotalInfo = slot0

			slot0:createDayTab()
			slot0:refreshUI()

			return 
		end
	})

	return 
end
slot0.requestGetBoxReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetBoxReward",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end
slot0.requestGetLoginReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetLoginReward",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end
slot0.requestGetTaskReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetTaskReward",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end
slot0.requestExchange = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "Exchange",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end
slot0.requestGetFightInfo = function (slot0, slot1, slot2)
	slot0.socketRequest(slot0, {
		methodName = "GetChallengeInfo",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1,
			slot2
		},
		successCallback = function (slot0)
			require("common.BattleEntry"):StartBattle({
				fightInfo = slot0.FightInfo,
				extraData = {
					chapterId = slot0.mActivityId,
					nodeId = require("common.BattleEntry").StartBattle
				}
			})

			return 
		end
	})

	return 
end
slot0.requestGetFightReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetChallengeReward",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end
slot0.requestGetChargeReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetChargeReward",
		moduleName = "CharacterInfo",
		methodData = {
			slot0.mActivityId,
			slot1
		},
		successCallback = function (slot0)
			slot0:dealRewardResponseData(slot0)

			return 
		end
	})

	return 
end

return slot0
