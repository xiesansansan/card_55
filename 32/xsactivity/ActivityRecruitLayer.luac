slot0 = class("ActivityRecruitLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = false
	})
end)
slot0.uiTree = {
	{
		name = "untitled2",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "mjg_16.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled72",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled73",
				cType = "Button",
				custom = {
					{
						value = 4,
						name = "tag",
						type = "integer"
					}
				},
				params = {
					clickAction = "onExitAction",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled74",
						cType = "Sprite",
						params = {
							image = "mjg_15.png",
							pos = {
								x = 28.58,
								y = 3.77
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled34",
				cType = "Scale9Sprite",
				params = {
					image = "mjg_14.png",
					pos = {
						x = 322.93,
						y = -98.94
					}
				},
				children = {
					{
						name = "untitled36",
						cType = "Label",
						params = {
							fontSize = 20,
							anchor = {
								x = 0,
								y = 0.5
							},
							outlineColor = {
								g = 42,
								r = 51,
								b = 24
							},
							pos = {
								x = 46.94,
								y = 50.85
							},
							text = TR("剩余时间：")
						},
						children = {}
					},
					{
						name = "remainTimeLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							emptyInit = true,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 231,
								r = 255,
								b = 72
							},
							outlineColor = {
								g = 42,
								r = 51,
								b = 24
							},
							pos = {
								x = 146.94,
								y = 50.85
							},
							text = TR("0天0小时")
						},
						children = {}
					},
					{
						name = "untitled37",
						cType = "Label",
						params = {
							fontSize = 20,
							anchor = {
								x = 0,
								y = 0.5
							},
							outlineColor = {
								g = 42,
								r = 51,
								b = 24
							},
							pos = {
								x = 46.49,
								y = 19.84
							},
							text = TR("剩余碎片数量：")
						},
						children = {}
					},
					{
						name = "remainDebrisLabel",
						cType = "Label",
						params = {
							fontSize = 20,
							emptyInit = true,
							text = "90/100",
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 231,
								r = 255,
								b = 72
							},
							outlineColor = {
								g = 42,
								r = 51,
								b = 24
							},
							pos = {
								x = 186.49,
								y = 19.84
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled76",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {
			{
				name = "untitled80",
				cType = "TopResourceNode",
				params = {
					anchor = {
						x = 1,
						y = 1
					},
					moduleIdList = {
						1111,
						1112,
						1115
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {}
			}
		}
	},
	{
		name = "leftNode",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 320
			}
		},
		children = {
			{
				name = "typeBgSprite",
				cType = "Scale9Sprite",
				params = {
					image = "c_pure.png",
					pos = {
						x = 112,
						y = 0
					},
					size = {
						width = 92.54,
						height = 500
					}
				},
				children = {
					{
						name = "untitled15",
						cType = "Button",
						custom = {
							{
								value = 1,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "mjg_5.png",
							clickAction = "onHeroTypeAction",
							pos = {
								x = 46.27,
								y = 440
							}
						},
						children = {}
					},
					{
						name = "untitled16",
						cType = "Button",
						custom = {
							{
								value = 2,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "mjg_8.png",
							clickAction = "onHeroTypeAction",
							pos = {
								x = 46.27,
								y = 320
							}
						},
						children = {}
					},
					{
						name = "untitled17",
						cType = "Button",
						custom = {
							{
								value = 3,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "mjg_7.png",
							clickAction = "onHeroTypeAction",
							pos = {
								x = 46.27,
								y = 200
							}
						},
						children = {}
					},
					{
						name = "untitled81",
						cType = "Button",
						custom = {
							{
								value = 4,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "mjg_6.png",
							clickAction = "onHeroTypeAction",
							pos = {
								x = 46.27,
								y = 80
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "centerNode",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {
			{
				name = "HeroTemplate",
				cType = "TemplateNode",
				custom = {
					{
						value = "untitled102-tag",
						name = "modelId",
						type = "string"
					},
					{
						value = "untitled92-text",
						name = "nameStr",
						type = "string"
					},
					{
						value = "untitled93-image",
						name = "qualityImg",
						type = "string"
					},
					{
						value = "untitled101-dataFile",
						name = "lihuiEffect",
						type = "string"
					}
				},
				params = {
					pos = {
						x = 0,
						y = -175
					}
				},
				children = {
					{
						name = "untitled101",
						cType = "Effect",
						params = {
							scale = 0.4,
							dataFile = "effect_lihui_huazheng",
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "untitled32",
						cType = "Sprite",
						params = {
							image = "zd_black.png",
							pos = {
								x = 0,
								y = 0
							}
						},
						children = {}
					},
					{
						name = "untitled91",
						cType = "Sprite",
						params = {
							image = "mjg_13.png",
							pos = {
								x = 123.72,
								y = 309.57
							}
						},
						children = {
							{
								name = "untitled92",
								cType = "Label",
								params = {
									fontSize = 26,
									pos = {
										x = 25.27,
										y = 84.77
									},
									size = {
										width = 30,
										height = 100
									},
									text = TR("黄蓉")
								},
								children = {}
							}
						}
					},
					{
						name = "untitled93",
						cType = "Sprite",
						params = {
							image = "xkxx_16.png",
							pos = {
								x = 151.54,
								y = 245.43
							}
						},
						children = {}
					},
					{
						name = "untitled102",
						cType = "Button",
						custom = {
							{
								value = 1,
								name = "tag",
								type = "integer"
							}
						},
						params = {
							image = "c_pure.png",
							clickAction = "onHeroAction",
							pos = {
								x = 4.22,
								y = 176.06
							},
							size = {
								width = 179.57,
								height = 373.63
							}
						},
						children = {}
					}
				}
			},
			{
				name = "composeBar",
				cType = "Sprite",
				params = {
					zOrder = 1,
					image = "jyt_1.png",
					pos = {
						x = 16.64,
						y = -164.96
					}
				},
				children = {
					{
						name = "untitled104",
						cType = "CardNode",
						params = {
							scale = 0.4,
							childName = "header",
							allowClick = false,
							pos = {
								x = -2.23,
								y = 9.05
							}
						},
						children = {}
					},
					{
						name = "untitled105",
						cType = "ProgressBar",
						params = {
							maxValue = 1,
							currValue = 0,
							normalImage = "jyt_2.png",
							childName = "debrisProg",
							pos = {
								x = 126.38,
								y = 7.1
							}
						},
						children = {}
					},
					{
						name = "untitled106",
						cType = "Label",
						params = {
							childName = "debrisStatus",
							anchor = {
								x = 0,
								y = 0
							},
							color = {
								g = 248,
								r = 255,
								b = 234
							},
							outlineColor = {
								g = 42,
								r = 51,
								b = 24
							},
							pos = {
								x = -80.66,
								y = -3.71
							},
							text = TR("合成：")
						},
						children = {}
					},
					{
						name = "untitled107",
						cType = "Label",
						params = {
							fontSize = 18,
							childName = "progLabel",
							text = "0/1",
							pos = {
								x = 116.08,
								y = -11.04
							}
						},
						children = {}
					}
				}
			},
			{
				name = "heroSpecialSprite",
				cType = "Sprite",
				params = {
					image = "mjg_1.png",
					pos = {
						x = 436.27,
						y = -4.11
					}
				},
				children = {}
			},
			{
				name = "untitled100",
				cType = "Button",
				params = {
					image = "tb_gn_121.png",
					clickAction = "onSkillShow",
					zOrder = 1,
					pos = {
						x = -171.94,
						y = -72.97
					}
				},
				children = {}
			}
		}
	},
	{
		name = "buyParent",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 0
			}
		},
		children = {
			{
				name = "untitled43",
				cType = "Sprite",
				custom = {
					{
						value = 1,
						name = "dbTag",
						type = "integer"
					}
				},
				params = {
					image = "c_pure.png",
					pos = {
						x = -177.73,
						y = 117.44
					}
				},
				children = {
					{
						name = "untitled44",
						cType = "Sprite",
						params = {
							image = "db_1111.png",
							childName = "dbSprite",
							pos = {
								x = -17.49,
								y = 6.6
							}
						},
						children = {}
					},
					{
						name = "untitled55",
						cType = "Label",
						params = {
							childName = "dbLabel",
							text = "0",
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 8,
								y = 5
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled45",
				cType = "Sprite",
				custom = {
					{
						value = 2,
						name = "dbTag",
						type = "integer"
					}
				},
				params = {
					image = "c_pure.png",
					pos = {
						x = 22.27,
						y = 117.44
					}
				},
				children = {
					{
						name = "untitled96",
						cType = "Sprite",
						params = {
							image = "db_1111.png",
							childName = "dbSprite",
							pos = {
								x = -17.49,
								y = 6.6
							}
						},
						children = {}
					},
					{
						name = "untitled97",
						cType = "Label",
						params = {
							childName = "dbLabel",
							text = "0",
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 8,
								y = 5
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled47",
				cType = "Sprite",
				custom = {
					{
						value = 3,
						name = "dbTag",
						type = "integer"
					}
				},
				params = {
					image = "c_pure.png",
					pos = {
						x = 222.27,
						y = 117.44
					}
				},
				children = {
					{
						name = "untitled98",
						cType = "Sprite",
						params = {
							image = "db_1111.png",
							childName = "dbSprite",
							pos = {
								x = -17.49,
								y = 6.6
							}
						},
						children = {}
					},
					{
						name = "untitled99",
						cType = "Label",
						params = {
							childName = "dbLabel",
							text = "0",
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 8,
								y = 5
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled52",
				cType = "Button",
				custom = {
					{
						value = 1,
						name = "btnTag",
						type = "integer"
					}
				},
				params = {
					clickAction = "onBuyAction",
					image = "c_27.png",
					pos = {
						x = -177.73,
						y = 72.44
					},
					size = {
						width = 140,
						height = 50
					},
					titleText = TR("购买1次")
				},
				children = {}
			},
			{
				name = "untitled53",
				cType = "Button",
				custom = {
					{
						value = 2,
						name = "btnTag",
						type = "integer"
					}
				},
				params = {
					clickAction = "onBuyAction",
					image = "c_27.png",
					pos = {
						x = 22.27,
						y = 72.44
					},
					size = {
						width = 140,
						height = 50
					},
					titleText = TR("购买10次")
				},
				children = {}
			},
			{
				name = "untitled54",
				cType = "Button",
				custom = {
					{
						value = 3,
						name = "btnTag",
						type = "integer"
					}
				},
				params = {
					clickAction = "onBuyAction",
					image = "c_32.png",
					pos = {
						x = 222.27,
						y = 72.44
					},
					size = {
						width = 140,
						height = 50
					},
					titleText = TR("购买10次")
				},
				children = {}
			},
			{
				name = "untitled62",
				cType = "Label",
				custom = {
					{
						value = 1,
						name = "countTag",
						type = "integer"
					}
				},
				params = {
					fontSize = 20,
					emptyInit = true,
					pos = {
						x = -177.73,
						y = 27.44
					},
					text = TR("剩余次数1")
				},
				children = {}
			},
			{
				name = "untitled63",
				cType = "Label",
				custom = {
					{
						value = 2,
						name = "countTag",
						type = "integer"
					}
				},
				params = {
					fontSize = 20,
					emptyInit = true,
					pos = {
						x = 22.27,
						y = 27.44
					},
					text = TR("剩余次数1")
				},
				children = {}
			},
			{
				name = "untitled64",
				cType = "Label",
				custom = {
					{
						value = 3,
						name = "countTag",
						type = "integer"
					}
				},
				params = {
					fontSize = 20,
					emptyInit = true,
					pos = {
						x = 222.27,
						y = 27.44
					},
					text = TR("剩余次数1")
				},
				children = {}
			}
		}
	}
}
slot1 = {
	eDefence = 2,
	eAttack = 1,
	eTreat = 4,
	eAssist = 3
}
slot0.ctor = function (slot0, slot1)
	slot0.totalHeroData = clone(FamouspavilionRecruitConfig.items)
	slot0.mHeroBuyInfo = {}

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)

	slot0.heroNodeList = {}

	slot0.requestInfo(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	return 
end
slot0.onHeroTypeAction = function (slot0, slot1)
	if slot0.selectHeroType == slot1.tag then
		return 
	end

	slot0.selectHeroType = slot1.tag
	slot2 = {
		"mjg_5.png",
		"mjg_8.png",
		"mjg_7.png",
		"mjg_6.png"
	}
	slot3 = {
		"mjg_9.png",
		"mjg_12.png",
		"mjg_11.png",
		"mjg_10.png"
	}

	for slot8, slot9 in pairs(slot4) do
		slot10 = slot2[slot9.tag]

		if slot9.tag == slot1.tag then
			slot10 = slot3[slot9.tag]
		end

		slot9.loadTextures(slot9, slot10, slot10)
	end

	slot0.refreshEllipseUI(slot0)
	slot0.refreshHeroSpecial(slot0)

	return 
end
slot0.onHeroAction = function (slot0, slot1)
	if slot1.tag == slot0.mHeroModelId then
		LayerManager.addLayer({
			cleanUp = false,
			name = "hero.HeroDetialViewLayer",
			data = {
				heroModelId = slot0.mHeroModelId
			},
			zOrder = Enums.ZOrderType.ePopLayer
		})
	end

	return 
end
slot0.cbItemContentCallback = function (slot0, slot1, slot2)
	slot11.raceImg, slot11.professImg = Utility.getCampProfessionRoadImage(slot0.totalHeroData[slot0.selectHeroType] or {})
	slot8 = slot0.createLayoutTemplateNode(slot0, "HeroTemplate", {
		modelId = table.keys(slot0.totalHeroData[slot0.selectHeroType] or {})[slot2],
		nameImage = Resource.getModelInfo(table.keys).namePic .. ".png",
		modelTag = table.keys(slot0.totalHeroData[slot0.selectHeroType] or {})[slot2],
		raceImg = slot6,
		professImg = slot7,
		starNum = Resource.getModelInfo(table.keys).initStar,
		hadPic = (HeroObj:isHaveModel(table.keys(slot0.totalHeroData[slot0.selectHeroType] or {})[slot2]) and "zm_1.png") or "zm_6.png"
	})
	slot13, slot10 = slot8.heroFigure:getPosition()

	slot8.starNode:setPosition(slot0, slot10 + slot8.heroFigure:getBoundingBox().height)
	slot8.setPosition(slot8, 365, 44)
	slot1.addChild(slot1, slot8)

	slot0.heroNodeList[slot2] = slot8

	return 
end
slot0.refreshBuy = function (slot0)
	slot0.remainDebrisLabel:setString(string.format("%d/%d", FamouspavilionRecruitConfig.items[slot0.selectHeroType][slot1].dailyMaxBuyNum - (slot0.mHeroBuyInfo.HeroBuyNumDic[tostring(slot0.mHeroModelId)] or 0), slot3))

	for slot8, slot9 in pairs(slot4) do
		if FamouspavilionRecruitBuyRelation.items[slot1] and slot10[slot9.dbTag] then
			slot9.dbSprite:setTexture(Resource.getDaibiImg(Utility.analysisStrResList(slot11.buyCost)[1].resourceId))
			slot9.dbLabel:setString(Utility.analysisStrResList(slot11.buyCost)[1].num)
			slot9.setVisible(slot9, true)
		else
			slot9.setVisible(slot9, false)
		end
	end

	for slot9, slot10 in pairs(slot5) do
		slot12 = FamouspavilionRecruitBuyRelation.items[slot1] and slot11[slot10.btnTag]

		if slot10.discount then
			slot10.discount:removeFromParent()

			slot10.discount = nil
		end

		if slot12 then
			slot10.setEnabled(slot10, true)

			if Utility.analysisStrResList(slot12.buyCost)[1].num < Utility.analysisStrResList(slot12.oldPrice)[1].num then
				slot10.discount = UIWrap.newControl("BadgeText", {
					pos = cc.p(70, 25),
					text = TR("%.1f折", slot13/slot14*10),
					anchor = cc.p(1, 1)
				})

				slot10.discount:setScale(0.8)
				slot10.addChild(slot10, slot10.discount)
			end
		else
			slot10.setEnabled(slot10, false)
		end
	end

	for slot10, slot11 in pairs(slot6) do
		if FamouspavilionRecruitBuyRelation.items[slot1] and slot12[slot11.countTag] then
			if slot13.dailyMaxBuyNum < 0 then
				slot11.setString(slot11, "")
			else
				slot11.setString(slot11, TR("剩余购买次数：%d", slot13.dailyMaxBuyNum - (slot0.mHeroBuyInfo.HeroModelIdDic[tostring(slot1)] or {}[tostring(slot11.countTag)] or 0)))

				slot0.remainCount = slot13.dailyMaxBuyNum - (slot0.mHeroBuyInfo.HeroModelIdDic[tostring(slot1)] or {}[tostring(slot11.countTag)] or 0)
			end
		else
			slot11.setString(slot11, "")
		end
	end

	slot0.remainDebris = slot3 - slot2

	return 
end
slot0.cbAlignCallback = function (slot0, slot1)
	for slot5, slot6 in pairs(slot0.heroNodeList) do
		slot6.nameSprite:setVisible(slot5 == slot1)
	end

	slot0.mHeroModelId = table.keys(slot0.totalHeroData[slot0.selectHeroType])[slot1]
	slot0.mCenterIndex = slot1

	slot0.refreshBuy(slot0)
	slot0.refreshDebrisProg(slot0)

	return 
end
slot0.onBuyAction = function (slot0, slot1)
	slot3 = Utility.analysisStrResList(FamouspavilionRecruitBuyRelation.items[slot0.mHeroModelId][slot1.btnTag].buyCost)[1]

	if slot0.remainDebris < FamouspavilionRecruitBuyRelation.items[slot0.mHeroModelId][slot1.btnTag].onceBuyNum then
		ui.showFlashView(TR("剩余碎片不足"))

		return 
	elseif slot1.btnTag == 3 and slot0.remainCount and slot0.remainCount <= 0 then
		ui.showFlashView(TR("每日使用功勋最多可购买2次~"))

		return 
	end

	if Resource.isEnough(slot3.resourceId, slot3.num) then
		slot0.socketRequest(slot0, {
			methodName = "Buy",
			moduleName = "TimedPavilion",
			methodData = {
				slot0.selectHeroType,
				slot0.mHeroModelId,
				slot1.btnTag
			},
			successCallback = function (slot0)
				ui.showFlashReward(slot0)

				slot0.mHeroBuyInfo = slot0.PavilionInfo.PavilionInfo

				slot0:refreshEllipseUI()

				return 
			end
		})
	end

	return 
end
slot0.onSkillShow = function (slot0, slot1)
	LayerManager.addLayer({
		cleanUp = false,
		name = "player.FashionSkillShowLayer",
		data = {
			fashionModelId = slot0.mHeroModelId
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.refreshOneHero = function (slot0)
	slot0.mHeroNode = slot0.createLayoutTemplateNode(slot0, "HeroTemplate", {
		modelId = table.keys(slot0.totalHeroData[slot0.selectHeroType])[1],
		lihuiEffect = HeroModel.items[table.keys(slot0.totalHeroData[slot0.selectHeroType])[1]].drawingPicB,
		starNum = HeroModel.items[table.keys(slot0.totalHeroData[slot0.selectHeroType])[1]].initStar,
		nameStr = HeroModel.items[table.keys(slot0.totalHeroData[slot0.selectHeroType])[1]].name,
		qualityImg = Utility.getHeroQualityImage(table.keys(slot0.totalHeroData[slot0.selectHeroType])[1])
	})

	slot0.mHeroNode:setPosition(0, -175)
	slot0.centerNode:addChild(slot0.mHeroNode)

	slot0.mHeroModelId = table.keys(slot0.totalHeroData[slot0.selectHeroType])[1]

	slot0.refreshBuy(slot0)
	slot0.refreshDebrisProg(slot0)

	return 
end
slot0.refreshHeroSpecial = function (slot0)
	slot0.heroSpecialSprite:setTexture(({
		"mjg_2.png",
		"mjg_1.png",
		"mjg_3.png",
		"mjg_4.png"
	})[slot0.selectHeroType])

	return 
end
slot0.refreshDebrisProg = function (slot0)
	slot2 = HeroObj:getItem(slot0.mHeroModelId) or {}
	slot3 = GoodsObj:getItemCount(HeroModel.items[slot0.mHeroModelId].debrisId)

	slot0.composeBar.header:setCardData({
		modelId = HeroModel.items[slot0.mHeroModelId].debrisId
	}, {
		Enums.CardShowAttr.eBorder,
		Enums.CardShowAttr.eDebris
	})

	if slot0.composeBar.star then
		slot0.composeBar.star:removeFromParent()

		slot0.composeBar.star = nil
	end

	slot0.composeBar.star = ui.showHeroStarShow(slot2.Star or slot1.initStar, slot2.StepLv, cc.p(120, 18), false, slot2.Star or slot1.initStar)

	slot0.composeBar:addChild(ui.showHeroStarShow(slot2.Star or slot1.initStar, slot2.StepLv, cc.p(120, 18), false, slot2.Star or slot1.initStar))

	if next(slot2) then
		if HeroStarRelation.items[slot0.mHeroModelId][slot2.Star + 1] == nil then
			slot0.composeBar.debrisStatus:setString("")
			slot0.composeBar.progLabel:setString(TR("星级已满  %d", slot3))
			slot0.composeBar.debrisProg:setMaxValue(1)
			slot0.composeBar.debrisProg:setCurrValue(1)
		else
			slot0.composeBar.debrisStatus:setString(TR("升星："))
			slot0.composeBar.progLabel:setString(string.format("%d/%d", slot3, slot5.needDebrisNum))
			slot0.composeBar.debrisProg:setMaxValue(slot5.needDebrisNum)
			slot0.composeBar.debrisProg:setCurrValue(slot3)
		end
	else
		slot0.composeBar.debrisStatus:setString(TR("合成："))
		slot0.composeBar.progLabel:setString(string.format("%d/%d", slot3, GoodsModel.items[slot1.debrisId].outputNeedNum))
		slot0.composeBar.debrisProg:setMaxValue(GoodsModel.items[slot1.debrisId].outputNeedNum)
		slot0.composeBar.debrisProg:setCurrValue(slot3)
	end

	slot0.composeBar:setVisible(true)

	return 
end
slot0.refreshEllipseUI = function (slot0)
	slot1 = table.keys(slot0.totalHeroData[slot0.selectHeroType])

	if slot0.herosEllipse3D then
		slot0.herosEllipse3D:removeFromParent()

		slot0.herosEllipse3D = nil
	end

	if slot0.mHeroNode then
		slot0.mHeroNode:removeFromParent()

		slot0.mHeroNode = nil
	end

	slot0.heroNodeList = {}

	if #slot1 <= 1 then
		slot0.refreshOneHero(slot0)
	else
		slot0.createUISubTree(slot0, "herosEllipse3D", function (slot0, slot1)
			if slot0.name == "herosEllipse3D" then
				slot1.totalItemNum = #slot0
				slot1.fixAngle = slot1 == 2 and 70
			end

			return 
		end)
	end

	return 
end
slot0.requestInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetInfo",
		moduleName = "TimedPavilion",
		methodData = {},
		successCallback = function (slot0)
			slot0.mHeroBuyInfo = slot0.PavilionInfo

			slot0:onHeroTypeAction(slot0:getCustomChildren(slot0.typeBgSprite, "tag", slot1.eAttack)[1])

			slot1 = slot0.EndDate

			Utility.schedule(slot0.remainTimeLabel, function ()
				slot0 - Player:getCurrentTime().remainTimeLabel:setString(string.format("%s", MqTime.completeFormat(slot0 - Player.getCurrentTime())))

				return 
			end, 1)
			function ()
				slot0 - Player.getCurrentTime().remainTimeLabel.setString(string.format("%s", MqTime.completeFormat(slot0 - Player.getCurrentTime())))

				return 
			end()

			return 
		end
	})

	return 
end
slot0.onExitAction = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end

return slot0
