slot0 = class("XSActivityMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "untitled1",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "xshd_1.png",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "mSubParent",
		cType = "Node",
		params = {
			pos = {
				x = 0,
				y = 0
			}
		},
		children = {}
	},
	{
		name = "untitled15",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled17",
				cType = "Button",
				params = {
					clickAction = "onCloseAction",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "titleSprite",
						cType = "Sprite",
						params = {
							image = "xshd_9.png",
							pos = {
								x = 47,
								y = 4
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled30",
		cType = "Node",
		params = {
			scaleApt = 2,
			isLiuHai = true,
			posApt = 1,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled16",
				cType = "Sprite",
				params = {
					image = "fuli_1.png",
					pos = {
						x = 68.68,
						y = -319.42
					}
				},
				children = {
					{
						name = "mLeftListView",
						cType = "ListView",
						params = {
							bounce = true,
							direction = true,
							pos = {
								x = 3.54,
								y = 32.95
							},
							size = {
								width = 140,
								height = 550
							}
						},
						children = {
							{
								name = "ActivityLayout",
								cType = "Layout",
								custom = {
									{
										value = "untitled27-tag",
										name = "moduleId",
										type = "string"
									},
									{
										value = "activityNameLabel-text",
										name = "text",
										type = "string"
									}
								},
								params = {
									pos = {
										z = 0,
										x = 8.77,
										y = 45.27
									},
									size = {
										width = 140,
										height = 70
									}
								},
								children = {
									{
										name = "selectedSprite",
										cType = "Sprite",
										params = {
											image = "fuli_3.png",
											pos = {
												x = 70,
												y = 35
											}
										},
										children = {}
									},
									{
										name = "untitled27",
										cType = "Button",
										custom = {
											{
												value = 1,
												name = "tag",
												type = "integer"
											}
										},
										params = {
											image = "c_pure.png",
											clickAction = "onModuleBtnAction",
											pos = {
												x = 70,
												y = 35
											},
											size = {
												width = 140,
												height = 70
											}
										},
										children = {}
									},
									{
										name = "activityNameLabel",
										cType = "Label",
										params = {
											fontSize = 26,
											pos = {
												x = 63,
												y = 35
											},
											text = TR("天天好礼")
										},
										children = {}
									},
									{
										name = "untitled29",
										cType = "Sprite",
										params = {
											image = "fuli_2.png",
											pos = {
												x = 70,
												y = 0
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			},
			{
				name = "mArrowSprite",
				cType = "Sprite",
				params = {
					image = "xshd_42.png",
					hide = true,
					pos = {
						x = 67.41,
						y = -610.15
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled20",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 1
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 640
			}
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.mActivityType = slot1.activityType or 1
	slot0.defaultModuleId = slot1.moduleId

	require("xsactivity.XSActivityConfig")

	slot0.subConfig = clone(XSActivityConfig)

	slot0.super.ctor(slot0)
	slot0.initUI(slot0)
	RedDotObj:saveOnceRedDot(ModuleSub.eTimedActivity, false)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)

	slot0.mSubNodeList = {}
	slot0.mCurrModuleId = 0
	slot1 = {}

	dump(slot2, "HHDDDD")

	for slot6, slot7 in pairs(slot2) do
		for slot11, slot12 in pairs(slot0.subConfig) do
			if tonumber(slot6) == slot12.moduleId then
				if tonumber(slot6) == ModuleSub.eResConsuming then
					if Player:getCurrentTime() < PlayerAttrObj:getPlayerAttrByName("ResConsumingExpireTime") then
						slot12.Xssx = slot7[1].Xssx

						table.insert(slot1, slot12)
					end
				else
					slot12.Xssx = slot7[1].Xssx

					table.insert(slot1, slot12)
				end
			end
		end
	end

	table.sort(slot1, function (slot0, slot1)
		if slot0.Xssx ~= slot1.Xssx then
			return slot0.Xssx < slot1.Xssx
		end

		return 
	end)

	for slot6, slot7 in ipairs(slot1) do
		slot8 = slot0.createLayoutTemplateNode(slot0, "ActivityLayout", {
			moduleId = slot7.moduleId,
			text = slot7.name
		})

		ui.createLabelClipRoll({
			label = slot8.activityNameLabel,
			dimensions = cc.size(slot8.getContentSize(slot8).width - 10, slot8.getContentSize(slot8).height),
			anchorPoint = cc.p(0.5, 0),
			position = cc.p(slot8.getContentSize(slot8).width/2, 0)
		})

		slot0.mSubNodeList[slot7.moduleId] = slot8

		slot0.mLeftListView:pushBackCustomItem(slot8)

		slot12 = "RedDot"
		slot13 = {
			moduleId = slot7.redDotId or slot7.moduleId
		}

		slot8.addChild(slot8, UIWrap.newControl)
		slot8.addChild(slot8, UIWrap.newControl("NewDot", {
			moduleId = slot7.moduleId
		}))
	end

	slot3 = 1

	for slot7, slot8 in ipairs(slot1) do
		if slot0.defaultModuleId == slot8.moduleId then
			slot3 = slot7
		end
	end

	slot0.changeModuleStoreAction(slot0, slot0.defaultModuleId or (slot1[1] and slot1[1].moduleId) or nil)
	ui.setListviewItemShow(slot0.mLeftListView, slot3)
	slot0.mArrowSprite:setVisible(7 < #slot1)

	return 
end
slot0.getRestoreData = function (slot0)
	return {
		activityType = slot0.mActivityType,
		moduleId = slot0.mCurrModuleId
	}
end
slot0.onCloseAction = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onModuleBtnAction = function (slot0, slot1)
	dump(slot1.tag)
	slot0.changeModuleStoreAction(slot0, slot1.tag)

	return 
end
slot0.changeModuleStoreAction = function (slot0, slot1)
	if slot0.mCurrModuleId == slot1 or slot1 == nil then
		return 
	end

	Player:reportCallActivityCount(slot1, slot0.mActivityType)

	for slot5, slot6 in pairs(slot0.mSubNodeList) do
		slot6.selectedSprite:setVisible(slot5 == slot1)
	end

	slot0.mCurrModuleId = slot1

	print("self.mCurrModuleId = " .. slot0.mCurrModuleId)

	slot2 = (slot0.subConfig[slot1] and slot0.subConfig[slot1].filename) or nil
	slot3 = (slot0.subConfig[slot1] and slot0.subConfig[slot1].titlePic) or "xshd_9.png"

	if slot2 == nil then
		return 
	end

	slot0.titleSprite:setTexture(slot3)
	ActivityObj:deleteNewActivity(slot1)

	if slot0.mCurrFileLayer ~= nil then
		slot0.mCurrFileLayer:removeFromParent()

		slot0.mCurrFileLayer = nil
	end

	slot0.mCurrFileLayer = UIWrap.newControl("FileLayer", {
		file = slot2,
		initParams = {
			moduleId = slot1,
			activityType = slot0.mActivityType
		}
	})

	slot0.mSubParent:addChild(slot0.mCurrFileLayer)

	return 
end

return slot0
