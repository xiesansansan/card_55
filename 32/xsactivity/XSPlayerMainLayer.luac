slot0 = class("XSPlayerMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true,
		color = cc.c4b(0, 0, 0, 128)
	})
end)
slot0.uiTree = {
	{
		name = "untitled134",
		cType = "Sprite",
		params = {
			isFullScale = true,
			scaleApt = 2,
			posApt = 1,
			image = "xswfrk_34.jpg",
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled154",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			isLiuHai = true,
			pos = {
				x = 0,
				y = 320
			}
		},
		children = {
			{
				name = "tips",
				cType = "Label",
				params = {
					fontSize = 26,
					hide = true,
					outlineColor = {
						g = 37,
						r = 37,
						b = 37
					},
					pos = {
						x = 659.58,
						y = 0
					},
					text = TR("今日无活动")
				},
				children = {}
			}
		}
	},
	{
		name = "leftNode",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			isLiuHai = true,
			pos = {
				x = 0,
				y = 320
			}
		},
		children = {
			{
				name = "untitled140",
				cType = "Sprite",
				params = {
					image = "xswfrk_28.png",
					pos = {
						x = 84.37,
						y = -5.31
					}
				},
				children = {
					{
						name = "myTabView",
						cType = "TabView",
						params = {
							selectTag = 1,
							space = 1,
							onSelectChange = "onTabChanged",
							lightedImage = "xswfrk_12.png",
							direction = true,
							normalImage = "c_58.png",
							btnInfos = {
								{
									title = TR("星期一")
								},
								{
									title = TR("星期er")
								},
								{
									title = TR("星期一")
								},
								{
									title = TR("星期一")
								},
								{
									title = TR("星期一")
								},
								{
									title = TR("星期一")
								},
								{
									title = TR("星期一")
								}
							},
							btnSize = {
								width = 140,
								height = 57
							},
							pos = {
								x = 17.56,
								y = 173.69
							},
							size = {
								width = 145,
								height = 406
							},
							titleOffset = {
								x = 0.4,
								y = 0.5
							}
						},
						children = {}
					},
					{
						name = "taskTableView",
						cType = "ListView",
						params = {
							direction = false,
							swallowTouch = false,
							anchor = {
								x = 0,
								y = 0.5
							},
							pos = {
								x = 151.6,
								y = 324.86
							},
							size = {
								width = 950,
								height = 400
							}
						},
						children = {
							{
								name = "taskTempNode",
								cType = "Layout",
								custom = {
									{
										value = "untitled133-moduleId",
										name = "redModeId",
										type = "string"
									}
								},
								params = {
									pos = {
										z = 0,
										x = 0,
										y = 4
									},
									size = {
										width = 235,
										height = 385
									}
								},
								children = {
									{
										name = "untitled113",
										cType = "Sprite",
										params = {
											image = "xswfrk_26.png",
											childName = "sp",
											pos = {
												x = 115,
												y = 184
											}
										},
										children = {}
									},
									{
										name = "untitled114",
										cType = "Button",
										params = {
											image = "c_58.png",
											childName = "btn",
											pos = {
												x = 115,
												y = 243
											},
											size = {
												width = 220,
												height = 220
											}
										},
										children = {}
									},
									{
										name = "untitled115",
										cType = "Label",
										params = {
											fontSize = 16,
											childName = "huoyue",
											text = "",
											isRichText = true,
											color = {
												g = 255,
												r = 255,
												b = 255
											},
											outlineColor = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 115,
												y = 128.05
											}
										},
										children = {}
									},
									{
										name = "untitled116",
										cType = "Label",
										params = {
											fontSize = 16,
											isRichText = true,
											text = "",
											childName = "timeLabel",
											outlineColor = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 115,
												y = 103
											}
										},
										children = {}
									},
									{
										name = "untitled119",
										cType = "Label",
										params = {
											fontSize = 26,
											childName = "titleLabel",
											text = "",
											isRichText = true,
											color = {
												g = 255,
												r = 255,
												b = 255
											},
											outlineColor = {
												g = 37,
												r = 37,
												b = 37
											},
											pos = {
												x = 115,
												y = 342
											}
										},
										children = {}
									},
									{
										name = "untitled132",
										cType = "Node",
										params = {
											childName = "redNode",
											pos = {
												x = 201.6,
												y = 345.63
											}
										},
										children = {
											{
												name = "untitled133",
												cType = "RedDot",
												params = {
													moduleId = 1,
													pos = {
														z = 0,
														x = 102.86,
														y = 247.49
													}
												},
												children = {}
											}
										}
									},
									{
										name = "untitled120",
										cType = "ListView",
										params = {
											childName = "cardNodeList",
											direction = false,
											pos = {
												x = 18.89,
												y = 17.04
											},
											size = {
												width = 195,
												height = 70
											}
										},
										children = {
											{
												name = "cardLayout",
												cType = "Layout",
												custom = {
													{
														value = "untitled122-initParams",
														name = "cardParams",
														type = "string"
													}
												},
												params = {
													size = {
														width = 64,
														height = 70
													}
												},
												children = {
													{
														name = "untitled122",
														cType = "CardNode",
														params = {
															scale = 0.7,
															childName = "cardNode",
															allowClick = true,
															initParams = {},
															pos = {
																x = 32,
																y = 35
															}
														},
														children = {}
													}
												}
											}
										}
									},
									{
										name = "untitled128",
										cType = "Sprite",
										params = {
											childName = "isKuaFu",
											image = "xswfrk_19.png",
											hide = true,
											pos = {
												x = 79.91,
												y = 293.63
											}
										},
										children = {}
									},
									{
										name = "untitled129",
										cType = "Sprite",
										params = {
											image = "xswfrk_15.png",
											childName = "isCanYu",
											pos = {
												x = 161.18,
												y = 179.82
											}
										},
										children = {}
									}
								}
							}
						}
					}
				}
			},
			{
				name = "untitled131",
				cType = "Sprite",
				params = {
					image = "xswfrk_14.png",
					hide = true,
					pos = {
						x = 78.1,
						y = -230.97
					}
				},
				children = {
					{
						name = "num",
						cType = "Label",
						params = {
							text = "300",
							pos = {
								x = 42.55,
								y = 45.95
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled44",
		cType = "Button",
		params = {
			clickAction = "onWanFaDailyClick",
			scaleApt = 2,
			posApt = 1,
			image = "tb_gn_296.png",
			pos = {
				x = 1060.73,
				y = 526.34
			}
		},
		children = {}
	},
	{
		name = "bottomNode",
		cType = "Node",
		params = {
			posApt = 1,
			hide = true,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 0
			}
		},
		children = {
			{
				name = "untitled142",
				cType = "Sprite",
				params = {
					image = "xswfrk_29.png",
					pos = {
						x = 71.8,
						y = 100.36
					}
				},
				children = {}
			},
			{
				name = "boxSp1",
				cType = "Scale9Sprite",
				params = {
					image = "jyt_22.png",
					pos = {
						x = 10,
						y = 151
					},
					size = {
						width = 650,
						height = 22
					}
				},
				children = {
					{
						name = "progBar1",
						cType = "ProgressBar",
						params = {
							maxValue = 1,
							currValue = 1,
							normalImage = "jyt_23.png",
							pos = {
								x = 325,
								y = 11
							},
							size = {
								width = 650,
								height = 14
							}
						},
						children = {}
					},
					{
						name = "boxNode1",
						cType = "Node",
						params = {
							pos = {
								x = 0,
								y = 0
							},
							size = {
								width = 650,
								height = 22
							}
						},
						children = {}
					},
					{
						name = "untitled143",
						cType = "Sprite",
						params = {
							image = "xswfrk_30.png",
							pos = {
								x = -24.45,
								y = 9
							}
						},
						children = {}
					}
				}
			},
			{
				name = "boxSp2",
				cType = "Scale9Sprite",
				params = {
					image = "jyt_22.png",
					pos = {
						x = 10,
						y = 52
					},
					size = {
						width = 650,
						height = 22
					}
				},
				children = {
					{
						name = "buyBtn",
						cType = "Button",
						params = {
							image = "xswfrk_32.png",
							clickAction = "onBuy",
							pos = {
								x = 746.97,
								y = 19.23
							}
						},
						children = {
							{
								name = "priceLabel",
								cType = "Label",
								params = {
									text = "0",
									isRichText = true,
									fontName = "shc_10.png",
									anchor = {
										x = 1,
										y = 0.5
									},
									pos = {
										x = 23.3,
										y = 18.18
									}
								},
								children = {
									{
										name = "untitled151",
										cType = "Sprite",
										params = {
											image = "shc_30.png",
											pos = {
												x = -15.03,
												y = 14.43
											}
										},
										children = {}
									}
								}
							}
						}
					},
					{
						name = "progBar2",
						cType = "ProgressBar",
						params = {
							maxValue = 1,
							currValue = 1,
							normalImage = "jyt_23.png",
							pos = {
								x = 325,
								y = 11
							},
							size = {
								width = 650,
								height = 14
							}
						},
						children = {}
					},
					{
						name = "boxNode2",
						cType = "Node",
						params = {
							pos = {
								x = 0,
								y = 0
							},
							size = {
								width = 650,
								height = 22
							}
						},
						children = {}
					},
					{
						name = "untitled149",
						cType = "Sprite",
						params = {
							image = "xswfrk_31.png",
							pos = {
								x = -24.45,
								y = 9
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled135",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			anchor = {
				x = 0,
				y = 1
			},
			pos = {
				x = 0,
				y = 640
			}
		},
		children = {
			{
				name = "untitled136",
				cType = "Button",
				params = {
					clickAction = "onCloseClick",
					image = "c_1.png",
					anchor = {
						x = 0,
						y = 1
					},
					pos = {
						x = 0,
						y = 0
					}
				},
				children = {
					{
						name = "untitled137",
						cType = "Sprite",
						params = {
							image = "xswfrk_33.png",
							anchor = {
								x = 0,
								y = 1
							},
							pos = {
								x = -33.76,
								y = 26.4
							}
						},
						children = {}
					}
				}
			}
		}
	},
	{
		name = "untitled153",
		cType = "TopResourceNode",
		params = {
			scaleApt = 2,
			posApt = 1,
			anchor = {
				x = 1,
				y = 0.5
			},
			moduleIdList = {
				1111,
				1112,
				1114
			},
			pos = {
				x = 1136,
				y = 614
			}
		},
		children = {}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0, {
		swallow = true
	})

	slot0.seleck = 1
	slot0.mWanfaConfigList = clone(TimedPlayConfig.items)
	slot0.mPlayerLv = PlayerAttrObj:getPlayerAttrByName("Lv")
	slot0.isDay = false

	slot0.initUI(slot0)
	EventAuto:registerAutoEvent(slot0, EventDefine.eRechargeType .. Enums.chargeType.TimedPlayGift, function (slot0)
		slot0:requestInfo()

		return 
	end)

	return 
end
slot0.initUI = function (slot0)
	slot0.tebBtnInfos = {
		{
			tag = 1,
			title = TR("星期一")
		},
		{
			tag = 2,
			title = TR("星期二")
		},
		{
			tag = 3,
			title = TR("星期三")
		},
		{
			tag = 4,
			title = TR("星期四")
		},
		{
			tag = 5,
			title = TR("星期五")
		},
		{
			tag = 6,
			title = TR("星期六")
		},
		{
			tag = 7,
			title = TR("星期日")
		}
	}

	slot0.createUITree(slot0, function (slot0, slot1)
		if slot0.name == "myTabView" then
			slot1.btnInfos = slot0.tebBtnInfos
		end

		if slot0.name == "taskTableView" then
			slot1.size.width = (LocalData:getCacheData("liuhaiWidth") or 0) - 950
		end

		return 
	end)

	for slot5, slot6 in ipairs(slot1) do
		slot7 = UIWrap.newControl("Sprite", {
			image = "xswfrk_13.png"
		})

		slot7.setPosition(slot7, -45, 0)
		slot7.setVisible(slot7, false)
		slot6.addChild(slot6, slot7)

		slot6.tempSprite = slot7
	end

	slot0.requestInfo(slot0)

	return 
end
slot0.onTabChanged = function (slot0, slot1)
	slot0.seleck = slot1

	slot0.refUiLayer(slot0)

	return 
end
slot0.onPopActionClick = function (slot0)
	return 
end
slot0.refUiLayer = function (slot0)
	if not slot0.mTimedPlayWeekInfo then
		return 
	end

	slot0.taskTableView:removeAllChildren()

	slot0.isDay = slot0.mTimedPlayWeekInfo[tostring(slot0.seleck)].IsToday

	dump(slot1, "=====dataList===========")
	slot0.tips:setVisible(#slot0.mTimedPlayWeekInfo[tostring(slot0.seleck)].ActivityList <= 0)

	if #slot1 <= 0 then
		return 
	end

	table.sort(slot1, function (slot0, slot1)
		slot3 = slot0.mTimedPlaySeasonInfo[tostring(slot1.Key)].IsOpen

		if slot0.mTimedPlaySeasonInfo[tostring(slot0.Key)].IsOpen and not slot3 then
			return true
		end

		return 
	end)

	for slot5, slot6 in ipairs(slot1) do
		if slot6.Value == 1 then
			slot8 = slot0.mTimedPlaySeasonInfo[tostring(slot6.Key)]

			slot0.createLayoutTemplateNode(slot0, "taskTempNode", {
				redModeId = slot0.mWanfaConfigList[slot6.Key].Id
			}).timeLabel:setVisible(ModuleSubConfig.items[slot6.Key].openLv <= slot0.mPlayerLv)

			for slot16, slot17 in ipairs(Utility.analysisStrResList(slot7.rewardPreview)) do
				slot12.cardNodeList:pushBackCustomItem(slot0.createLayoutTemplateNode(slot0, "cardLayout", {
					cardParams = {
						cardInfo = {
							modelId = slot17.resourceId
						},
						showAttrs = {
							Enums.CardShowAttr.eNum
						}
					}
				}))
			end

			slot12.sp:setTexture(slot13)
			slot12.titleLabel:setString(slot7.name)
			slot12.isKuaFu:setVisible(slot7.ifCrossService == 1)
			slot12.redNode:setVisible(slot0.isDay)

			if slot0.isDay then
				slot12.sp:setGray(not slot8.IsOpen or not slot11)
				slot12.isCanYu:setTexture((slot8.IsGetActiveNum and "xswfrk_15.png") or "xswfrk_16.png")
			else
				slot12.sp:setGray(true)
				slot12.isCanYu:setTexture("xswfrk_16.png")
			end

			if slot11 then
				slot12.huoyue:setString(TR(""))
			else
				slot12.huoyue:setString(TR("等级%s级开放", slot10.openLv))
			end

			slot14 = slot8.StartTime
			slot15 = "开启倒计时:"

			if Player:getCurrentTime() < slot8.StartTime then
				slot14 = slot8.StartTime
				slot15 = "开始倒计时:"
			elseif slot8.StartTime <= Player:getCurrentTime() and Player:getCurrentTime() <= slot8.EndTime then
				slot14 = slot8.EndTime
				slot15 = "结束倒计时:"
			else
				slot14 = slot8.EndTime
				slot15 = "错误倒计时:"
			end

			if slot0.isDay then
				Utility.schedule(slot12.timeLabel, function ()
					if 0 <= slot0 - Player:getCurrentTime() then
						slot1.timeLabel:setString(TR("%s%s%s", slot1.timeLabel, "#FFE748", MqTime.formatAsHour(slot0)))
					else
						slot1.timeLabel:stopAllActions()
						slot1.timeLabel.stopAllActions.timeLabel:setString(TR("本轮活动已结束"))
					end

					return 
				end, 1)
			else
				slot12.timeLabel:setString(TR("%s", slot7.opentime))
			end

			slot12.btn:setClickAction(function ()
				if not slot0.isDay then
					ui.showFlashView(TR("暂未开放！"))

					return 
				end

				if slot1.IsOpen then
					if slot2.Id == ModuleSub.eEveningBoss then
						if slot0.mPlayerLv < slot3.openLv then
							ui.showFlashView(TR("等级%s级开放", slot3.openLv))

							return 
						end
					elseif slot2.Id == ModuleSub.eDart and (Player:getCurrentTime() < slot1.StartTime or slot1.EndTime < Player:getCurrentTime()) then
						ui.showFlashView(TR("每日9：00至21：00可进入"))

						return 
					end

					LayerManager.showModuleLayer(slot2.Id)
				elseif slot2.Id == ModuleSub.eEveningBoss then
					if slot0.mPlayerLv < slot3.openLv then
						ui.showFlashView(TR("等级%s级开放", slot3.openLv))

						return 
					end

					LayerManager.showModuleLayer(slot2.Id)
				elseif slot2.Id == ModuleSub.eLeaguetopFinal then
					LayerManager.showModuleLayer(slot2.Id)
				elseif slot2.Id == ModuleSub.eWorldNumOne then
					LayerManager.addLayer({
						cleanUp = false,
						name = "pvp.DlgWorldBestStartTipsLayer",
						zOrder = Enums.ZOrderType.ePopLayer
					})
				else
					ui.showFlashView(TR("暂未开放！"))
				end

				return 
			end)
			slot0.taskTableView:pushBackCustomItem(slot12)
		end
	end

	return 
end
slot0.onWanFaDailyClick = function (slot0)
	slot1 = {}

	for slot5, slot6 in pairs(slot0.mTimedPlayWeekInfo) do
		if type(slot6) == "table" and slot6.ActivityList then
			for slot10, slot11 in pairs(slot6.ActivityList) do
				if slot11.Value == 1 then
					slot1[slot11.Key] = true
				end
			end
		end
	end

	LayerManager.addLayer({
		cleanUp = false,
		name = "xsactivity.XsCalendarsLayer",
		data = {
			showList = slot1
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onCloseClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onBuy = function (slot0)
	if 0 < slot0.mTimedPlayWeekInfo.ChargeNum then
		ui.showFlashView(TR("豪华礼包已购买"))

		return 
	end

	function ()
		Utility.recharge({
			chargeType = Enums.chargeType.TimedPlayGift,
			price = slot0.mTimedPlayWeekInfo.ChargeMoney,
			productId = slot0.mTimedPlayWeekInfo.ProductId
		})

		return 
	end()

	return 
end
slot0.creatRewardBox = function (slot0)
	slot0.boxNode1:removeAllChildren()

	slot1 = {}
	slot2 = {}

	for slot6, slot7 in pairs(TimedPlayRewardConfig.items[slot0.mRewardBatch]) do
		table.insert(slot2, slot7)
	end

	slot3 = 0

	for slot7, slot8 in pairs(slot2) do
		if slot3 < slot8.needActive then
			slot3 = slot8.needActive
		end
	end

	for slot7, slot8 in pairs(slot2) do
		slot9 = Utility.analysisStrResList(slot8.resourceList)[1]
		slot10 = slot8.needActive/slot3*650

		if slot8.needActive == slot3 then
			slot10 = slot8.needActive/slot3*650 - 15
		end

		slot0.boxNode1:addChild(slot11)
		table.insert(slot1, slot12)
		slot0.boxNode1:addChild(UIWrap.newControl("Label", {
			fontSize = 18,
			text = slot8.needActive,
			pos = cc.p(slot10, -25),
			color = cc.c3b(255, 255, 255),
			outlineColor = cc.c3b(0, 0, 0)
		}))
	end

	slot0.progBar1:setMaxValue(slot3)
	slot0.progBar1:setCurrValue(slot0.mActiveNum)

	slot4 = {}

	for slot8, slot9 in pairs(slot0.mReceivedActiveNum) do
		slot4[slot9] = true
	end

	for slot8, slot9 in pairs(slot1) do
		slot9.boxBtn:stopAllActions()

		if slot9.needActive <= slot0.mActiveNum then
			if slot4[slot9.needActive] then
				slot10 = UIWrap.newControl("Sprite", {
					image = "zj_122.png"
				})

				slot10.setPosition(slot10, 35, 40)
				slot9.boxBtn:addChild(slot10)
				slot9.boxBtn:setEnabled(false)
			else
				ui.setWaveAnimation(slot9.boxBtn)
				slot9.boxBtn:setEnabled(true)
				slot9.boxBtn:setClickAction(function ()
					slot0:requestBoxReward(slot1.needActive)

					return 
				end)
			end
		else
			slot9.boxBtn:setEnabled(true)
		end
	end

	return 
end
slot0.creatRewardBoxEx = function (slot0)
	slot0.boxNode2:removeAllChildren()

	slot1 = {}
	slot2 = {}

	for slot6, slot7 in pairs(TimedPlayRewardConfig.items[slot0.mRewardBatch]) do
		table.insert(slot2, slot7)
	end

	slot3 = 0

	for slot7, slot8 in pairs(slot2) do
		if slot3 < slot8.needActive then
			slot3 = slot8.needActive
		end
	end

	for slot7, slot8 in pairs(slot2) do
		slot9 = Utility.analysisStrResList(slot8.advancedResourceList)[1]
		slot10 = slot8.needActive/slot3*650

		if slot8.needActive == slot3 then
			slot10 = slot8.needActive/slot3*650 - 15
		end

		slot0.boxNode2:addChild(slot11)
		table.insert(slot1, {
			boxBtn = UIWrap.newControl("CardNode", {
				allowClick = true,
				scale = 0.65,
				initParams = {
					cardInfo = {
						modelId = slot9.resourceId,
						num = slot9.num
					},
					showAttrs = {
						Enums.CardShowAttr.eStar,
						Enums.CardShowAttr.eNum
					}
				},
				pos = cc.p(slot10, 10)
			}),
			needActive = slot8.needActive,
			rewardStr = slot8.advancedResourceList
		})
	end

	slot0.progBar2:setMaxValue(slot3)
	slot0.progBar2:setCurrValue(slot0.mActiveNum)

	slot4 = {}

	for slot8, slot9 in pairs(slot0.mReceivedAdvancedNum) do
		slot4[slot9] = true
	end

	for slot8, slot9 in pairs(slot1) do
		slot9.boxBtn:stopAllActions()

		if slot9.needActive <= slot0.mActiveNum then
			if slot4[slot9.needActive] then
				slot10 = UIWrap.newControl("Sprite", {
					image = "zj_122.png"
				})

				slot10.setPosition(slot10, 35, 40)
				slot9.boxBtn:addChild(slot10)
				slot9.boxBtn:setEnabled(false)
			else
				ui.setWaveAnimation(slot9.boxBtn)
				slot9.boxBtn:setEnabled(true)
				slot9.boxBtn:setClickAction(function ()
					if not slot0.mTimedPlayWeekInfo.ChargeNum or slot0.mTimedPlayWeekInfo.ChargeNum <= 0 then
						ui.showFlashView(TR("购买豪华奖励后可领取"))

						return 
					end

					slot0:requestBoxRewardEx(slot1.needActive)

					return 
				end)
			end
		else
			slot9.boxBtn:setEnabled(true)
		end
	end

	return 
end
slot0.refRewardBox = function (slot0)
	slot0.priceLabel:setString(slot0.mTimedPlayWeekInfo.ChargeMoney)

	return 
end
slot0.requestInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "GetActivityInfo",
		moduleName = "PlayeCalendar",
		methodData = {},
		successCallback = function (slot0)
			dump(slot0, "======response======")

			slot0.mTimedPlayWeekInfo = slot0.TimedPlayWeekInfo
			slot0.mTimedPlaySeasonInfo = slot0.TimedPlaySeasonInfo
			slot0.mTimedPlayActiveInfo = slot0.TimedPlayActiveInfo
			slot0.mActiveNum = slot0.mTimedPlayActiveInfo.ActiveNum
			slot0.mReceivedActiveNum = slot0.mTimedPlayActiveInfo.ReceivedActiveNum
			slot0.mReceivedAdvancedNum = slot0.mTimedPlayActiveInfo.ReceivedAdvancedNum

			slot0.num:setString(TR("%s", slot0.mActiveNum))

			slot0.mRewardBatch = slot0.mTimedPlayActiveInfo.RewardBatch

			for slot5, slot6 in ipairs(slot1) do
				for slot10, slot11 in pairs(slot0.mTimedPlayWeekInfo) do
					slot6.tempSprite:setVisible(slot0.mTimedPlayWeekInfo[tostring(slot6.tag)].IsToday)

					if slot0.mTimedPlayWeekInfo[tostring(slot6.tag)].IsToday then
						slot0.seleck = slot0.mTimedPlayWeekInfo[tostring(slot6.tag)].Week
					end
				end
			end

			slot0.myTabView:activeTabBtnByTag(slot0.seleck)
			ActivityObj:setXSPlayerInfo(slot0.AdvanceNoticeInfo)
			slot0:refRewardBox()
			slot0:refUiLayer()

			return 
		end
	})

	return 
end
slot0.requestBoxReward = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetActiveReward",
		moduleName = "PlayeCalendar",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			dump(slot0, "response2222222")

			slot0.mRewardBatch = slot0.TimedPlayActiveInfo.RewardBatch
			slot0.mReceivedActiveNum = slot0.TimedPlayActiveInfo.ReceivedActiveNum
			slot0.mReceivedAdvancedNum = slot0.TimedPlayActiveInfo.ReceivedAdvancedNum
			slot0.mActiveNum = slot0.TimedPlayActiveInfo.ActiveNum

			slot0.num:setString(TR("%s", slot0.mActiveNum))

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			slot0:refRewardBox()

			return 
		end
	})

	return 
end
slot0.requestBoxRewardEx = function (slot0, slot1)
	slot0.socketRequest(slot0, {
		methodName = "GetAdvanceReward",
		moduleName = "PlayeCalendar",
		methodData = {
			slot1
		},
		successCallback = function (slot0)
			dump(slot0, "response3333333")

			slot0.mRewardBatch = slot0.TimedPlayActiveInfo.RewardBatch
			slot0.mReceivedActiveNum = slot0.TimedPlayActiveInfo.ReceivedActiveNum
			slot0.mReceivedAdvancedNum = slot0.TimedPlayActiveInfo.ReceivedAdvancedNum
			slot0.mActiveNum = slot0.TimedPlayActiveInfo.ActiveNum

			slot0.num:setString(TR("%s", slot0.mActiveNum))

			if slot0.BaseGetGameResourceList then
				ui.showFlashReward({
					BaseGetGameResourceList = slot0.BaseGetGameResourceList
				})
			end

			slot0:refRewardBox()

			return 
		end
	})

	return 
end

return slot0
