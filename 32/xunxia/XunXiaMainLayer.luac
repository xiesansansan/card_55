slot0 = class("XunXiaMainLayer", require("common.BaseLayer"), function ()
	return UIWrap.newRootLayer({
		fullScreen = true
	})
end)
slot0.uiTree = {
	{
		name = "bgSprite",
		cType = "Sprite",
		params = {
			posApt = 1,
			image = "xkxx_31.png",
			scaleApt = 2,
			pos = {
				x = 568,
				y = 320
			}
		},
		children = {}
	},
	{
		name = "untitled83",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 0,
				y = 0
			}
		},
		children = {
			{
				name = "untitled84",
				cType = "Button",
				params = {
					image = "c_1.png",
					clickAction = "onCloseBtnClick",
					pos = {
						x = 114.38,
						y = 612.25
					}
				},
				children = {}
			},
			{
				name = "untitled85",
				cType = "Sprite",
				params = {
					image = "rwlz_6.png",
					pos = {
						x = 236,
						y = 614
					}
				},
				children = {
					{
						name = "untitled86",
						cType = "Button",
						params = {
							image = "c_3.png",
							clickAction = "onRuleClick",
							pos = {
								x = 191.54,
								y = 23.24
							}
						},
						children = {}
					}
				}
			},
			{
				name = "infoBg",
				cType = "Sprite",
				params = {
					image = "c_9.png",
					pos = {
						x = 300,
						y = 320.68
					}
				},
				children = {}
			},
			{
				name = "mTableView",
				cType = "TableView",
				params = {
					numOfCellsFunc = "cbNumOfCellsFunc",
					isVertical = true,
					cellUpdateFunc = "cbCellUpdateFunc",
					cellSizeFunc = "cbCellSizeFunc",
					cellFillFunc = "cbCellFillFunc",
					pos = {
						x = 85.03,
						y = 77.38
					},
					size = {
						width = 430,
						height = 490
					}
				},
				children = {
					{
						name = "mTaskTemplate",
						cType = "TemplateNode",
						params = {
							pos = {
								x = 0,
								y = -207.6
							},
							size = {
								width = 430,
								height = 210
							}
						},
						children = {
							{
								name = "btn1",
								cType = "Button",
								custom = {
									{
										value = 1,
										name = "tag",
										type = "integer"
									}
								},
								params = {
									isNeedOutline = false,
									swallowTouch = false,
									image = "rwlz_7.png",
									pos = {
										x = 70,
										y = 82
									},
									titleColor = {
										g = 64,
										r = 66,
										b = 84
									},
									titleOffset = {
										x = 0.5,
										y = 0.86
									},
									titleText = TR("名字")
								},
								children = {
									{
										name = "untitled91",
										cType = "Label",
										params = {
											childName = "des",
											color = {
												g = 64,
												r = 66,
												b = 84
											},
											pos = {
												x = 0,
												y = -60
											},
											text = TR("寻侠条件")
										},
										children = {}
									},
									{
										name = "untitled92",
										cType = "Sprite",
										params = {
											childName = "chooseImg",
											image = "rwlz_8.png",
											hide = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									},
									{
										name = "untitled93",
										cType = "CardNode",
										params = {
											childName = "cardNode",
											allowClick = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									}
								}
							},
							{
								name = "btn2",
								cType = "Button",
								custom = {
									{
										value = 2,
										name = "tag",
										type = "integer"
									}
								},
								params = {
									isNeedOutline = false,
									swallowTouch = false,
									image = "rwlz_7.png",
									pos = {
										x = 215,
										y = 82
									},
									titleColor = {
										g = 64,
										r = 66,
										b = 84
									},
									titleOffset = {
										x = 0.5,
										y = 0.86
									},
									titleText = TR("名字")
								},
								children = {
									{
										name = "untitled95",
										cType = "Label",
										params = {
											childName = "des",
											color = {
												g = 64,
												r = 66,
												b = 84
											},
											pos = {
												x = 0,
												y = -60
											},
											text = TR("寻侠条件")
										},
										children = {}
									},
									{
										name = "untitled96",
										cType = "Sprite",
										params = {
											childName = "chooseImg",
											image = "rwlz_8.png",
											hide = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									},
									{
										name = "untitled97",
										cType = "CardNode",
										params = {
											childName = "cardNode",
											allowClick = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									}
								}
							},
							{
								name = "btn3",
								cType = "Button",
								custom = {
									{
										value = 3,
										name = "tag",
										type = "integer"
									}
								},
								params = {
									isNeedOutline = false,
									swallowTouch = false,
									image = "rwlz_7.png",
									pos = {
										x = 360,
										y = 82
									},
									titleColor = {
										g = 64,
										r = 66,
										b = 84
									},
									titleOffset = {
										x = 0.5,
										y = 0.86
									},
									titleText = TR("名字")
								},
								children = {
									{
										name = "untitled99",
										cType = "Label",
										params = {
											childName = "des",
											color = {
												g = 64,
												r = 66,
												b = 84
											},
											pos = {
												x = 0,
												y = -60
											},
											text = TR("寻侠条件")
										},
										children = {}
									},
									{
										name = "untitled100",
										cType = "Sprite",
										params = {
											childName = "chooseImg",
											image = "rwlz_8.png",
											hide = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									},
									{
										name = "untitled101",
										cType = "CardNode",
										params = {
											childName = "cardNode",
											allowClick = true,
											pos = {
												x = 0,
												y = 0
											}
										},
										children = {}
									}
								}
							},
							{
								name = "untitled102",
								cType = "Sprite",
								params = {
									image = "rwlz_3.png",
									childName = "",
									pos = {
										x = 221.41,
										y = 188.31
									}
								},
								children = {}
							},
							{
								name = "untitled103",
								cType = "Label",
								params = {
									fontSize = 24,
									childName = "desName",
									color = {
										g = 64,
										r = 66,
										b = 84
									},
									pos = {
										x = 220.13,
										y = 188.35
									},
									text = TR("第几张")
								},
								children = {}
							}
						}
					}
				}
			}
		}
	},
	{
		name = "untitled62",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 1136,
				y = 0
			}
		},
		children = {
			{
				name = "figureHeroImg",
				cType = "Sprite",
				params = {
					scale = 0.8,
					image = "lh_12104.png",
					pos = {
						x = -345.92,
						y = 350.59
					}
				},
				children = {}
			},
			{
				name = "playerName",
				cType = "Label",
				params = {
					fontSize = 24,
					text = "",
					valign = 0,
					color = {
						g = 0,
						r = 0,
						b = 0
					},
					pos = {
						x = -121.13,
						y = 480.31
					},
					size = {
						width = 24,
						height = 200
					}
				},
				children = {}
			},
			{
				name = "untitled67",
				cType = "Sprite",
				params = {
					rotationAngle = 90,
					image = "c_11.png",
					pos = {
						x = -102.97,
						y = 409.35
					}
				},
				children = {}
			},
			{
				name = "des",
				cType = "Label",
				params = {
					fontSize = 18,
					text = "",
					valign = 0,
					color = {
						g = 64,
						r = 232,
						b = 46
					},
					pos = {
						x = -86.47,
						y = 391.35
					},
					size = {
						width = 18,
						height = 360
					}
				},
				children = {}
			},
			{
				name = "bottomBg",
				cType = "Sprite",
				params = {
					image = "rwlz_2.png",
					pos = {
						x = -322,
						y = 104.73
					}
				},
				children = {
					{
						name = "dayNum",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 64,
								r = 66,
								b = 84
							},
							pos = {
								x = 35,
								y = 105
							},
							text = TR("今日次数：0/0")
						},
						children = {}
					},
					{
						name = "ownNum",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 64,
								r = 66,
								b = 84
							},
							pos = {
								x = 35,
								y = 70
							},
							text = TR("拥有数量：0")
						},
						children = {}
					},
					{
						name = "qiecuoNum",
						cType = "Label",
						params = {
							fontSize = 20,
							isRichText = true,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 64,
								r = 66,
								b = 84
							},
							pos = {
								x = 280,
								y = 105
							},
							text = TR("切磋次数:0/0")
						},
						children = {}
					},
					{
						name = "untitled74",
						cType = "Button",
						params = {
							image = "c_20.png",
							clickAction = "onSellClick",
							pos = {
								x = 489.62,
								y = 105
							}
						},
						children = {}
					},
					{
						name = "untitled75",
						cType = "Label",
						params = {
							fontSize = 20,
							anchor = {
								x = 0,
								y = 0.5
							},
							color = {
								g = 64,
								r = 66,
								b = 84
							},
							pos = {
								x = 280,
								y = 70
							},
							text = TR("人物列传系统共享次数")
						},
						children = {}
					},
					{
						name = "untitled76",
						cType = "Button",
						params = {
							fontSize = 18,
							clickAction = "onXunXiaOneClick",
							image = "c_32.png",
							pos = {
								x = 85,
								y = 35
							},
							titleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							titleText = TR("寻侠1次")
						},
						children = {}
					},
					{
						name = "untitled77",
						cType = "Button",
						params = {
							fontSize = 18,
							clickAction = "onXunXiaTenClick",
							image = "c_33.png",
							pos = {
								x = 200,
								y = 35
							},
							titleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							titleText = TR("寻侠10次")
						},
						children = {}
					},
					{
						name = "untitled78",
						cType = "Button",
						params = {
							fontSize = 18,
							clickAction = "onQieCuoOneClick",
							image = "c_32.png",
							pos = {
								x = 335,
								y = 35
							},
							titleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							titleText = TR("切磋1次")
						},
						children = {}
					},
					{
						name = "untitled79",
						cType = "Button",
						params = {
							fontSize = 18,
							clickAction = "onQieCuoTenClick",
							image = "c_33.png",
							pos = {
								x = 450,
								y = 35
							},
							titleColor = {
								g = 255,
								r = 255,
								b = 255
							},
							titleText = TR("切磋10次")
						},
						children = {}
					},
					{
						name = "upStarNum",
						cType = "Label",
						params = {
							text = "",
							anchor = {
								x = 1,
								y = 0.5
							},
							color = {
								g = 64,
								r = 66,
								b = 84
							},
							pos = {
								x = 536.75,
								y = 153.56
							}
						},
						children = {}
					}
				}
			},
			{
				name = "untitled63",
				cType = "TopResourceNode",
				params = {
					moduleIdList = {
						1111,
						1112,
						1113
					},
					pos = {
						x = -497.77,
						y = 588.92
					}
				},
				children = {}
			}
		}
	},
	{
		name = "untitled104",
		cType = "Node",
		params = {
			posApt = 1,
			scaleApt = 2,
			pos = {
				x = 568,
				y = 0
			}
		},
		children = {
			{
				name = "untitled105",
				cType = "Button",
				params = {
					image = "tb_gn_2.png",
					clickAction = "onXunXiaClick",
					pos = {
						x = 10,
						y = 518
					}
				},
				children = {}
			},
			{
				name = "untitled106",
				cType = "Button",
				params = {
					image = "tb_gn_1.png",
					clickAction = "onPlayerShowClick",
					pos = {
						x = 10,
						y = 418
					}
				},
				children = {}
			}
		}
	}
}
slot0.ctor = function (slot0, slot1)
	slot0.super.ctor(slot0)
	slot0.dataConfig(slot0)

	slot0.chapterModel = 11
	slot0.nodeId = 1101
	slot0.oldList = {}

	slot0.initUI(slot0)

	return 
end
slot0.initUI = function (slot0)
	slot0.createUITree(slot0)
	EventAuto:registerAutoEvent(slot0, "eXUNXIABUYCOUNTEVENT", function (slot0, slot1)
		slot0:refreshQunXiaBuy(slot1)

		return 
	end)
	EventAuto:registerAutoEvent(slot0, "eXUNXIACOUNTEVENT", function (slot0, slot1)
		slot0:refreeXunXiaCount(slot1)

		return 
	end)
	slot0.getQunxiaInfo(slot0)

	return 
end
slot0.dataConfig = function (slot0)
	slot0.QunxiaChapterDataList = {}

	for slot4, slot5 in pairs(QunxiaChapterModel.items) do
		slot6 = {}

		for slot10, slot11 in pairs(QunxiaNodeModel.items) do
			if slot5.chapterModel == slot11.matchChapterModelId then
				table.insert(slot6, slot11)
			end
		end

		slot0.QunxiaChapterDataList[slot5.chapterModel] = slot6
	end

	slot0.QunxiaNodeDataList = {}

	for slot4, slot5 in pairs(QunxiaNodeModel.items) do
		slot0.QunxiaNodeDataList[slot5.nodeId] = slot5
	end

	slot0.QunxiaChapterList = {}

	for slot4, slot5 in pairs(QunxiaChapterModel.items) do
		table.insert(slot0.QunxiaChapterList, slot5)
	end

	table.sort(slot0.QunxiaChapterList, function (slot0, slot1)
		return slot0.chapterModel < slot1.chapterModel
	end)

	return 
end
slot0.refreshData = function (slot0)
	slot0.mTableView:reloadData()

	return 
end
slot0.refreshRightInfo = function (slot0, slot1)
	slot0.playerName:setString(HeroModel.items[slot0.QunxiaNodeDataList[slot1].matchHeroModelId].name)
	slot0.des:setString(HeroModel.items[slot0.QunxiaNodeDataList[slot1].matchHeroModelId].keyWord)
	slot0.qiecuoNum:setString(TR("切磋次数:%s%s/%s", "#67a31e", (VipConfig.items[PlayerAttrObj:getPlayerAttrByName("Vip")].freeFightHeroNum + slot0.mFightBuyNum) - slot0.mFightNum, slot5))

	slot6, slot7 = slot0.foundCount(slot0, slot0.QunxiaNodeDataList[slot1].matchHeroModelId)

	slot0.dayNum:setString(TR("今日次数:%s%s/%s", "#67a31e", slot7 - slot6, slot7))
	slot0.ownNum:setString(TR("拥有数量:{%s}%s%s", slot9, "#df0a0a", Resource.getCount(slot8)))

	slot11 = HeroModel.items[slot0.QunxiaNodeDataList[slot1].matchHeroModelId].initStar
	slot12 = Resource.getCount(HeroModel.items[slot0.QunxiaNodeDataList[slot1].matchHeroModelId].debrisId)
	slot13 = GoodsModel.items[HeroModel.items[slot0.QunxiaNodeDataList[slot1].matchHeroModelId].debrisId].outputNeedNum

	if HeroObj:isHaveModel(slot0.QunxiaNodeDataList[slot1].matchHeroModelId) then
		if table.maxn(HeroStarRelation.items[slot2.matchHeroModelId]) <= slot11 then
			slot0.upStarNum:setString(TR("碎片：%s%s", "#67a31e", slot12))
		else
			slot0.upStarNum:setString(TR("升星：%s%s/%s", "#67a31e", slot12, slot13))
		end
	else
		slot0.upStarNum:setString(TR("合成：%s%s/%s", "#67a31e", slot12, slot13))
	end

	return 
end
slot0.cbCellSizeFunc = function (slot0, slot1, slot2)
	return 430, 210
end
slot0.cbNumOfCellsFunc = function (slot0, slot1)
	return #slot0.QunxiaChapterList
end
slot0.cbCellFillFunc = function (slot0, slot1, slot2)
	slot3 = slot0.createLayoutTemplateNode(slot0, "mTaskTemplate")
	slot3.refreshCell = function (slot0, slot1)
		table.insert(slot0.oldList, slot1)
		slot0.desName:setString(slot3)
		table.sort(slot2, function (slot0, slot1)
			return slot0.nodeId < slot1.nodeId
		end)

		for slot8, slot9 in ipairs(slot4) do
			slot9.setClickAction(slot9, function ()
				if 0 < #slot0.oldList then
					for slot3, slot4 in pairs(slot0.oldList) do
						if not tolua.isnull(slot0.mTableView:cellAtIndex(slot4)) then
							for slot9, slot10 in ipairs(slot0:getCustomChildren(slot5.newNode, "tag")) do
								slot10.chooseImg:setVisible(false)
							end
						end
					end
				elseif not tolua.isnull(slot0.mTableView:cellAtIndex(slot0.mTableView)) then
					for slot4, slot5 in ipairs(slot0:getCustomChildren(slot0.newNode, "tag")) do
						slot5.chooseImg:setVisible(false)
					end
				end

				if slot2 <= slot0.nodeId then
					slot3.chooseImg:setVisible(true)
					slot3.chooseImg.setVisible:refreshRightInfo(true)
				else
					ui.showFlashView(TR("%s级解锁", slot4[slot5].openLv))
				end

				slot0.chooseNode = slot2

				return 
			end)

			if slot2[slot8].nodeId == slot0.chooseNode then
				slot9.chooseImg:setVisible(true)
			else
				slot9.chooseImg:setVisible(false)
			end

			slot9.cardNode:setCardData({
				modelId = slot2[slot8].matchHeroModelId
			})
			slot9.setTitleText(slot9, TR("%s", HeroModel.items[slot2[slot8].matchHeroModelId].name))
			slot9.getTitleLabel(slot9):setColor(Utility.getColorValue(Resource.getColorLv(slot2[slot8].matchHeroModelId)))

			if slot10 <= slot0.nodeId then
				slot9.des:setString(TR("可寻侠"))
			else
				slot9.des:setString(TR("%s级解锁", slot2[slot8].openLv))
			end
		end

		return 
	end

	slot3.refreshCell(slot3, slot2)
	slot3.setPositionY(slot3, 0)
	slot1.addChild(slot1, slot3)

	slot1.newNode = slot3

	return 
end
slot0.cbCellUpdateFunc = function (slot0, slot1, slot2)
	slot1.newNode:refreshCell(slot2)

	return 
end
slot0.onCloseBtnClick = function (slot0)
	LayerManager.removeLayer(slot0)

	return 
end
slot0.onXunXiaClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "xunxia.QuickXunXiaListLayer",
		data = {
			allChapterInfo = slot0.mQunxiaChapterInfo,
			qiecuoCount = slot0.mFightNum,
			fightBuyNum = slot0.mFightBuyNum
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onPlayerShowClick = function (slot0)
	LayerManager.addLayer({
		name = "xunxia.XunXiaZhuanJiLayer",
		data = {
			allChapterInfo = slot0.mQunxiaChapterInfo,
			matchHeroModelId = slot0.QunxiaNodeDataList[slot0.chooseNode].matchHeroModelId
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.onXunXiaOneClick = function (slot0)
	if Resource.getCount(slot1) < 1 then
		ui.showFlashView(TR("%s不足!", Resource.getName(slot1)))

		return 
	end

	slot3, slot4 = slot0.foundCount(slot0, slot0.canXunXiaList[slot0.chooseNode].matchHeroModelId)

	if slot4 - slot3 <= 0 then
		ui.showFlashView(TR("今日寻侠次数不足!"))

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "Visit",
		moduleName = "QunxiaChapter",
		methodData = {
			slot0.chooseNode,
			1
		},
		successCallback = function (slot0)
			dump(slot0, "========Visit1=======")

			slot0.canXunXiaList[slot0.chooseNode].Draw = slot0.QunxiaNodeInfo.Draw
			slot0.canXunXiaList[slot0.chooseNode].VisitNum = slot0.QunxiaNodeInfo.VisitNum
			slot0.canXunXiaList[slot0.chooseNode].NormalPass = slot0.QunxiaNodeInfo.NormalPass

			LayerManager.addLayer({
				cleanUp = false,
				name = "commonlayer.DlgRewardShowLayer",
				data = {
					rewardStr = slot0.BaseGetGameResourceList[1].Goods,
					okTitle = TR("领取"),
					okCallback = function ()
						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
			slot0:refreshRightInfo(slot0.chooseNode)

			return 
		end
	})

	return 
end
slot0.onXunXiaTenClick = function (slot0)
	if Resource.getCount(slot1) < 10 then
		ui.showFlashView(TR("%s不足!", Resource.getName(slot1)))

		return 
	end

	slot3, slot4 = slot0.foundCount(slot0, slot0.canXunXiaList[slot0.chooseNode].matchHeroModelId)

	if slot4 - slot3 < 10 then
		ui.showFlashView(TR("今日寻侠次数不足!"))

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "Visit",
		moduleName = "QunxiaChapter",
		methodData = {
			slot0.chooseNode,
			10
		},
		successCallback = function (slot0)
			dump(slot0, "========Visit10=======")

			slot0.canXunXiaList[slot0.chooseNode].Draw = slot0.QunxiaNodeInfo.Draw
			slot0.canXunXiaList[slot0.chooseNode].VisitNum = slot0.QunxiaNodeInfo.VisitNum
			slot0.canXunXiaList[slot0.chooseNode].NormalPass = slot0.QunxiaNodeInfo.NormalPass

			LayerManager.addLayer({
				cleanUp = false,
				name = "commonlayer.DlgRewardShowLayer",
				data = {
					rewardStr = slot0.BaseGetGameResourceList[1].Goods,
					okTitle = TR("领取"),
					okCallback = function ()
						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
			slot0:refreshRightInfo(slot0.chooseNode)

			return 
		end
	})

	return 
end
slot0.onQieCuoOneClick = function (slot0)
	if (VipConfig.items[PlayerAttrObj:getPlayerAttrByName("Vip")].freeFightHeroNum + slot0.mFightBuyNum) - slot0.mFightNum < 1 then
		ui.showFlashView(TR("切磋次数不足!"))

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "Compare",
		moduleName = "QunxiaChapter",
		methodData = {
			slot0.chooseNode,
			1
		},
		successCallback = function (slot0)
			dump(slot0, "========Compare1=======")

			slot0.canXunXiaList[slot0.chooseNode].Draw = slot0.QunxiaNodeInfo.Draw
			slot0.canXunXiaList[slot0.chooseNode].VisitNum = slot0.QunxiaNodeInfo.VisitNum
			slot0.canXunXiaList[slot0.chooseNode].NormalPass = slot0.QunxiaNodeInfo.NormalPass

			LayerManager.addLayer({
				cleanUp = false,
				name = "commonlayer.DlgRewardShowLayer",
				data = {
					rewardStr = slot0.BaseGetGameResourceList[1].Goods,
					okTitle = TR("领取"),
					okCallback = function ()
						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
			slot0:refreshQunXiaBuy(slot0)

			return 
		end
	})

	return 
end
slot0.onQieCuoTenClick = function (slot0)
	if (VipConfig.items[PlayerAttrObj:getPlayerAttrByName("Vip")].freeFightHeroNum + slot0.mFightBuyNum) - slot0.mFightNum < 10 then
		ui.showFlashView(TR("切磋次数不足!"))

		return 
	end

	slot0.socketRequest(slot0, {
		methodName = "Compare",
		moduleName = "QunxiaChapter",
		methodData = {
			slot0.chooseNode,
			10
		},
		successCallback = function (slot0)
			dump(slot0, "========Compare10=======")

			slot0.canXunXiaList[slot0.chooseNode].Draw = slot0.QunxiaNodeInfo.Draw
			slot0.canXunXiaList[slot0.chooseNode].VisitNum = slot0.QunxiaNodeInfo.VisitNum
			slot0.canXunXiaList[slot0.chooseNode].NormalPass = slot0.QunxiaNodeInfo.NormalPass

			LayerManager.addLayer({
				cleanUp = false,
				name = "commonlayer.DlgRewardShowLayer",
				data = {
					rewardStr = slot0.BaseGetGameResourceList[1].Goods,
					okTitle = TR("领取"),
					okCallback = function ()
						return 
					end
				},
				zOrder = Enums.ZOrderType.ePopLayer
			})
			slot0:refreshQunXiaBuy(slot0)

			return 
		end
	})

	return 
end
slot0.onRuleClick = function (slot0)
	ui.showRuleMsg({
		textList = {
			TR("1、不同星期几分别可挑战不同的模式；"),
			TR("2、不同模式会产出不同的资源道具；"),
			TR("3、出战会有阵营和职业限制；"),
			TR("4、关卡越后获得的奖励越好。")
		}
	})

	return 
end
slot0.onSellClick = function (slot0)
	LayerManager.addLayer({
		cleanUp = false,
		name = "xunxia.XunXiaBuyCountLayer",
		data = {
			fightBuyNum = slot0.mFightBuyNum
		},
		zOrder = Enums.ZOrderType.ePopLayer
	})

	return 
end
slot0.refreshQunXiaBuy = function (slot0, slot1)
	slot0.mFightNum = slot1.QunxiaInfo.FightNum
	slot0.mFightBuyNum = slot1.QunxiaInfo.FightBuyNum

	slot0.refreshRightInfo(slot0, slot0.chooseNode)

	return 
end
slot0.foundCount = function (slot0, slot1)
	slot2 = 0
	slot3 = 0

	for slot7, slot8 in pairs(slot0.QunxiaNodeDataList) do
		if slot8.matchHeroModelId == slot1 and slot8.NormalPass then
			slot2 = slot2 + slot8.VisitNum
			slot3 = slot3 + QunxiaConfig.items[1].nodeVisitNum
		end
	end

	return slot2, slot3
end
slot0.refreeXunXiaCount = function (slot0, slot1)
	for slot5, slot6 in pairs(slot1) do
		for slot10, slot11 in pairs(slot6.QunxiaNodeInfo) do
			slot0.QunxiaNodeDataList[slot11.NodeId].Draw = slot11.Draw
			slot0.QunxiaNodeDataList[slot11.NodeId].VisitNum = slot11.VisitNum
			slot0.QunxiaNodeDataList[slot11.NodeId].NormalPass = slot11.NormalPass
		end
	end

	slot0.refreshRightInfo(slot0, slot0.chooseNode)

	return 
end
slot0.getQunxiaInfo = function (slot0)
	slot0.socketRequest(slot0, {
		methodName = "QunxiaChapterInfo",
		moduleName = "QunxiaChapter",
		methodData = {},
		successCallback = function (slot0)
			slot0.mQunxiaChapterInfo = slot0.QunxiaAllChapterInfo.QunxiaChapterInfo
			slot0.mFightNum = slot0.QunxiaInfo.FightNum
			slot0.mFightBuyNum = slot0.QunxiaInfo.FightBuyNum
			slot0.canTmPXunXiaList = {}
			slot0.canXunXiaList = {}

			for slot4, slot5 in pairs(slot0.mQunxiaChapterInfo) do
				if slot0.chapterModel < slot5.ChapterModel then
					slot0.chapterModel = slot5.ChapterModel
				end

				for slot9, slot10 in pairs(slot5.QunxiaNodeInfo) do
					table.insert(slot0.canTmPXunXiaList, slot10)
				end
			end

			slot0.chooseNode = 1101

			for slot4, slot5 in pairs(slot0.mQunxiaChapterInfo[tostring(slot0.chapterModel)].QunxiaNodeInfo) do
				if slot0.nodeId < slot5.NodeId then
					if slot5.NormalPass then
						slot0.chooseNode = slot5.NodeId
					end

					slot0.nodeId = slot5.NodeId
				end
			end

			for slot4, slot5 in ipairs(slot0.canTmPXunXiaList) do
				slot0.canXunXiaList[slot5.NodeId] = slot5
			end

			for slot4, slot5 in pairs(QunxiaNodeModel.items) do
				slot0.QunxiaNodeDataList[slot5.nodeId] = slot5
				slot0.QunxiaNodeDataList[slot5.nodeId].Draw = false
				slot0.QunxiaNodeDataList[slot5.nodeId].VisitNum = 0
				slot0.QunxiaNodeDataList[slot5.nodeId].NormalPass = false
			end

			for slot4, slot5 in pairs(slot0.mQunxiaChapterInfo) do
				for slot9, slot10 in pairs(slot5.QunxiaNodeInfo) do
					slot0.QunxiaNodeDataList[slot10.NodeId].Draw = slot10.Draw
					slot0.QunxiaNodeDataList[slot10.NodeId].VisitNum = slot10.VisitNum
					slot0.QunxiaNodeDataList[slot10.NodeId].NormalPass = slot10.NormalPass
				end
			end

			slot0:refreshRightInfo(slot0.chooseNode)
			slot0.mTableView:reloadData()

			return 
		end
	})

	return 
end

return slot0
